{
  "version": 3,
  "sources": ["src/app/feature/Dashboard/DashboardComponent/client/client-dashboard.component.ts", "src/app/feature/Dashboard/DashboardComponent/client/profile/client-profile.component.ts", "src/app/components/Product/product-detail.component.ts", "src/app/components/Cart/cart.component.ts", "src/app/components/Cart/cart.component.html", "src/app/feature/Dashboard/DashboardComponent/client/Products/client-products.component.ts", "src/app/feature/Dashboard/DashboardComponent/client/orders/client-orders.component.ts", "src/app/feature/Dashboard/DashboardComponent/client/orders/client-order-detail.component.ts", "src/app/feature/Dashboard/DashboardComponent/client/client.routes.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-client-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],  // Importation des modules n√©cessaires\r\n  template: `\r\n    <div class=\"client-layout\">\r\n      <!-- Sidebar avec navigation -->\r\n      <nav class=\"sidebar\">\r\n        <div class=\"logo\">\r\n          <h1>GOHAN-MED</h1>  <!-- Nom de l'application -->\r\n          <p>Espace Client</p>  <!-- Description de l'espace utilisateur -->\r\n        </div>\r\n        <ul class=\"nav-links\">\r\n          <!-- Liste des liens de navigation -->\r\n          <li>\r\n            <a routerLink=\"products\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üè•</span>  <!-- Ic√¥ne des produits -->\r\n              Nos Produits\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"prescriptions\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üìã</span>  <!-- Ic√¥ne des ordonnances -->\r\n              Mes Ordonnances\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/manufacturing/request\" routerLinkActive=\"active\" class=\"custom-med-link\">\r\n              <span class=\"icon\">‚öóÔ∏è</span>  <!-- Ic√¥ne pour la fabrication sur mesure -->\r\n              Fabrication sur Mesure\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"appointments\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üìÖ</span>  <!-- Ic√¥ne des rendez-vous -->\r\n              Rendez-vous\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"cart\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üõí</span>  <!-- Ic√¥ne du panier -->\r\n              Mon Panier\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"orders\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üì¶</span>  <!-- Ic√¥ne des commandes -->\r\n              Mes Commandes\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"profile\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üë§</span>  <!-- Ic√¥ne du profil -->\r\n              Mon Profil\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a routerLink=\"/manufacturing/list\" routerLinkActive=\"active\">\r\n              <span class=\"icon\">üß™</span>  <!-- Ic√¥ne des fabrications -->\r\n              Mes Fabrications\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"logout\">\r\n          <!-- Bouton de d√©connexion -->\r\n          <button (click)=\"logout()\" class=\"logout-btn\">\r\n            <span class=\"icon\">üö™</span>  <!-- Ic√¥ne de d√©connexion -->\r\n            Se d√©connecter\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <main class=\"main-content\">\r\n        <!-- Zone principale o√π les vues sont rendues -->\r\n        <router-outlet></router-outlet>  <!-- Affiche le contenu des routes -->\r\n      </main>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .client-layout {\r\n      display: flex;  /* Utilisation du flexbox pour le layout */\r\n      min-height: 100vh;\r\n    }\r\n\r\n    .sidebar {\r\n      width: 250px;\r\n      background: #0066CC;  /* Couleur de fond de la sidebar */\r\n      padding: 1.5rem;\r\n      color: white;\r\n      display: flex;\r\n      flex-direction: column;\r\n      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .logo {\r\n      padding: 1rem;\r\n      text-align: center;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n      margin-bottom: 1.5rem;\r\n\r\n      h1 {\r\n        font-size: 1.5rem;\r\n        margin: 0;\r\n        font-weight: bold;\r\n        color: white;\r\n      }\r\n\r\n      p {\r\n        margin: 0.5rem 0 0;\r\n        font-size: 0.9rem;\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n\r\n    .nav-links {\r\n      list-style: none;\r\n      padding: 0;\r\n      margin: 0;\r\n      flex: 1;\r\n\r\n      li a {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0.75rem 1rem;\r\n        color: white;\r\n        text-decoration: none;\r\n        border-radius: 6px;\r\n        margin-bottom: 0.5rem;\r\n        transition: all 0.2s ease;\r\n        font-weight: 500;\r\n\r\n        .icon {\r\n          margin-right: 0.75rem;\r\n          font-size: 1.2rem;\r\n        }\r\n\r\n        &:hover {\r\n          background: rgba(255, 255, 255, 0.1);\r\n          transform: translateX(5px);\r\n        }\r\n\r\n        &.active {\r\n          background: rgba(255, 255, 255, 0.2);\r\n          font-weight: bold;\r\n        }\r\n      }\r\n    }\r\n\r\n    .logout {\r\n      padding-top: 1rem;\r\n      border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .logout-btn {\r\n      width: 100%;\r\n      padding: 0.75rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      background: none;\r\n      color: #FFD2D2;\r\n      border: 1px solid #FFD2D2;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      font-weight: 500;\r\n      transition: all 0.2s ease;\r\n\r\n      .icon {\r\n        margin-right: 0.5rem;\r\n      }\r\n\r\n      &:hover {\r\n        background: rgba(255, 210, 210, 0.1);\r\n        color: white;\r\n      }\r\n    }\r\n\r\n    .main-content {\r\n      flex: 1;\r\n      padding: 2rem;\r\n      background: #f8fafc;\r\n      overflow-y: auto;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .client-layout {\r\n        flex-direction: column;  /* Adaptation du layout pour les √©crans plus petits */\r\n      }\r\n\r\n      .sidebar {\r\n        width: 100%;\r\n        padding: 1rem;\r\n      }\r\n\r\n      .nav-links li a {\r\n        padding: 1rem;\r\n        justify-content: center;\r\n\r\n        .icon {\r\n          margin-right: 0.5rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    .custom-med-link {\r\n      background: #4CAF50 !important;  /* Style sp√©cifique pour \"Fabrication sur Mesure\" */\r\n      color: white !important;\r\n      border-radius: 20px !important;\r\n      margin: 0.5rem 0;\r\n      \r\n      &:hover {\r\n        background: #45a049 !important;\r\n        transform: translateX(5px) translateY(-2px) !important;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class ClientDashboardComponent {\r\n  // Injection des services n√©cessaires dans le constructeur\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  // M√©thode de d√©connexion\r\n  logout() {\r\n    if (confirm('√ätes-vous s√ªr de vouloir vous d√©connecter ?')) {  // Confirme la d√©connexion\r\n      this.authService.logout();  // Appelle le service de d√©connexion\r\n      this.router.navigate(['/login']);  // Redirige l'utilisateur vers la page de connexion\r\n    }\r\n  }\r\n}\r\n", "// Importation des modules n√©cessaires pour le composant Angular\r\nimport { Component, OnInit } from '@angular/core'; // Pour le cycle de vie du composant\r\nimport { CommonModule } from '@angular/common'; // Pour les fonctionnalit√©s communes dans Angular\r\nimport { FormsModule } from '@angular/forms'; // Pour utiliser le two-way data binding\r\nimport { ClientService } from '../../../../../services'; // Service pour interagir avec l'API\r\nimport { Client } from '../../../../../models/client/client.model'; // Mod√®le repr√©sentant un client\r\nimport { User } from '../../../../../models/user/user.model'; // Mod√®le repr√©sentant un utilisateur\r\n\r\n// Interface d√©finissant un client avec un utilisateur (client avec ses donn√©es utilisateur associ√©es)\r\ninterface ClientWithUser extends Client {\r\n  user: User; // Propri√©t√© \"user\" forc√©e √† ne pas √™tre nulle\r\n}\r\n\r\n// D√©finition du composant Angular\r\n@Component({\r\n  selector: 'app-client-profile', // S√©lecteur du composant pour l'utiliser dans le template\r\n  standalone: true, // Indique que ce composant peut √™tre utilis√© de mani√®re autonome sans module\r\n  imports: [CommonModule, FormsModule], // Modules √† importer pour ce composant\r\n  template: `\r\n    <div class=\"profile-container\">\r\n      <h2>Mon Profil</h2>\r\n\r\n      <!-- Si le client existe, on affiche ses informations -->\r\n      @if (client) {\r\n        <div class=\"profile-info\">\r\n          <div class=\"info-group\">\r\n            <label>Nom</label>\r\n            <p>{{client.lastName}}</p> <!-- Affiche le nom du client -->\r\n          </div>\r\n          <div class=\"info-group\">\r\n            <label>Pr√©nom</label>\r\n            <p>{{client.firstName}}</p> <!-- Affiche le pr√©nom du client -->\r\n          </div>\r\n          <div class=\"info-group\">\r\n            <label>Email</label>\r\n            <p>{{client.user.email}}</p> <!-- Affiche l'email de l'utilisateur associ√© -->\r\n          </div>\r\n          <div class=\"info-group\">\r\n            <label>Adresse</label>\r\n            <p>{{client.address}}</p> <!-- Affiche l'adresse du client -->\r\n          </div>\r\n\r\n          <!-- Bouton permettant de passer en mode √©dition -->\r\n          <button (click)=\"editMode = true\" class=\"edit-btn\">\r\n            Modifier le profil\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Si le mode √©dition est activ√©, afficher le formulaire de modification -->\r\n        @if (editMode) {\r\n          <form (ngSubmit)=\"updateProfile()\" class=\"edit-form\">\r\n            <div class=\"form-group\">\r\n              <label for=\"lastName\">Nom</label>\r\n              <input\r\n                id=\"lastName\"\r\n                [(ngModel)]=\"editForm.lastName\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                required\r\n              > <!-- Champ de saisie pour le nom -->\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"firstName\">Pr√©nom</label>\r\n              <input\r\n                id=\"firstName\"\r\n                [(ngModel)]=\"editForm.firstName\"\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                required\r\n              > <!-- Champ de saisie pour le pr√©nom -->\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"address\">Adresse</label>\r\n              <input\r\n                id=\"address\"\r\n                [(ngModel)]=\"editForm.address\"\r\n                name=\"address\"\r\n                type=\"text\"\r\n                required\r\n              > <!-- Champ de saisie pour l'adresse -->\r\n            </div>\r\n\r\n            <!-- Actions du formulaire : enregistrement ou annulation -->\r\n            <div class=\"form-actions\">\r\n              <button type=\"submit\" class=\"save-btn\">Enregistrer</button>\r\n              <button type=\"button\" (click)=\"editMode = false\" class=\"cancel-btn\">\r\n                Annuler\r\n              </button>\r\n            </div>\r\n          </form>\r\n        }\r\n      }\r\n    </div>\r\n  `,\r\n  styles: [/* ... styles restent les m√™mes ... */] // Styles de ce composant\r\n})\r\nexport class ClientProfileComponent implements OnInit {\r\n  // D√©claration des variables d'√©tat du composant\r\n  client: ClientWithUser | null = null; // Le client avec ses informations, initialis√© √† null\r\n  editMode = false; // Indicateur pour savoir si le formulaire est en mode √©dition\r\n  editForm: Partial<Client> = {}; // Formulaire de modification avec des champs partiels du client\r\n\r\n  // Injection du service ClientService pour interagir avec l'API\r\n  constructor(private clientService: ClientService) {}\r\n\r\n  // M√©thode appel√©e lors de l'initialisation du composant\r\n  ngOnInit(): void {\r\n    this.loadProfile(); // Chargement du profil du client lors de l'initialisation\r\n  }\r\n\r\n  // M√©thode pour charger le profil du client via le service\r\n  loadProfile(): void {\r\n    this.clientService.getClientProfile().subscribe({\r\n      next: (clientData) => {\r\n        // Si les donn√©es du client sont re√ßues et contiennent un utilisateur\r\n        if (clientData && clientData.user) {\r\n          this.client = clientData as ClientWithUser; // Assigner les donn√©es du client\r\n          this.editForm = { // Pr√©parer le formulaire avec les donn√©es actuelles du client\r\n            firstName: this.client.firstName,\r\n            lastName: this.client.lastName,\r\n            address: this.client.address\r\n          };\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur chargement profil:', error); // Gestion des erreurs de chargement\r\n      }\r\n    });\r\n  }\r\n\r\n  // M√©thode pour mettre √† jour le profil du client\r\n  updateProfile(): void {\r\n    if (this.client && this.editForm) {\r\n      // Si le client et le formulaire sont d√©finis, proc√©der √† la mise √† jour\r\n      this.clientService.updateProfile(this.client.clientId, this.editForm).subscribe({\r\n        next: (updatedClient) => {\r\n          // Si les donn√©es mises √† jour sont re√ßues et contiennent un utilisateur\r\n          if (updatedClient && updatedClient.user) {\r\n            this.client = updatedClient as ClientWithUser; // Mettre √† jour le profil\r\n            this.editMode = false; // D√©sactiver le mode √©dition\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Erreur mise √† jour profil:', error); // Gestion des erreurs de mise √† jour\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n", "// components/Product/product-detail.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {Product, ProductWithPromotion} from '../../models/product/product.model';\r\nimport {ProductService} from '../../services/product/product.service';\r\nimport {NotificationService} from '../../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-product-detail',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterLink],\r\n  template: `\r\n    @if (product) {\r\n      <div class=\"product-detail\">\r\n        <div class=\"product-card\">\r\n          <div class=\"product-header\">\r\n            <h1>{{ product.name }}</h1>\r\n          </div>\r\n\r\n          <div class=\"product-image\">\r\n            <img [src]=\"product.imageUrls[0] || '/assets/placeholder.jpg'\" [alt]=\"product.name\">\r\n          </div>\r\n\r\n          <div class=\"product-content\">\r\n            <p class=\"description\">{{ product.description }}</p>\r\n\r\n            <div class=\"price-section\">\r\n              <p class=\"price\" [class.promoted]=\"product.activePromotion\">\r\n                @if (product.activePromotion) {\r\n                  <span class=\"original-price\">\r\n                {{ product.price | currency:'EUR' }}\r\n              </span>\r\n                  <span class=\"promotion-price\">\r\n                {{ product.promotionPrice | currency:'EUR' }}\r\n              </span>\r\n                } @else {\r\n                  <span class=\"current-price\">\r\n                {{ product.price | currency:'EUR' }}\r\n              </span>\r\n                }\r\n              </p>\r\n            </div>\r\n            <p class=\"stock\" [class.low-stock]=\"product.stock < 5\">\r\n              Stock disponible: {{ product.stock }}\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"product-actions\">\r\n            <button\r\n              class=\"add-cart-btn\"\r\n              (click)=\"addToCart(product)\"\r\n              [disabled]=\"product.stock === 0\"\r\n            >\r\n              @if (product.stock === 0) {\r\n                Rupture de stock\r\n              } @else {\r\n                Ajouter au panier\r\n              }\r\n            </button>\r\n            <button class=\"back-btn\" routerLink=\"/client/products\">\r\n              Retour aux produits\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    } @else {\r\n      <div class=\"loading-state\">\r\n        Chargement du produit...\r\n      </div>\r\n    }\r\n  `,\r\n  styles: [`\r\n    .product-detail {\r\n      max-width: 800px;\r\n      margin: 2rem auto;\r\n      padding: 0 1rem;\r\n    }\r\n\r\n    .product-card {\r\n      background: white;\r\n      border-radius: 12px;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n      overflow: hidden;\r\n    }\r\n\r\n    .product-header {\r\n      padding: 1.5rem;\r\n      border-bottom: 1px solid #e5e7eb;\r\n\r\n      h1 {\r\n        margin: 0;\r\n        color: #1a1a1a;\r\n        font-size: 1.5rem;\r\n      }\r\n    }\r\n\r\n    .product-image {\r\n      width: 100%;\r\n      height: 400px;\r\n      overflow: hidden;\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    .product-content {\r\n      padding: 1.5rem;\r\n\r\n      .description {\r\n        color: #4b5563;\r\n        line-height: 1.6;\r\n        margin-bottom: 1.5rem;\r\n      }\r\n    }\r\n\r\n    .price-section {\r\n      margin: 1.5rem 0;\r\n\r\n      .price {\r\n        font-size: 1.5rem;\r\n        font-weight: 600;\r\n\r\n        &.promoted {\r\n          .original-price {\r\n            text-decoration: line-through;\r\n            color: #9ca3af;\r\n            font-size: 1.125rem;\r\n            margin-right: 0.5rem;\r\n          }\r\n\r\n          .promotion-price {\r\n            color: #dc2626;\r\n          }\r\n        }\r\n\r\n        .current-price {\r\n          color: #2196F3;\r\n        }\r\n      }\r\n    }\r\n\r\n    .stock {\r\n      font-size: 0.875rem;\r\n      color: #4b5563;\r\n\r\n      &.low-stock {\r\n        color: #dc2626;\r\n      }\r\n    }\r\n\r\n    .product-actions {\r\n      padding: 1.5rem;\r\n      display: flex;\r\n      gap: 1rem;\r\n      border-top: 1px solid #e5e7eb;\r\n\r\n      button {\r\n        padding: 0.75rem 1.5rem;\r\n        border-radius: 6px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n\r\n        &.add-cart-btn {\r\n          flex: 1;\r\n          background: #2196F3;\r\n          color: white;\r\n          border: none;\r\n\r\n          &:hover:not(:disabled) {\r\n            background: #1976D2;\r\n          }\r\n\r\n          &:disabled {\r\n            background: #9ca3af;\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n\r\n        &.back-btn {\r\n          background: white;\r\n          border: 1px solid #d1d5db;\r\n          color: #4b5563;\r\n\r\n          &:hover {\r\n            background: #f9fafb;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .loading-state {\r\n      text-align: center;\r\n      padding: 3rem;\r\n      color: #6b7280;\r\n    }\r\n  `]\r\n})\r\nexport class ProductDetailComponent implements OnInit {\r\n  product?: ProductWithPromotion;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private productService: ProductService,\r\n  private notificationService: NotificationService  // Ajout du service\r\n  ) {}\r\n  // V√©rification de s√©curit√© si n√©cessaire\r\n  hasActivePromotion(): boolean {\r\n    return !!this.product && !!this.product.activePromotion;\r\n  }\r\n\r\n  getPromotionalPrice(): number | undefined {\r\n    return this.product?.promotionPrice;\r\n  }\r\n  ngOnInit() {\r\n    const id = Number(this.route.snapshot.paramMap.get('id'));\r\n    if (id) {\r\n      this.loadProduct(id);\r\n    }\r\n  }\r\n\r\n  private loadProduct(id: number): void {\r\n    this.productService.getProductById(id).subscribe({\r\n      next: (products) => {\r\n        this.product = products|| null;\r\n      },\r\n      error: (error: Error) => {\r\n        console.error('Erreur lors du chargement du produit:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  addToCart(product: Product): void {\r\n    this.productService.addToCart(product, 1).subscribe({\r\n      next: () => {\r\n        this.notificationService.success('Produit ajout√© au panier');\r\n      },\r\n      error: (error) => {\r\n        this.notificationService.error('Erreur lors de l\\'ajout au panier');\r\n        console.error('Error:', error);\r\n      }\r\n    });\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core'; // Importation des modules Angular n√©cessaires\r\nimport { CommonModule } from '@angular/common'; // Importation du module commun d'Angular\r\nimport { CartService } from '../../services'; // Importation du service CartService\r\nimport { CartItem } from '../../models/cart/cart-item.model'; // Importation du mod√®le CartItem\r\nimport { NotificationService } from '../../services/notification/notification.service'; // Importation du service NotificationService\r\nimport { Router } from '@angular/router'; // Importation du module de routage Angular\r\nimport { PromotionService } from '../../services/promotion/promotion.service'; // Importation du service PromotionService\r\n\r\n@Component({\r\n  selector: 'app-cart', // D√©finition du s√©lecteur du composant\r\n  standalone: true, // Indique que le composant est autonome\r\n  imports: [CommonModule], // Importation des modules n√©cessaires\r\n  templateUrl: './cart.component.html', // Lien vers le fichier HTML du composant\r\n  styleUrls: ['./cart.component.scss'] // Lien vers le fichier SCSS du composant\r\n})\r\nexport class CartComponent implements OnInit {\r\n  items: CartItem[] = []; // D√©claration d'un tableau pour stocker les articles du panier\r\n  total: number = 0; // Initialisation du total du panier √† 0\r\n\r\n  constructor(\r\n    private cartService: CartService, // Injection du service CartService\r\n    private promotionService: PromotionService, // Injection du service PromotionService\r\n    private notificationService: NotificationService, // Injection du service NotificationService\r\n    private router: Router // Injection du service Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCart(); // Appel de la m√©thode pour charger les articles du panier au d√©marrage\r\n  }\r\n\r\n  loadCart(): void {\r\n    this.cartService.getCartItems().subscribe({\r\n      next: (items: CartItem[]) => {\r\n        this.items = items; // Stocke les articles r√©cup√©r√©s\r\n        this.calculateTotal(); // Met √† jour le total du panier\r\n      },\r\n      error: () => {\r\n        this.notificationService.error('Erreur lors du chargement du panier'); // Affiche une erreur en cas d'√©chec\r\n      }\r\n    });\r\n  }\r\n\r\n  hasActivePromotion(item: CartItem): boolean {\r\n    return !!item.product.promotion && this.isPromotionActive(item.product.promotion); // V√©rifie si l'article a une promotion active\r\n  }\r\n\r\n  incrementQuantity(item: CartItem): void {\r\n    const newQuantity = item.quantity + 1; // Incr√©mente la quantit√© de l'article\r\n\r\n    if (newQuantity > item.product.stock) { // V√©rifie si la nouvelle quantit√© d√©passe le stock\r\n      this.notificationService.error('Stock maximum atteint');\r\n      return;\r\n    }\r\n\r\n    this.updateCartItemQuantity(item, newQuantity); // Met √† jour la quantit√© de l'article\r\n  }\r\n\r\n  decrementQuantity(item: CartItem): void {\r\n    const newQuantity = item.quantity - 1; // D√©cr√©mente la quantit√© de l'article\r\n\r\n    if (newQuantity < 1) { // V√©rifie si la quantit√© est inf√©rieure √† 1\r\n      this.notificationService.error('Quantit√© minimum atteinte');\r\n      return;\r\n    }\r\n\r\n    this.updateCartItemQuantity(item, newQuantity); // Met √† jour la quantit√© de l'article\r\n  }\r\n\r\n  updateCartItemQuantity(item: CartItem, newQuantity: number): void {\r\n    this.cartService.updateQuantity(item.id, newQuantity).subscribe({\r\n      next: () => {\r\n        item.quantity = newQuantity; // Met √† jour la quantit√© dans l'interface\r\n        this.calculateTotal(); // Recalcule le total du panier\r\n      },\r\n      error: () => {\r\n        this.notificationService.error('Erreur lors de la mise √† jour de la quantit√©'); // Affiche une erreur en cas d'√©chec\r\n      }\r\n    });\r\n  }\r\n\r\n  removeItem(item: CartItem): void {\r\n    this.cartService.removeFromCart(item.id).subscribe({\r\n      next: () => {\r\n        this.items = this.items.filter(i => i.id !== item.id); // Supprime l'article de la liste\r\n        this.calculateTotal(); // Met √† jour le total du panier\r\n      },\r\n      error: () => {\r\n        this.notificationService.error('Erreur lors de la suppression du produit'); // Affiche une erreur en cas d'√©chec\r\n      }\r\n    });\r\n  }\r\n\r\n  clearCart(): void {\r\n    this.cartService.clearCart().subscribe({\r\n      next: () => {\r\n        this.items = []; // Vide la liste des articles\r\n        this.total = 0; // R√©initialise le total √† 0\r\n        this.notificationService.success('Panier vid√©'); // Affiche un message de succ√®s\r\n      },\r\n      error: () => {\r\n        this.notificationService.error('Erreur lors du vidage du panier'); // Affiche une erreur en cas d'√©chec\r\n      }\r\n    });\r\n  }\r\n\r\n  proceedToCheckout(): void {\r\n    if (this.items.length === 0) { // V√©rifie si le panier est vide\r\n      this.notificationService.error('Votre panier est vide');\r\n      return;\r\n    }\r\n\r\n    this.router.navigate(['/client/checkout']).then(\r\n      () => this.notificationService.success('Redirection vers le checkout'), // Redirige vers la page de checkout\r\n      () => this.notificationService.error('Erreur lors de l\\'acc√®s au checkout') // Affiche une erreur en cas d'√©chec\r\n    );\r\n  }\r\n\r\n  getItemPrice(item: CartItem): number {\r\n    if (this.hasActivePromotion(item)) { // V√©rifie si l'article a une promotion active\r\n      return item.product.price * (1 - (item.product.promotion?.discountPercentage || 0) / 100); // Calcule le prix avec la r√©duction\r\n    }\r\n    return item.product.price; // Retourne le prix normal si pas de promotion\r\n  }\r\n\r\n  getSubTotal(item: CartItem): number {\r\n    return this.getItemPrice(item) * item.quantity; // Calcule le sous-total d'un article\r\n  }\r\n\r\n  calculateTotal(): void {\r\n    this.total = this.items.reduce((sum, item) => sum + this.getSubTotal(item), 0); // Calcule le total du panier\r\n  }\r\n\r\n  getDiscountedPrice(product: any): number {\r\n    if (!product.activePromotion || !this.isPromotionActive(product.activePromotion)) { // V√©rifie si la promotion est active\r\n      return product.price;\r\n    }\r\n\r\n    const discount = product.activePromotion.discountPercentage; // R√©cup√®re le pourcentage de r√©duction\r\n    const discountedPrice = product.price * (1 - discount / 100); // Applique la r√©duction\r\n    return Number(discountedPrice.toFixed(2)); // Retourne le prix arrondi √† 2 d√©cimales\r\n  }\r\n\r\n  isPromotionActive(promotion: any): boolean {\r\n    if (!promotion) return false; // V√©rifie si la promotion est d√©finie\r\n    const now = new Date(); // R√©cup√®re la date actuelle\r\n    const startDate = new Date(promotion.startDate); // Convertit la date de d√©but\r\n    const endDate = new Date(promotion.endDate); // Convertit la date de fin\r\n    return now >= startDate && now <= endDate; // V√©rifie si la promotion est active\r\n  }\r\n}\r\n", "<div class=\"cart-container\">\r\n  <!-- Titre principal de la section panier -->\r\n  <h2>Mon Panier</h2>\r\n\r\n  <!-- Affiche un message lorsque le panier est vide -->\r\n  <div *ngIf=\"items.length === 0\" class=\"empty-cart\">\r\n    Votre panier est vide\r\n  </div>\r\n\r\n  <!-- Affiche les articles du panier si le panier n'est pas vide -->\r\n  <div *ngIf=\"items.length > 0\" class=\"cart-items\">\r\n    <!-- Parcourt les articles du panier -->\r\n    <div *ngFor=\"let item of items\" class=\"cart-item\">\r\n      <div class=\"item-info\">\r\n        <!-- Nom du produit -->\r\n        <h3>{{ item.product.name }}</h3>\r\n\r\n        <!-- Gestion des prix et promotions -->\r\n        <div class=\"price-container\">\r\n          <!-- Si une promotion est active, affiche le prix original barr√© et le prix promotionnel -->\r\n          <ng-container *ngIf=\"hasActivePromotion(item)\">\r\n            <span class=\"original-price\">{{ item.product.price | currency:'EUR' }}</span>\r\n            <span class=\"promo-price\">{{ getItemPrice(item) | currency:'EUR' }}</span>\r\n            <span class=\"discount\">(-{{item.product.promotion?.discountPercentage}}%)</span>\r\n          </ng-container>\r\n\r\n          <!-- Si aucune promotion n'est active, affiche uniquement le prix normal -->\r\n          <ng-container *ngIf=\"!hasActivePromotion(item)\">\r\n            <span class=\"price\">{{ item.product.price | currency:'EUR' }}</span>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <!-- Contr√¥les pour modifier la quantit√© de l'article -->\r\n        <div class=\"quantity-controls\">\r\n          <!-- Bouton pour diminuer la quantit√©, d√©sactiv√© si la quantit√© est √©gale √† 1 -->\r\n          <button\r\n            (click)=\"decrementQuantity(item)\"\r\n            [disabled]=\"item.quantity <= 1\"\r\n            class=\"quantity-btn\"\r\n          >\r\n            -\r\n          </button>\r\n          <!-- Affiche la quantit√© actuelle -->\r\n          <span class=\"quantity\">{{ item.quantity }}</span>\r\n          <!-- Bouton pour augmenter la quantit√©, d√©sactiv√© si le stock maximal est atteint -->\r\n          <button\r\n            (click)=\"incrementQuantity(item)\"\r\n            [disabled]=\"item.quantity >= item.product.stock\"\r\n            class=\"quantity-btn\"\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Sous-total pour cet article -->\r\n        <p>Sous-total: {{ getSubTotal(item) | currency:'EUR' }}</p>\r\n      </div>\r\n\r\n      <!-- Bouton pour supprimer cet article du panier -->\r\n      <button (click)=\"removeItem(item)\" class=\"remove-btn\">Supprimer</button>\r\n    </div>\r\n\r\n    <!-- R√©sum√© du panier -->\r\n    <div class=\"cart-summary\">\r\n      <!-- Montant total du panier -->\r\n      <p class=\"total\">Total: {{ total | currency:'EUR' }}</p>\r\n      <!-- Actions li√©es au panier -->\r\n      <div class=\"cart-actions\">\r\n        <!-- Bouton pour vider compl√®tement le panier -->\r\n        <button (click)=\"clearCart()\" class=\"clear-btn\">Vider le panier</button>\r\n        <!-- Bouton pour passer √† l'√©tape de paiement -->\r\n        <button (click)=\"proceedToCheckout()\" class=\"checkout-btn\">Commander</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {Product, ProductWithPromotion} from '../../../../../models/product/product.model';\r\nimport { ProductService } from '../../../../../services/product/product.service';\r\nimport { CartService } from '../../../../../services';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {take} from 'rxjs';\r\nimport {PromotionService} from '../../../../../services/promotion/promotion.service';\r\nimport {PromotionTimerComponent} from '../../../../../components/Promotion/promotion-timer.component';\r\n\r\n\r\n// D√©finition de l'interface pour un type de produit\r\nexport interface Type {\r\n  id_type: number;  // Identifiant du type\r\n  name: string;  // Nom du type\r\n  description: string;  // Description du type\r\n  icon: string;  // Ic√¥ne associ√©e au type\r\n  prescription_required: boolean;  // Si une prescription est requise pour ce type\r\n  products?: Product[];  // Liste des produits associ√©s (facultatif)\r\n}\r\n@Component({\r\n  selector: 'app-client-products',  // S√©lecteur du composant\r\n  standalone: true,  // Indique que ce composant est autonome\r\n  imports: [CommonModule, RouterModule, FormsModule, PromotionTimerComponent],  // Importation des modules n√©cessaires\r\n  template: `\r\n    <div class=\"products-container\">\r\n      <header class=\"page-header\">\r\n        <h2>Nos Produits</h2>\r\n\r\n        <div class=\"filter-container\">\r\n          <select\r\n            [(ngModel)]=\"selectedType\"\r\n            (change)=\"filterProducts()\"\r\n            class=\"type-filter\"\r\n          >\r\n            <option *ngFor=\"let type of typeOptions\" [value]=\"type.value\">\r\n              {{ type.label }}\r\n            </option>\r\n          </select>\r\n\r\n          <select\r\n            [(ngModel)]=\"sortOrder\"\r\n            (change)=\"sortProducts()\"\r\n            class=\"price-filter\"\r\n          >\r\n            <option value=\"default\">Tri par d√©faut</option>\r\n            <option value=\"prixCroissant\">Prix croissant</option>\r\n            <option value=\"prixDecroissant\">Prix d√©croissant</option>\r\n            <option value=\"promotion\">Promotions d'abord</option>\r\n          </select>\r\n        </div>\r\n      </header>\r\n\r\n      <div class=\"products-grid\">\r\n        @for (product of products; track product.id_product) {\r\n          <div class=\"product-card\">\r\n            <div class=\"product-image\">\r\n              <img [src]=\"'assets/' + getImageFilename(product.name)\" [alt]=\"product.name\">\r\n              @if (product.activePromotion) {\r\n                <div class=\"promo-container\">\r\n\r\n                  <app-promotion-timer [endDate]=\"product.activePromotion.endDate\">\r\n                  </app-promotion-timer>\r\n                </div>\r\n              }\r\n\r\n              @if (product.stock < 5 && product.stock > 0) {\r\n                <div class=\"stock-badge\">Stock limit√©</div>\r\n              }\r\n            </div>\r\n\r\n            <div class=\"product-info\">\r\n              <h3>{{ product.name }}</h3>\r\n              <p class=\"description\">{{ product.description }}</p>\r\n\r\n              <div class=\"product-details\">\r\n                <div class=\"price-container\">\r\n                  @if (product.activePromotion) {\r\n                    <div class=\"prices\">\r\n                      <span class=\"original-price\">{{ product.price | currency:'EUR' }}</span>\r\n                      <span class=\"promo-price\">{{ product.promotionPrice | currency:'EUR' }}</span>\r\n                    </div>\r\n                  } @else {\r\n                    <span class=\"price\">{{ product.price | currency:'EUR' }}</span>\r\n                  }\r\n                </div>\r\n\r\n                <div class=\"stock-info\">\r\n                  <span class=\"stock\" [class.low-stock]=\"product.stock < 5\">\r\n                    Stock: {{ product.stock }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                class=\"add-to-cart-btn\"\r\n                [disabled]=\"!isProductAvailable(product)\"\r\n                (click)=\"addToCart(product)\"\r\n              >\r\n                {{ !isProductAvailable(product) ? 'Rupture de stock' : 'Ajouter au panier' }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n\r\n  `,\r\n  styles: [`\r\n    // Container principal\r\n    .products-container {\r\n      padding: 20px;\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .prices {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.25rem;\r\n    }\r\n\r\n    .original-price {\r\n      text-decoration: line-through;\r\n      color: #6b7280;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .promo-price {\r\n      color: #dc2626;\r\n      font-weight: bold;\r\n      font-size: 1.25rem;\r\n    }\r\n    .price-container {\r\n      .prices {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 0.5rem;\r\n\r\n        .original-price {\r\n          text-decoration: line-through;\r\n          color: #6b7280;\r\n          font-size: 0.9rem;\r\n        }\r\n\r\n        .promo-price {\r\n          color: #dc2626;\r\n          font-weight: bold;\r\n          font-size: 1.25rem;\r\n        }\r\n\r\n        .promo-badge {\r\n          background: #dc2626;\r\n          color: white;\r\n          padding: 0.25rem 0.5rem;\r\n          border-radius: 0.25rem;\r\n          font-size: 0.875rem;\r\n          display: inline-block;\r\n        }\r\n      }\r\n\r\n      .price {\r\n        font-size: 1.25rem;\r\n        font-weight: 600;\r\n        color: #4f46e5;\r\n      }\r\n    }\r\n    .promo-label {\r\n      background: #dc2626;\r\n      color: white;\r\n      padding: 2px 6px;\r\n      border-radius: 4px;\r\n      font-size: 0.75rem;\r\n      font-weight: bold;\r\n      display: inline-block;\r\n      margin-top: 0.25rem;\r\n    }\r\n\r\n    // En-t√™te avec filtres\r\n    .page-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    // Container pour les filtres\r\n    .filter-container {\r\n      display: flex;\r\n      gap: 1rem;\r\n    }\r\n    .promo-container {\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 4px;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .promo-duration {\r\n      background: rgba(0, 0, 0, 0.7);\r\n      color: white;\r\n      padding: 4px 8px;\r\n      border-radius: 4px;\r\n      font-size: 0.75rem;\r\n\r\n      &.ending-soon {\r\n        background: #f59e0b;\r\n        font-weight: bold;\r\n      }\r\n\r\n      &.last-day {\r\n        background: #dc2626;\r\n        font-weight: bold;\r\n        animation: pulse 2s infinite;\r\n      }\r\n    }\r\n\r\n    @keyframes pulse {\r\n      0% { opacity: 1; }\r\n      50% { opacity: 0.6; }\r\n      100% { opacity: 1; }\r\n    }\r\n    // Style commun pour les selects\r\n    .type-filter, .price-filter {\r\n      padding: 8px 12px;\r\n      border-radius: 6px;\r\n      border: 1px solid #e5e7eb;\r\n      background-color: white;\r\n      font-size: 0.95rem;\r\n      cursor: pointer;\r\n      min-width: 200px;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #4f46e5;\r\n        box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);\r\n      }\r\n    }\r\n\r\n    // Grille de produits\r\n    .products-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 2rem;\r\n    }\r\n\r\n    // Carte produit\r\n    .product-card {\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      overflow: hidden;\r\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n\r\n      &:hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n      }\r\n    }\r\n\r\n    // Zone image produit\r\n    .product-image {\r\n      position: relative;\r\n      width: 100%;\r\n      height: 200px;\r\n      overflow: hidden;\r\n      background-color: #f3f4f6;\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        transition: transform 0.3s ease;\r\n      }\r\n    }\r\n\r\n    // Badges\r\n    .promo-badge {\r\n      position: absolute;\r\n      top: 10px;\r\n      right: 10px;\r\n      background: #dc2626;\r\n      color: white;\r\n      padding: 4px 8px;\r\n      border-radius: 4px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .stock-badge {\r\n      position: absolute;\r\n      top: 10px;\r\n      left: 10px;\r\n      background: #fef3c7;\r\n      color: #92400e;\r\n      padding: 4px 8px;\r\n      border-radius: 4px;\r\n      font-size: 0.875rem;\r\n    }\r\n\r\n    // Informations produit\r\n    .product-info {\r\n      padding: 1rem;\r\n\r\n      h3 {\r\n        font-size: 1.25rem;\r\n        font-weight: 600;\r\n        margin-bottom: 0.5rem;\r\n      }\r\n\r\n      .description {\r\n        color: #6b7280;\r\n        font-size: 0.875rem;\r\n        line-height: 1.4;\r\n      }\r\n    }\r\n\r\n    // Prix et promotions\r\n    .price-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .original-price {\r\n      text-decoration: line-through;\r\n      color: #6b7280;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .promo-price {\r\n      color: #dc2626;\r\n      font-weight: bold;\r\n      font-size: 1.25rem;\r\n    }\r\n\r\n    .price {\r\n      font-size: 1.25rem;\r\n      font-weight: 600;\r\n      color: #4f46e5;\r\n    }\r\n\r\n    // Stock\r\n    .stock {\r\n      font-size: 0.875rem;\r\n      &.low-stock {\r\n        color: #dc2626;\r\n      }\r\n    }\r\n\r\n    // Bouton ajouter au panier\r\n    .add-to-cart-btn {\r\n      width: 100%;\r\n      background: #4f46e5;\r\n      color: white;\r\n      padding: 10px;\r\n      border: none;\r\n      border-radius: 4px;\r\n      margin-top: 10px;\r\n      cursor: pointer;\r\n      font-weight: 500;\r\n      transition: background-color 0.2s;\r\n\r\n      &:hover:not(:disabled) {\r\n        background: #4338ca;\r\n      }\r\n\r\n      &:disabled {\r\n        background: #9ca3af;\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n\r\n    .product-details {\r\n      margin: 1rem 0;\r\n    }\r\n\r\n    .prices {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.25rem;\r\n    }\r\n\r\n    .original-price {\r\n      text-decoration: line-through;\r\n      color: #6b7280;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .promo-price {\r\n      color: #dc2626;\r\n      font-weight: bold;\r\n      font-size: 1.25rem;\r\n    }\r\n\r\n    .price-container {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class ClientProductsComponent implements OnInit {\r\n  products: ProductWithPromotion[] = [];  // Liste des produits affich√©s\r\n  allProducts: ProductWithPromotion[] = [];  // Liste compl√®te de tous les produits\r\n  // D√©claration des variables pour g√©rer le filtrage et le tri des produits\r\nselectedType: string = 'tous';  // D√©finit le type de produit s√©lectionn√© (par d√©faut 'tous')\r\nsortOrder: string = 'default';  // D√©finit l'ordre de tri des produits (par d√©faut 'default')\r\n\r\n// Liste des options de filtrage des produits (par type et promotions)\r\ntypeOptions = [\r\n  {value: 'tous', label: 'Tous les produits'},  // Option pour afficher tous les produits\r\n  {value: 'promos', label: 'En promotion'},  // Option pour afficher les produits en promotion\r\n  {value: '1', label: 'M√©dicaments sans ordonnance'},  // Option pour filtrer les m√©dicaments sans ordonnance\r\n  {value: '2', label: 'M√©dicaments sur ordonnance'},  // Option pour filtrer les m√©dicaments sur ordonnance\r\n  {value: '3', label: 'Mat√©riel m√©dical'},  // Option pour filtrer le mat√©riel m√©dical\r\n  {value: '4', label: 'Compl√©ments alimentaires'},  // Option pour filtrer les compl√©ments alimentaires\r\n  {value: '5', label: 'Hygi√®ne et soins'},  // Option pour filtrer les produits d'hygi√®ne et de soins\r\n  {value: '6', label: 'Premiers secours'},  // Option pour filtrer les produits de premiers secours\r\n  {value: '7', label: 'Pr√©parations magistrales'},  // Option pour filtrer les pr√©parations magistrales\r\n  {value: '8', label: 'Orthop√©die'},  // Option pour filtrer les produits d'orthop√©die\r\n  {value: '9', label: 'Maternit√© et b√©b√©'},  // Option pour filtrer les produits de maternit√© et b√©b√©\r\n  {value: '10', label: 'Maintien √† domicile'}  // Option pour filtrer les produits pour maintien √† domicile\r\n];\r\n\r\n// Constructeur du composant avec injection des services n√©cessaires\r\nconstructor(\r\n  private productService: ProductService,  // Service pour g√©rer les produits\r\n  private cartService: CartService,  // Service pour g√©rer le panier\r\n  private notificationService: NotificationService  // Service pour g√©rer les notifications\r\n) {}\r\n\r\n// M√©thode ex√©cut√©e au moment de l'initialisation du composant\r\nngOnInit(): void {\r\n  this.loadProducts();  // Charge les produits disponibles\r\n}\r\n\r\n// M√©thode pour filtrer les produits en fonction du type s√©lectionn√©\r\nfilterProducts(): void {\r\n  if (this.selectedType === 'tous') {\r\n    this.products = [...this.allProducts];  // Affiche tous les produits\r\n  } else if (this.selectedType === 'promos') {\r\n    this.products = this.allProducts.filter(product => product.activePromotion);  // Affiche uniquement les produits en promotion\r\n  } else {\r\n    const selectedTypeId = parseInt(this.selectedType);  // Convertit la s√©lection en ID num√©rique\r\n    this.products = this.allProducts.filter(product => product.typeId === selectedTypeId);  // Filtre selon le type s√©lectionn√©\r\n  }\r\n  this.sortProducts();  // Applique le tri apr√®s le filtrage\r\n}\r\n\r\n// M√©thode pour trier les produits selon l'ordre s√©lectionn√©\r\nsortProducts(): void {\r\n  this.products.sort((a, b) => {\r\n    const priceA = a.activePromotion ? this.getDiscountedPrice(a) : a.price;  // Applique une r√©duction si le produit a une promotion\r\n    const priceB = b.activePromotion ? this.getDiscountedPrice(b) : b.price;\r\n\r\n    switch (this.sortOrder) {\r\n      case 'prixCroissant':  // Tri par prix croissant\r\n        return priceA - priceB;\r\n      case 'prixDecroissant':  // Tri par prix d√©croissant\r\n        return priceB - priceA;\r\n      case 'promotion':  // Trie les produits avec promotion en priorit√©\r\n        return (b.activePromotion ? 1 : 0) - (a.activePromotion ? 1 : 0);\r\n      default:  // Aucun tri particulier\r\n        return 0;\r\n    }\r\n  });\r\n}\r\n\r\n// M√©thode pour d√©terminer le nom de fichier de l'image en fonction du nom du produit\r\ngetImageFilename(productName: string): string {\r\n  const name = productName.toLowerCase();  // Convertit le nom du produit en minuscules pour la comparaison\r\n  // Retourne le nom de l'image en fonction du nom du produit\r\n  if (name.includes('parac√©tamol')) return 'paracetamol.jpg';\r\n  if (name.includes('ibuprof√®ne')) return 'ibuprofene.jpg';\r\n  if (name.includes('antibiotique')) return 'antibiotique.jpg';\r\n  if (name.includes('cr√®me main')) return 'cr√®memain.jpg';\r\n  if (name.includes('vitamine')) return 'vitamine-d.jpg';\r\n  if (name.includes('omega')) return 'omega.jpg';\r\n  return 'default-product.jpg';  // Image par d√©faut si aucune correspondance\r\n}\r\n\r\n// V√©rifie la disponibilit√© d'un produit (en stock ou non)\r\nisProductAvailable(product: Product): boolean {\r\n  return product.stock > 0;  // Retourne true si le produit est disponible en stock\r\n}\r\n\r\n// M√©thode pour ajouter un produit au panier\r\naddToCart(product: ProductWithPromotion): void {\r\n  const clientId = localStorage.getItem('clientId');  // R√©cup√®re l'ID du client depuis localStorage\r\n  if (!clientId) {\r\n    this.notificationService.error('Veuillez vous connecter pour ajouter au panier');  // Message d'erreur si le client n'est pas connect√©\r\n    return;\r\n  }\r\n\r\n  if (!this.isProductAvailable(product)) {\r\n    this.notificationService.error('Ce produit est en rupture de stock');  // Message d'erreur si le produit est en rupture de stock\r\n    return;\r\n  }\r\n\r\n  // V√©rifie si le produit est d√©j√† dans le panier et si la quantit√© maximale est atteinte\r\n  this.cartService.getCartItems().pipe(take(1)).subscribe(items => {\r\n    const cartItem = items.find(item => item.product.id_product === product.id_product);\r\n    if (cartItem && cartItem.quantity >= product.stock) {\r\n      this.notificationService.error('Stock maximum atteint pour ce produit');  // Message d'erreur si le stock maximum est atteint\r\n      return;\r\n    }\r\n\r\n    // Calcule le prix final (applique la r√©duction si une promotion est active)\r\n    const finalPrice = product.activePromotion ? this.getDiscountedPrice(product) : product.price;\r\n    this.cartService.addToCart(product.id_product, 1).subscribe({\r\n      next: () => {\r\n        this.notificationService.success('Produit ajout√© au panier');  // Message de succ√®s apr√®s ajout au panier\r\n        this.loadProducts();  // Recharge la liste des produits apr√®s l'ajout\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur lors de l\\'ajout au panier:', error);\r\n        this.notificationService.error('Erreur lors de l\\'ajout au panier');  // Message d'erreur en cas de probl√®me\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n// M√©thode pour charger tous les produits depuis le service\r\nloadProducts(): void {\r\n  this.productService.getAllProducts().subscribe({\r\n    next: (products) => {\r\n      console.log('Products received in component:', products);\r\n      this.allProducts = products;  // Stocke tous les produits r√©cup√©r√©s\r\n      this.products = [...this.allProducts];  // Cr√©e une copie des produits pour afficher\r\n      this.filterProducts();  // Applique les filtres et le tri sur les produits charg√©s\r\n    },\r\n    error: (error) => {\r\n      console.error('Error loading products:', error);\r\n      this.notificationService.error('Erreur lors du chargement des produits');  // Message d'erreur si le chargement √©choue\r\n    }\r\n  });\r\n}\r\n\r\n// M√©thode pour formater la date de fin d'une promotion\r\ngetEndDateFormatted(promotion: any): string {\r\n  if (!promotion || !promotion.endDate) {\r\n    return '';  // Retourne une cha√Æne vide si la promotion n'a pas de date de fin\r\n  }\r\n\r\n  const endDate = new Date(promotion.endDate);  // Convertit la date de fin en objet Date\r\n  const options: Intl.DateTimeFormatOptions = {\r\n    day: 'numeric',\r\n    month: 'long',\r\n    year: 'numeric'\r\n  };\r\n\r\n  return endDate.toLocaleDateString('fr-FR', options);  // Retourne la date format√©e au format fran√ßais\r\n}\r\n\r\n// M√©thode pour obtenir le statut d'une promotion\r\ngetPromotionStatus(promotion: any): { type: 'normal' | 'ending-soon' | 'last-day', message: string } {\r\n  if (!promotion || !this.isPromotionActive(promotion)) {\r\n    return {type: 'normal', message: ''};  // Retourne un statut normal si la promotion n'est pas active\r\n  }\r\n\r\n  const now = new Date();  // R√©cup√®re la date actuelle\r\n  const endDate = new Date(promotion.endDate);  // R√©cup√®re la date de fin de la promotion\r\n  const diffDays = Math.ceil((endDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));  // Calcule la diff√©rence en jours\r\n\r\n  if (diffDays <= 1) {\r\n    return {\r\n      type: 'last-day',  // Si la promotion se termine dans la journ√©e, retour \"Dernier jour\"\r\n      message: 'Dernier jour !'\r\n    };\r\n  }\r\n\r\n  if (diffDays <= 3) {\r\n    return {\r\n      type: 'ending-soon',  // Si la promotion se termine dans 3 jours ou moins, retour \"Plus que X jours !\"\r\n      message: `Plus que ${diffDays} jours !`\r\n    };\r\n  }\r\n\r\n  return {\r\n    type: 'normal',  // Si la promotion dure encore longtemps, affiche la date de fin\r\n    message: `Jusqu'au ${this.getEndDateFormatted(promotion)}`\r\n  };\r\n}\r\n\r\n// V√©rifie si une promotion est encore active\r\nisPromotionActive(promotion: any): boolean {\r\n  if (!promotion) return false;  // Si la promotion est absente, retourne false\r\n  const now = new Date();  // R√©cup√®re la date actuelle\r\n  const startDate = new Date(promotion.startDate);  // R√©cup√®re la date de d√©but de la promotion\r\n  const endDate = new Date(promotion.endDate);  // R√©cup√®re la date de fin de la promotion\r\n  return now >= startDate && now <= endDate;  // Retourne true si la date actuelle est dans la p√©riode de promotion\r\n}\r\n\r\n// Calcule le prix apr√®s application de la r√©duction d'une promotion\r\ngetDiscountedPrice(product: ProductWithPromotion): number {\r\n  if (product.activePromotion && this.isPromotionActive(product.activePromotion)) {\r\n    const discountAmount = product.price * (product.activePromotion.discountPercentage / 100);  // Calcule le montant de la r√©duction\r\n    return Number((product.price - discountAmount).toFixed(2));  // Retourne le prix apr√®s r√©duction\r\n  }\r\n  return product.price; }}", "// Importation des modules n√©cessaires pour le composant\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { OrderService } from '../../../../../services';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\nimport { Order, OrderDetail } from '../../../../../models/order/order.model';\r\nimport { AuthService } from '../../../../../services/auth/auth.service';\r\nimport { PromotionService } from '../../../../../services/promotion/promotion.service';\r\nimport { ProductWithPromotion } from '../../../../../models/product/product.model';\r\n\r\n// D√©claration du composant Angular\r\n@Component({\r\n  selector: 'app-client-orders',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule], // Importation des modules n√©cessaires pour le template\r\n  template: `\r\n    <div class=\"orders-container\">\r\n      <h2>Mes Commandes</h2>\r\n\r\n      <!-- Affichage de l'√©tat de chargement si 'loading' est vrai -->\r\n      @if (loading) {\r\n        <div class=\"loading\">Chargement des commandes...</div>\r\n      }\r\n\r\n      <!-- Affichage d'une erreur si 'error' contient une valeur -->\r\n      @if (error) {\r\n        <div class=\"error\">{{ error }}</div>\r\n      }\r\n\r\n      <!-- Affichage des commandes si aucune erreur et le chargement est termin√© -->\r\n      @if (!loading && !error) {\r\n        @if (orders.length === 0) {\r\n          <div class=\"empty-state\">\r\n            Vous n'avez pas encore de commande\r\n          </div>\r\n        } @else {\r\n          <!-- Affichage de la liste des commandes -->\r\n          <div class=\"orders-list\">\r\n            @for (order of orders; track order.id_order) {\r\n              <div class=\"order-card\">\r\n                <div class=\"order-header\">\r\n                  <span class=\"order-number\">Commande #{{ order.id_order }}</span>\r\n                  <div class=\"order-info\">\r\n                    <span class=\"order-date\">{{ order.date_order | date:'dd/MM/yyyy' }}</span>\r\n                    <span class=\"status\" [class]=\"getStatusClass(order.id_statut)\">\r\n                      {{ getStatusLabel(order.id_statut) }}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- D√©tails des produits de la commande -->\r\n                @if (order.orderDetails && order.orderDetails.length > 0) {\r\n                  <div class=\"order-products\">\r\n                    @for (detail of order.orderDetails; track detail.id_order_detail) {\r\n                      <div class=\"product-item\">\r\n                        <span class=\"product-name\">{{ detail.product.name }}</span>\r\n                        <span class=\"product-quantity\">x{{ detail.quantity }}</span>\r\n                        <div class=\"price-info\">\r\n                          <span class=\"original-price\">{{ detail.product.price | currency:'EUR' }}</span>\r\n                          <span class=\"final-price\">{{ detail.unit_price | currency:'EUR' }}</span>\r\n                        </div>\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                }\r\n\r\n                <!-- Footer de la commande -->\r\n                <div class=\"order-footer\">\r\n                  <div class=\"order-totals\">\r\n                    <span class=\"order-total\">\r\n                      Total: {{ order.montant_total | currency:'EUR' }}\r\n                    </span>\r\n                  </div>\r\n                  <button class=\"details-btn\" (click)=\"viewOrderDetails(order.id_order)\">\r\n                    Voir le d√©tail\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        }\r\n      }\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .orders-container {\r\n      padding: 20px;\r\n      max-width: 1000px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .order-card {\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      margin-bottom: 20px;\r\n      padding: 20px;\r\n    }\r\n\r\n    .order-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 15px;\r\n      padding-bottom: 10px;\r\n      border-bottom: 1px solid #eee;\r\n    }\r\n\r\n    .status {\r\n      padding: 5px 10px;\r\n      border-radius: 15px;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .order-footer {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding-top: 15px;\r\n    }\r\n\r\n    .order-total {\r\n      font-weight: bold;\r\n      font-size: 1.1em;\r\n    }\r\n\r\n    .details-btn {\r\n      background: #4f46e5;\r\n      color: white;\r\n      border: none;\r\n      padding: 8px 16px;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      font-weight: 500;\r\n      transition: background-color 0.2s;\r\n    }\r\n\r\n    .details-btn:hover {\r\n      background: #4338ca;\r\n    }\r\n\r\n    .status-1 { background: #fff3cd; color: #856404; }\r\n    .status-2 { background: #cce5ff; color: #004085; }\r\n    .status-3 { background: #d4edda; color: #155724; }\r\n    .status-4 { background: #d4edda; color: #155724; }\r\n    .status-5 { background: #f8d7da; color: #721c24; }\r\n    .status-unknown { background: #e9ecef; color: #495057; }\r\n\r\n    .empty-state {\r\n      text-align: center;\r\n      padding: 40px;\r\n      background: #f9fafb;\r\n      border-radius: 8px;\r\n      color: #6b7280;\r\n    }\r\n  `]\r\n})\r\nexport class ClientOrdersComponent implements OnInit {\r\n  orders: Order[] = []; // Liste des commandes\r\n  loading = false; // Indicateur de chargement\r\n  error: string | null = null; // Message d'erreur\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private notificationService: NotificationService,\r\n    private router: Router,\r\n    private promotionService: PromotionService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadOrders(); // Chargement des commandes √† l'initialisation\r\n  }\r\n\r\n  // Fonction pour charger les commandes du client\r\n  loadOrders(): void {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    const clientId = this.getCurrentClientId(); // R√©cup√®re l'ID du client courant\r\n    if (!clientId) {\r\n      this.error = \"Impossible de r√©cup√©rer l'ID client\";\r\n      this.loading = false;\r\n      return;\r\n    }\r\n\r\n    // Appel du service pour r√©cup√©rer les commandes\r\n    this.orderService.getOrdersByClientId(clientId).subscribe({\r\n      next: (orders: Order[]) => {\r\n        console.log('Orders received:', orders);\r\n        // Pour chaque commande, afficher les d√©tails des prix\r\n        orders.forEach(order => {\r\n          console.log(`Order #${order.id_order}:`);\r\n          order.orderDetails?.forEach(detail => {\r\n            console.log(`  Product: ${detail.product.name}`);\r\n            console.log(`  Unit price saved: ${detail.unit_price}`);\r\n            console.log(`  Original price: ${detail.product.price}`);\r\n          });\r\n        });\r\n        this.orders = this.sortOrdersByDate(orders); // Trier les commandes par date\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur:', error);\r\n        this.error = \"Erreur lors du chargement des commandes\";\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Fonction pour trier les commandes par date (les plus r√©centes en premier)\r\n  private sortOrdersByDate(orders: Order[]): Order[] {\r\n    return orders.sort((a, b) =>\r\n      new Date(b.date_order).getTime() - new Date(a.date_order).getTime()\r\n    );\r\n  }\r\n\r\n  // Fonction pour r√©cup√©rer l'ID du client courant depuis le localStorage\r\n  private getCurrentClientId(): number | null {\r\n    const clientIdStr = localStorage.getItem('clientId');\r\n    if (!clientIdStr) {\r\n      this.notificationService.error('Session expir√©e');\r\n      this.router.navigate(['/login']);\r\n      return null;\r\n    }\r\n    const clientId = parseInt(clientIdStr, 10);\r\n    return isNaN(clientId) ? null : clientId;\r\n  }\r\n\r\n  // Fonction pour obtenir l'√©tiquette du statut de la commande\r\n  getStatusLabel(statusId: number): string {\r\n    const statusMap: { [key: number]: string } = {\r\n      1: 'En attente',\r\n      2: 'En cours de traitement',\r\n      3: 'Exp√©di√©',\r\n      4: 'Livr√©',\r\n      5: 'Annul√©'\r\n    };\r\n    return statusMap[statusId] || 'Statut inconnu';\r\n  }\r\n\r\n  // Fonction pour obtenir la classe CSS associ√©e au statut de la commande\r\n  getStatusClass(statusId: number): string {\r\n    return `status status-${statusId}`;\r\n  }\r\n\r\n  // Fonction pour naviguer vers les d√©tails d'une commande\r\n  viewOrderDetails(orderId: number): void {\r\n    this.router.navigate(['/client/orders', orderId]);\r\n  }\r\n\r\n  // Fonction pour v√©rifier si le prix unitaire a chang√© par rapport au prix original\r\n  hasPriceChanged(detail: OrderDetail): boolean {\r\n    return detail.unit_price !== detail.product.price;\r\n  }\r\n}\r\n", "// Composant pour afficher les d√©tails d'une commande client\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ActivatedRoute, Router, Routes } from '@angular/router';\r\nimport { OrderService } from '../../../../../services';\r\nimport { Order } from '../../../../../models/order/order.model';\r\nimport { ClientDashboardComponent } from '../client-dashboard.component';\r\nimport { ClientOrdersComponent } from './client-orders.component';\r\nimport { AuthGuard } from '../../../guard/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-client-order-detail',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <!-- Conteneur principal des d√©tails de commande -->\r\n    <div class=\"order-detail-container\">\r\n      <!-- Affichage du loader pendant le chargement -->\r\n      @if (loading) {\r\n        <div class=\"loading\">Chargement des d√©tails...</div>\r\n      }\r\n\r\n      <!-- Affichage des erreurs -->\r\n      @if (error) {\r\n        <div class=\"error\">{{ error }}</div>\r\n      }\r\n\r\n      <!-- Affichage des d√©tails de la commande -->\r\n      @if (!loading && order) {\r\n        <div class=\"order-detail-card\">\r\n          <!-- En-t√™te de la commande -->\r\n          <div class=\"order-header\">\r\n            <div class=\"order-info\">\r\n              <h2>Commande #{{ order.id_order }}</h2>\r\n              <span class=\"order-date\">{{ order.date_order | date:'dd/MM/yyyy' }}</span>\r\n            </div>\r\n            <span class=\"status\" [class]=\"getStatusClass(order.id_statut)\">\r\n              {{ getStatusLabel(order.id_statut) }}\r\n            </span>\r\n          </div>\r\n\r\n          <!-- Liste des produits command√©s -->\r\n          <div class=\"products-list\">\r\n            <h3>Produits command√©s</h3>\r\n            @for (detail of order.orderDetails; track detail.id_order_detail) {\r\n              <div class=\"product-item\">\r\n                <div class=\"product-info\">\r\n                  <h4>{{ detail.product.name }}</h4>\r\n                </div>\r\n                <div class=\"product-details\">\r\n                  <div class=\"quantity\">\r\n                    Quantit√©: {{ detail.quantity }}\r\n                  </div>\r\n                  <div class=\"price-details\">\r\n                    <span class=\"unit-price\">{{ detail.unit_price | currency:'EUR' }} / unit√©</span>\r\n                    <span class=\"line-total\">{{ detail.quantity * detail.unit_price | currency:'EUR' }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n\r\n          <!-- R√©sum√© de la commande -->\r\n          <div class=\"order-summary\">\r\n            <div class=\"total-section\">\r\n              <span>Total de la commande:</span>\r\n              <span class=\"total-amount\">{{ order.montant_total | currency:'EUR' }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Boutons d'action -->\r\n          <div class=\"actions\">\r\n            <button class=\"back-btn\" (click)=\"goBack()\">Retour aux commandes</button>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  `,\r\n  // Styles du composant\r\n  styles: [/* ... styles existants ... */]\r\n})\r\nexport class ClientOrderDetailComponent implements OnInit {\r\n  // Propri√©t√©s du composant\r\n  order: Order | null = null; // Stocke les d√©tails de la commande\r\n  loading = false; // Indicateur de chargement\r\n  error: string | null = null; // Message d'erreur √©ventuel\r\n\r\n  constructor(\r\n    private route: ActivatedRoute, // Pour acc√©der aux param√®tres de route\r\n    private router: Router, // Pour la navigation\r\n    private orderService: OrderService // Service de gestion des commandes\r\n  ) {}\r\n\r\n  // Initialisation du composant\r\n  ngOnInit() {\r\n    const orderId = this.route.snapshot.paramMap.get('id');\r\n    if (orderId) {\r\n      this.loadOrderDetails(+orderId);\r\n    }\r\n  }\r\n\r\n  // Charge les d√©tails d'une commande\r\n  loadOrderDetails(orderId: number) {\r\n    this.loading = true;\r\n    this.orderService.getOrderById(orderId).subscribe({\r\n      next: (order) => {\r\n        this.order = order;\r\n        this.loading = false;\r\n      },\r\n      error: () => {\r\n        this.error = \"Impossible de charger les d√©tails de la commande\";\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Retourne la classe CSS pour le statut\r\n  getStatusClass(status: number): string {\r\n    return `status status-${status}`;\r\n  }\r\n\r\n  // Retourne le libell√© du statut\r\n  getStatusLabel(status: number): string {\r\n    const statusMap: { [key: number]: string } = {\r\n      1: 'En attente',\r\n      2: 'En cours de traitement',\r\n      3: 'Exp√©di√©',\r\n      4: 'Livr√©',\r\n      5: 'Annul√©'\r\n    };\r\n    return statusMap[status] || 'Statut inconnu';\r\n  }\r\n\r\n  // Navigation retour vers la liste des commandes\r\n  goBack() {\r\n    this.router.navigate(['/client/orders']);\r\n  }\r\n}\r\n\r\n// Configuration des routes client\r\nexport const clientRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ClientDashboardComponent,\r\n    children: [\r\n      {\r\n        path: 'orders',\r\n        component: ClientOrdersComponent,\r\n        canActivate: [AuthGuard], // Protection de la route\r\n        data: {\r\n          title: 'Mes Commandes',\r\n          requiresAuth: true\r\n        }\r\n      },\r\n      {\r\n        path: 'orders/:id',\r\n        component: ClientOrderDetailComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          title: 'D√©tail de la commande',\r\n          requiresAuth: true\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];", "// Importation des modules n√©cessaires\r\nimport { Routes } from '@angular/router'; // Pour d√©finir les routes dans Angular\r\nimport { ClientDashboardComponent } from './client-dashboard.component'; // Composant principal du dashboard client\r\nimport { ClientProfileComponent } from './profile/client-profile.component'; // Composant pour afficher/modifier le profil du client\r\n\r\n// Importation des autres composants utilis√©s dans les routes\r\nimport { ProductDetailComponent } from '../../../../components/Product/product-detail.component'; // Composant pour afficher le d√©tail d'un produit\r\nimport { CartComponent } from '../../../../components/Cart/cart.component'; // Composant pour afficher et g√©rer le panier\r\nimport { ClientProductsComponent } from './Products/client-products.component'; // Composant pour afficher la liste des produits\r\nimport { CheckoutComponent } from '../../../../components/checkout/checkout.component'; // Composant pour g√©rer le processus de validation de commande\r\nimport { AuthGuard } from '../../guard/auth.guard'; // Gardien de s√©curit√© pour prot√©ger certaines routes n√©cessitant une authentification\r\nimport { ClientOrderDetailComponent } from './orders/client-order-detail.component'; // Composant pour afficher les d√©tails d'une commande\r\nimport { ClientOrdersComponent } from './orders/client-orders.component'; // Composant pour afficher la liste des commandes du client\r\n\r\n// D√©finition des routes pour l'espace client\r\nexport const clientRoutes: Routes = [\r\n  {\r\n    path: '', // La route vide redirige vers le dashboard client\r\n    component: ClientDashboardComponent, // Composant principal du dashboard\r\n    children: [ // Routes enfants qui sont accessibles sous ce dashboard\r\n      {\r\n        path: '', // Si aucune sous-route n'est d√©finie, redirige vers la route 'products'\r\n        redirectTo: 'products', // Redirection vers les produits\r\n        pathMatch: 'full' // La redirection se fait uniquement si le chemin est vide\r\n      },\r\n      {\r\n        path: 'products', // Route pour afficher la liste des produits\r\n        component: ClientProductsComponent, // Composant pour l'affichage des produits\r\n        data: { title: 'Nos Produits' } // Donn√©e associ√©e √† cette route, utilis√©e pour d√©finir le titre de la page\r\n      },\r\n      {\r\n        path: 'products/:id', // Route dynamique pour afficher le d√©tail d'un produit\r\n        component: ProductDetailComponent, // Composant pour afficher le d√©tail du produit\r\n        data: { title: 'D√©tail du produit' } // Donn√©e associ√©e √† cette route, utilis√©e pour d√©finir le titre de la page\r\n      },\r\n      {\r\n        path: 'cart', // Route pour afficher le panier\r\n        component: CartComponent, // Composant pour afficher et g√©rer le panier\r\n        data: { title: 'Mon Panier' } // Donn√©e associ√©e √† cette route, utilis√©e pour d√©finir le titre de la page\r\n      },\r\n      {\r\n        path: 'checkout', // Route pour la validation de la commande\r\n        component: CheckoutComponent, // Composant pour g√©rer le processus de commande\r\n        canActivate: [AuthGuard], // Cette route est prot√©g√©e par un AuthGuard, il faut √™tre authentifi√© pour y acc√©der\r\n        data: {\r\n          title: 'Validation de commande', // Donn√©e pour d√©finir le titre de la page\r\n          requiresAuth: true // Indication que l'authentification est requise pour cette route\r\n        }\r\n      },\r\n      {\r\n        path: 'profile', // Route pour afficher/modifier le profil du client\r\n        component: ClientProfileComponent, // Composant pour afficher et modifier les informations du profil client\r\n        canActivate: [AuthGuard], // Cette route est prot√©g√©e par un AuthGuard, il faut √™tre authentifi√© pour y acc√©der\r\n        data: {\r\n          title: 'Mon Profil', // Donn√©e pour d√©finir le titre de la page\r\n          requiresAuth: true // Indication que l'authentification est requise pour cette route\r\n        }\r\n      },\r\n      {\r\n        path: 'orders/:id', // Route dynamique pour afficher le d√©tail d'une commande sp√©cifique\r\n        component: ClientOrderDetailComponent, // Composant pour afficher les d√©tails d'une commande\r\n        canActivate: [AuthGuard], // Cette route est prot√©g√©e par un AuthGuard, il faut √™tre authentifi√© pour y acc√©der\r\n        data: {\r\n          title: 'D√©tail de la commande', // Donn√©e pour d√©finir le titre de la page\r\n          requiresAuth: true // Indication que l'authentification est requise pour cette route\r\n        }\r\n      },\r\n      {\r\n        path: 'orders', // Route pour afficher toutes les commandes du client\r\n        component: ClientOrdersComponent, // Composant pour afficher la liste des commandes du client\r\n        canActivate: [AuthGuard], // Cette route est prot√©g√©e par un AuthGuard, il faut √™tre authentifi√© pour y acc√©der\r\n        data: {\r\n          title: 'Mes Commandes', // Donn√©e pour d√©finir le titre de la page\r\n          requiresAuth: true // Indication que l'authentification est requise pour cette route\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n"],
  "mappings": "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",
  "names": ["_forTrack0", "_forTrack0"]
}
