// Permet de voir le d√©tail r√©sum√© d'une commande
// lorsque le paiement est valid√© + retour vers home

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

class CommandePage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    // üîÑ R√©cup√©ration des donn√©es de la commande depuis les arguments
    final Map<String, dynamic>? orderDetails = ModalRoute.of(context)!.settings.arguments as Map<String, dynamic>?;

    if (orderDetails == null) {
      print("‚ùå ERREUR : Aucune donn√©e de commande re√ßue !");
      return Scaffold(
        appBar: AppBar(title: Text('R√©sum√© de la Commande')),
        body: Center(
          child: Text('‚ùå Erreur : Impossible de r√©cup√©rer les d√©tails de la commande.'),
        ),
      );
    }

    // ‚úÖ Extraction des informations
    int orderId = orderDetails['orderId'] ?? 0;
    double totalAmount = (orderDetails['totalAmount'] as num?)?.toDouble() ?? 0.0;
    List<dynamic> items = orderDetails['items'] ?? [];

    print("üìã Commande re√ßue - ID: $orderId, Montant: $totalAmount‚Ç¨, Produits: ${items.length}");

    return Scaffold(
      appBar: AppBar(title: Text('R√©sum√© de la Commande')),
      body: Column(
        children: [
          SizedBox(height: 20),
          Text(
            '‚úÖ Commande valid√©e avec succ√®s !',
            style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.green),
          ),
          SizedBox(height: 10),
          Text('üÜî Num√©ro de commande : $orderId', style: TextStyle(fontSize: 16)),
          Text('üí∞ Montant pay√© : ${totalAmount.toStringAsFixed(2)}‚Ç¨', style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold)),
          SizedBox(height: 20),

          // üì¶ Liste des produits achet√©s
          Expanded(
            child: items.isNotEmpty
                ? ListView.builder(
              itemCount: items.length,
              itemBuilder: (context, index) {
                final item = items[index];
                return ListTile(
                  leading: Image.network(item['imageUrl'] ?? 'assets/image/defautproduit.png', width: 50, height: 50), // üñºÔ∏è Image du produit
                  title: Text(item['name'] ?? "Produit inconnu"), // üè∑Ô∏è Nom du produit
                  subtitle: Text('Quantit√©: ${item['quantity'] ?? 0}'), // üî¢ Quantit√©
                  trailing: Text('${item['price'].toStringAsFixed(2)}‚Ç¨'), // üí∞ Prix
                );
              },
            )
                : Center(child: Text("‚ùå Aucun article trouv√© dans la commande.")),
          ),

          // ‚úÖ Bouton de retour √† l'accueil
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: ElevatedButton(
              onPressed: () => Navigator.pushReplacementNamed(context, '/home'),
              child: Text('üè† Retour √† l\'accueil'),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green,
                foregroundColor: Colors.white,
              ),
            ),
          ),
        ],
      ),
    );
  }
}