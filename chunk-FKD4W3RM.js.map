{
  "version": 3,
  "sources": ["src/app/feature/Dashboard/DashboardComponent/admin/orders/admin-orders.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/clients/admin-clients.component.ts", "src/app/services/Service/service.service.ts", "src/app/feature/Dashboard/DashboardComponent/admin/services/admin-service.component.ts", "src/app/models/Appointment/appointment-types.ts", "src/app/feature/Dashboard/DashboardComponent/admin/appointments/admin-appointments.component.ts", "src/app/services/type/type.service.ts", "src/app/feature/Dashboard/DashboardComponent/admin/products/product-form/admin-product-form.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/products/admin-products.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/type/type-form/admin-type-form.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/type/admin-types.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/admin-dashboard.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/manufacturing/admin-manufacturing-list.component.ts", "src/app/feature/Dashboard/DashboardComponent/admin/admin.routes.ts"],
  "sourcesContent": ["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { OrderService } from '../../../../../services';\r\nimport {Order, OrderDetail} from '../../../../../models/order/order.model';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\nimport { PromotionService } from '../../../../../services/promotion/promotion.service';\r\nimport { Promotion } from '../../../../../models/promotion/promotion.model';\r\n\r\nenum OrderStatus {\r\n  Pending = 1,\r\n  Processing = 2,\r\n  Shipped = 3,\r\n  Delivered = 4,\r\n  Cancelled = 5\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin-order-details',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <!-- Liste des commandes -->\r\n    <div class=\"orders-container\">\r\n      <!-- En-tête avec statistiques -->\r\n      <header class=\"page-header\">\r\n        <h1>Gestion des Commandes</h1>\r\n        <div class=\"stats\">\r\n          <div class=\"stat-card\">\r\n            <span class=\"label\">Total</span>\r\n            <span class=\"value\">{{orders.length}}</span>\r\n          </div>\r\n          <div class=\"stat-card\">\r\n            <span class=\"label\">En cours</span>\r\n            <span class=\"value\">{{getOrdersByStatus(OrderStatus.Processing)}}</span>\r\n          </div>\r\n          <div class=\"stat-card\">\r\n            <span class=\"label\">En attente</span>\r\n            <span class=\"value\">{{getOrdersByStatus(OrderStatus.Pending)}}</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div class=\"filters\">\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"searchTerm\"\r\n          (ngModelChange)=\"filterOrders()\"\r\n          placeholder=\"Rechercher une commande...\"\r\n          class=\"search-input\"\r\n        >\r\n        <select\r\n          [(ngModel)]=\"statusFilter\"\r\n          (change)=\"filterOrders()\"\r\n          class=\"status-select\"\r\n        >\r\n          <option value=\"all\">Tous les statuts</option>\r\n          <option *ngFor=\"let status of orderStatuses\" [value]=\"status.id_statut\">\r\n            {{status.label}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div *ngIf=\"loading\" class=\"loading\">Chargement des commandes...</div>\r\n\r\n      <div *ngIf=\"error\" class=\"error\">{{ error }}</div>\r\n\r\n      <div *ngIf=\"!loading && !error\">\r\n        <div *ngIf=\"filteredOrders.length === 0\" class=\"empty-state\">\r\n          Aucune commande trouvée.\r\n        </div>\r\n        <div *ngIf=\"orders.length > 0\" class=\"orders-grid\">\r\n          <div *ngFor=\"let order of filteredOrders; trackBy: trackByOrderId\" class=\"order-card\">\r\n            <div class=\"order-header\">\r\n              <h3>Commande #{{ order.id_order }}</h3>\r\n              <div class=\"order-info\">\r\n                <span class=\"order-date\">{{ order.date_order | date:'dd/MM/yyyy' }}</span>\r\n                <span [class]=\"getStatusClass(order.id_statut)\">\r\n                  {{ getStatusLabel(order.id_statut) }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"order.orderDetails && order.orderDetails.length > 0\" class=\"order-products\">\r\n              <div *ngFor=\"let detail of order.orderDetails; trackBy: trackByOrderDetailId\" class=\"product-item\">\r\n                <span class=\"product-name\">{{ detail.product.name }}</span>\r\n                <span class=\"product-quantity\">x{{ detail.quantity }}</span>\r\n                <span class=\"product-price\">{{ detail.unit_price | currency:'EUR' }}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"order-footer\">\r\n              <div class=\"order-totals\">\r\n                <span class=\"order-total\">Total: {{ order.montant_total | currency:'EUR' }}</span>\r\n              </div>\r\n              <button class=\"details-btn\" (click)=\"openOrderDetails(order)\">\r\n                Modifier\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal-overlay\" *ngIf=\"selectedOrder\">\r\n      <div class=\"modal-content\">\r\n        <!-- En-tête -->\r\n        <div class=\"modal-header\">\r\n          <div class=\"header-content\">\r\n            <h3>Détails de la commande #{{selectedOrder.id_order}}</h3>\r\n            <div class=\"status-badge\" [class]=\"getStatusClass(selectedOrder.id_statut)\">\r\n              {{ getStatusLabel(selectedOrder.id_statut) }}\r\n            </div>\r\n          </div>\r\n          <button class=\"close-btn\" (click)=\"closeModal()\">×</button>\r\n        </div>\r\n\r\n        <!-- Corps -->\r\n        <div class=\"modal-body\">\r\n          <!-- Informations client -->\r\n          <div class=\"card info-section\">\r\n            <h4>Informations client</h4>\r\n            <div class=\"client-info\">\r\n              <div class=\"info-row\">\r\n                <span class=\"label\">Client:</span>\r\n                <span class=\"value\">{{ selectedOrder.client?.firstName }} {{ selectedOrder.client?.lastName }}</span>\r\n              </div>\r\n              <div class=\"info-row\">\r\n                <span class=\"label\">Date:</span>\r\n                <span class=\"value\">{{ selectedOrder.date_order | date:'dd/MM/yyyy HH:mm' }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Produits -->\r\n          <div class=\"card product-section\">\r\n            <h4>Produits commandés</h4>\r\n            <div class=\"table-responsive\">\r\n              <table>\r\n                <thead>\r\n                <tr>\r\n                  <th>Produit</th>\r\n                  <th>Quantité</th>\r\n                  <th>Prix unitaire</th>\r\n                  <th>Total</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr *ngFor=\"let detail of selectedOrder.orderDetails; trackBy: trackByOrderDetailId\">\r\n                  <td>{{ detail.product.name }}</td>\r\n                  <td>\r\n                    <div class=\"quantity-control\">\r\n                      <button class=\"qty-btn\" (click)=\"updateQuantity(detail, -1)\" [disabled]=\"detail.quantity <= 1\">-</button>\r\n                      <input\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"detail.quantity\"\r\n                        min=\"1\"\r\n                        (change)=\"validateAndUpdateQuantity(detail)\"\r\n                        class=\"qty-input\"\r\n                      >\r\n                      <button class=\"qty-btn\" (click)=\"updateQuantity(detail, 1)\">+</button>\r\n                    </div>\r\n                  </td>\r\n                  <td>{{ detail.unit_price | currency:'EUR' }}</td>\r\n                  <td>{{ detail.quantity * detail.unit_price | currency:'EUR' }}</td>\r\n                  <td>\r\n                    <button class=\"delete-btn\" (click)=\"removeProduct(detail)\">\r\n                      Supprimer\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                <tr>\r\n                  <td colspan=\"3\" class=\"total-label\">Total</td>\r\n                  <td colspan=\"2\" class=\"total-value\">{{ selectedOrder.montant_total | currency:'EUR' }}</td>\r\n                </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Gestion du statut -->\r\n          <div class=\"card status-section\">\r\n            <h4>Gestion du statut</h4>\r\n            <div class=\"status-control\">\r\n              <select\r\n                [(ngModel)]=\"newStatus\"\r\n                [disabled]=\"processing\"\r\n                class=\"status-select\"\r\n              >\r\n                <option [ngValue]=\"null\">Sélectionner un nouveau statut</option>\r\n                <option\r\n                  *ngFor=\"let status of getAvailableStatuses(selectedOrder)\"\r\n                  [ngValue]=\"status.id_statut\"\r\n                >\r\n                  {{ status.label }}\r\n                </option>\r\n              </select>\r\n              <button\r\n                class=\"action-btn primary\"\r\n                [disabled]=\"!newStatus || processing || newStatus === selectedOrder.id_statut\"\r\n                (click)=\"updateOrderStatus()\"\r\n              >\r\n                {{ processing ? 'Mise à jour...' : 'Mettre à jour le statut' }}\r\n              </button>\r\n            </div>\r\n            <div *ngIf=\"statusError\" class=\"error-message\">{{ statusError }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Footer -->\r\n        <div class=\"modal-footer\">\r\n          <button class=\"action-btn secondary\" (click)=\"closeModal()\">\r\n            Annuler\r\n          </button>\r\n          <button\r\n            class=\"action-btn primary\"\r\n            [disabled]=\"processing || !hasChanges()\"\r\n            (click)=\"saveChanges()\"\r\n          >\r\n            {{ processing ? 'Enregistrement...' : 'Sauvegarder' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  `,\r\n  styles: [`\r\n\r\n    .details-btn {\r\n      background: #2563eb;\r\n      color: white;\r\n      padding: 0.5rem 1rem;\r\n      border: none;\r\n      border-radius: 0.375rem;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.2s;\r\n\r\n      &:hover {\r\n        background: #1d4ed8;\r\n      }\r\n\r\n      &:disabled {\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n\r\n    // Pour le montant total\r\n    .order-total {\r\n      font-weight: 600;\r\n      color: #1a56db;\r\n      font-size: 1.125rem;\r\n      padding: 0.5rem;\r\n      background: #f3f4f6;\r\n      border-radius: 0.375rem;\r\n    }\r\n\r\n    // Pour le bouton de mise à jour du statut\r\n    .update-status-btn {\r\n      background: #3b82f6;\r\n      color: white;\r\n      padding: 0.5rem 1rem;\r\n      border: none;\r\n      border-radius: 0.375rem;\r\n      font-weight: 500;\r\n      transition: all 0.2s;\r\n\r\n      &:hover {\r\n        background: #2563eb;\r\n      }\r\n\r\n      &:disabled {\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n\r\n    // Pour les boutons d'action en bas de la modal\r\n    .modal-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;\r\n      padding: 1rem;\r\n      border-top: 1px solid #e5e7eb;\r\n      background: #f9fafb;\r\n\r\n      button {\r\n        padding: 0.5rem 1.5rem;\r\n        border-radius: 0.375rem;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n\r\n        &.cancel {\r\n          background: #f3f4f6;\r\n          color: #374151;\r\n          border: 1px solid #d1d5db;\r\n\r\n          &:hover {\r\n            background: #e5e7eb;\r\n          }\r\n        }\r\n\r\n        &.save {\r\n          background: #2563eb;\r\n          color: white;\r\n          border: none;\r\n\r\n          &:hover {\r\n            background: #1d4ed8;\r\n          }\r\n        }\r\n\r\n        &:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Pour le select de statut\r\n    .status-select {\r\n      width: 100%;\r\n      padding: 0.5rem;\r\n      border: 1px solid #d1d5db;\r\n      border-radius: 0.375rem;\r\n      background-color: white;\r\n      font-size: 0.875rem;\r\n      color: #374151;\r\n      cursor: pointer;\r\n      transition: all 0.2s;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #2563eb;\r\n        box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);\r\n      }\r\n\r\n      &:disabled {\r\n        background-color: #f3f4f6;\r\n        cursor: not-allowed;\r\n      }\r\n    }\r\n    .orders-container {\r\n      padding: 2rem;\r\n      max-width: 1400px;\r\n      margin: 0 auto;\r\n      background: #f8f9fa;\r\n    }\r\n    .stats-container {\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n      padding: 1.5rem;\r\n      margin-bottom: 2rem;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 2rem;\r\n\r\n      .stat-item {\r\n        text-align: center;\r\n\r\n        .value {\r\n          font-size: 1.5rem;\r\n          font-weight: bold;\r\n          color: #2563eb;\r\n\r\n          &.processing { color: #0369a1; }\r\n          &.pending { color: #92400e; }\r\n        }\r\n\r\n        .label {\r\n          font-size: 0.875rem;\r\n          color: #6b7280;\r\n        }\r\n      }\r\n    }\r\n    .filters {\r\n      display: flex;\r\n      gap: 1rem;\r\n      margin-bottom: 2rem;\r\n      padding: 1rem;\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n\r\n      .search-input {\r\n        flex: 1;\r\n        padding: 0.625rem 1rem;\r\n        border: 1px solid #E5E7EB;\r\n        border-radius: 6px;\r\n        min-width: 250px;\r\n\r\n        &:focus {\r\n          outline: none;\r\n          border-color: #0066CC;\r\n        }\r\n      }\r\n      .stats {\r\n        display: flex;\r\n        gap: 1.5rem;\r\n\r\n        .stat-card {\r\n          background: white;\r\n          padding: 1rem 1.5rem;\r\n          border-radius: 8px;\r\n          box-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n          min-width: 120px;\r\n          text-align: center;\r\n\r\n          .value {\r\n            color: #0066CC;\r\n            font-size: 1.5rem;\r\n            font-weight: bold;\r\n            margin-bottom: 0.25rem;\r\n          }\r\n\r\n          .label {\r\n            color: #6B7280;\r\n            font-size: 0.875rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      .status-select {\r\n        padding: 0.625rem 1rem;\r\n        border: 1px solid #E5E7EB;\r\n        border-radius: 6px;\r\n        min-width: 200px;\r\n        background: white;\r\n        cursor: pointer;\r\n\r\n        &:focus {\r\n          outline: none;\r\n          border-color: #0066CC;\r\n        }\r\n      }\r\n    }\r\n    .page-header {\r\n      background: white;\r\n      padding: 1.5rem;\r\n      border-radius: 8px;\r\n      box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n      margin-bottom: 2rem;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      h2 {\r\n        color: #0066CC;\r\n        font-size: 1.5rem;\r\n        margin: 0;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .stats {\r\n      display: flex;\r\n      gap: 1.5rem;\r\n\r\n      .stat-card {\r\n        background: white;\r\n        padding: 1rem 1.5rem;\r\n        border-radius: 8px;\r\n        box-shadow: 0 1px 2px rgba(0,0,0,0.1);\r\n        min-width: 120px;\r\n        text-align: center;\r\n\r\n        .value {\r\n          color: #0066CC;\r\n          font-size: 1.5rem;\r\n          font-weight: bold;\r\n          margin-bottom: 0.25rem;\r\n        }\r\n\r\n        .label {\r\n          color: #6B7280;\r\n          font-size: 0.875rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    .orders-grid {\r\n      display: grid;\r\n      grid-template-columns: 1fr;\r\n      gap: 1rem;\r\n    }\r\n\r\n    .order-card {\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n      overflow: hidden;\r\n\r\n      .order-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 1.25rem;\r\n        background: #f8f9fa;\r\n        border-bottom: 1px solid #e5e7eb;\r\n\r\n        h3 {\r\n          margin: 0;\r\n          color: #111827;\r\n          font-size: 1rem;\r\n          font-weight: 500;\r\n        }\r\n\r\n        .status {\r\n          padding: 0.375rem 0.75rem;\r\n          border-radius: 9999px;\r\n          font-size: 0.875rem;\r\n          font-weight: 500;\r\n\r\n          &.status-1 { background: #FEF3C7; color: #92400E; }  // En attente\r\n          &.status-2 { background: #DBEAFE; color: #1E40AF; }  // En cours\r\n          &.status-3 { background: #D1FAE5; color: #065F46; }  // Expédié\r\n          &.status-4 { background: #BBF7D0; color: #166534; }  // Livré\r\n          &.status-5 { background: #FEE2E2; color: #991B1B; }  // Annulé\r\n        }\r\n      }\r\n\r\n      .order-details {\r\n        padding: 1.25rem;\r\n\r\n        table {\r\n          width: 100%;\r\n          border-collapse: collapse;\r\n\r\n          th {\r\n            text-align: left;\r\n            padding: 0.75rem;\r\n            background: #f8f9fa;\r\n            border-bottom: 1px solid #e5e7eb;\r\n            font-weight: 500;\r\n            color: #374151;\r\n          }\r\n\r\n          td {\r\n            padding: 0.75rem;\r\n            border-bottom: 1px solid #e5e7eb;\r\n          }\r\n        }\r\n      }\r\n\r\n      .product-item {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 0.75rem;\r\n        border-bottom: 1px solid #e5e7eb;\r\n\r\n        &:last-child {\r\n          border-bottom: none;\r\n        }\r\n      }\r\n    }\r\n\r\n    .action-buttons {\r\n      display: flex;\r\n      gap: 0.75rem;\r\n      margin-top: 1rem;\r\n\r\n      button {\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 6px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        border: none;\r\n        transition: all 0.2s;\r\n\r\n        &.update-btn {\r\n          background: #0066CC;\r\n          color: white;\r\n          &:hover { background: #0052a3; }\r\n        }\r\n\r\n        &.cancel-btn {\r\n          background: #DC2626;\r\n          color: white;\r\n          &:hover { background: #B91C1C; }\r\n        }\r\n\r\n        &:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n      }\r\n    }\r\n\r\n    .quantity-control {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n\r\n      input {\r\n        width: 60px;\r\n        text-align: center;\r\n        padding: 0.25rem;\r\n        border: 1px solid #D1D5DB;\r\n        border-radius: 4px;\r\n      }\r\n\r\n      button {\r\n        width: 24px;\r\n        height: 24px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: none;\r\n        background: #F3F4F6;\r\n        cursor: pointer;\r\n        border-radius: 4px;\r\n\r\n        &:hover {\r\n          background: #E5E7EB;\r\n        }\r\n      }\r\n    }\r\n\r\n    .modal-overlay {\r\n      position: fixed;\r\n      inset: 0;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      display: grid;\r\n      place-items: center;\r\n      z-index: 50;\r\n    }\r\n\r\n    .modal-content {\r\n      background: white;\r\n      border-radius: 8px;\r\n      width: 90%;\r\n      max-width: 800px;\r\n      max-height: 90vh;\r\n      overflow-y: auto;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    }\r\n    .modal-overlay {\r\n      position: fixed;\r\n      inset: 0;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      display: grid;\r\n      place-items: center;\r\n      z-index: 50;\r\n      padding: 1rem;\r\n    }\r\n\r\n    .modal-content {\r\n      background: white;\r\n      border-radius: 0.75rem;\r\n      width: 100%;\r\n      max-width: 900px;\r\n      max-height: calc(100vh - 2rem);\r\n      overflow-y: auto;\r\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .modal-header {\r\n      padding: 1.25rem;\r\n      border-bottom: 1px solid #e5e7eb;\r\n      background: #f8fafc;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      .header-content {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 1rem;\r\n      }\r\n\r\n      h3 {\r\n        margin: 0;\r\n        font-size: 1.25rem;\r\n        color: #0f172a;\r\n      }\r\n\r\n      .close-btn {\r\n        background: transparent;\r\n        border: none;\r\n        font-size: 1.5rem;\r\n        color: #64748b;\r\n        cursor: pointer;\r\n        padding: 0.25rem;\r\n        line-height: 1;\r\n\r\n        &:hover {\r\n          color: #0f172a;\r\n        }\r\n      }\r\n    }\r\n\r\n    .card {\r\n      background: white;\r\n      border-radius: 0.5rem;\r\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n      padding: 1.25rem;\r\n      margin-bottom: 1rem;\r\n\r\n      h4 {\r\n        margin: 0 0 1rem 0;\r\n        font-size: 1rem;\r\n        color: #0f172a;\r\n      }\r\n    }\r\n\r\n    .info-section {\r\n      .client-info {\r\n        display: grid;\r\n        gap: 0.75rem;\r\n      }\r\n\r\n      .info-row {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n\r\n        .label {\r\n          color: #64748b;\r\n          min-width: 80px;\r\n        }\r\n\r\n        .value {\r\n          color: #0f172a;\r\n          font-weight: 500;\r\n        }\r\n      }\r\n    }\r\n\r\n    .table-responsive {\r\n      overflow-x: auto;\r\n      margin: 0 -1.25rem;\r\n      padding: 0 1.25rem;\r\n\r\n      table {\r\n        width: 100%;\r\n        border-collapse: collapse;\r\n        white-space: nowrap;\r\n\r\n        th {\r\n          background: #f8fafc;\r\n          padding: 0.75rem 1rem;\r\n          text-align: left;\r\n          color: #64748b;\r\n          font-weight: 500;\r\n          border-bottom: 1px solid #e2e8f0;\r\n        }\r\n\r\n        td {\r\n          padding: 0.75rem 1rem;\r\n          border-bottom: 1px solid #e2e8f0;\r\n          vertical-align: middle;\r\n        }\r\n\r\n        tfoot {\r\n          font-weight: 600;\r\n\r\n          .total-label {\r\n            text-align: right;\r\n            color: #64748b;\r\n          }\r\n\r\n          .total-value {\r\n            color: #0f172a;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .quantity-control {\r\n      display: inline-flex;\r\n      align-items: center;\r\n      gap: 0.25rem;\r\n\r\n      .qty-input {\r\n        width: 60px;\r\n        text-align: center;\r\n        padding: 0.375rem;\r\n        border: 1px solid #e2e8f0;\r\n        border-radius: 0.375rem;\r\n\r\n        &:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);\r\n        }\r\n      }\r\n\r\n      .qty-btn {\r\n        width: 24px;\r\n        height: 24px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border: 1px solid #e2e8f0;\r\n        background: white;\r\n        border-radius: 0.375rem;\r\n        cursor: pointer;\r\n        color: #64748b;\r\n        padding: 0;\r\n\r\n        &:hover:not(:disabled) {\r\n          background: #f8fafc;\r\n          color: #0f172a;\r\n        }\r\n\r\n        &:disabled {\r\n          opacity: 0.5;\r\n          cursor: not-allowed;\r\n        }\r\n      }\r\n    }\r\n\r\n    .status-section {\r\n      .status-control {\r\n        display: flex;\r\n        gap: 1rem;\r\n        align-items: center;\r\n      }\r\n\r\n      .status-select {\r\n        flex: 1;\r\n        padding: 0.5rem;\r\n        border: 1px solid #e2e8f0;\r\n        border-radius: 0.375rem;\r\n        background: white;\r\n\r\n        &:focus {\r\n          outline: none;\r\n          border-color: #3b82f6;\r\n          box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);\r\n        }\r\n\r\n        &:disabled {\r\n          background: #f8fafc;\r\n          cursor: not-allowed;\r\n        }\r\n      }\r\n    }\r\n\r\n    .action-btn {\r\n      padding: 0.5rem 1rem;\r\n      border-radius: 0.375rem;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.2s;\r\n\r\n      &:disabled {\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n      }\r\n\r\n      &.primary {\r\n        background: #3b82f6;\r\n        color: white;\r\n        border: none;\r\n\r\n        &:hover:not(:disabled) {\r\n          background: #2563eb;\r\n        }\r\n      }\r\n\r\n      &.secondary {\r\n        background: white;\r\n        color: #64748b;\r\n        border: 1px solid #e2e8f0;\r\n\r\n        &:hover:not(:disabled) {\r\n          background: #f8fafc;\r\n          color: #0f172a;\r\n        }\r\n      }\r\n    }\r\n\r\n    .delete-btn {\r\n      padding: 0.375rem 0.75rem;\r\n      background: #ef4444;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 0.375rem;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background: #dc2626;\r\n      }\r\n    }\r\n\r\n    .status-badge {\r\n      padding: 0.25rem 0.75rem;\r\n      border-radius: 9999px;\r\n      font-size: 0.875rem;\r\n      font-weight: 500;\r\n\r\n      &.status-1 { background: #fef3c7; color: #92400e; }\r\n      &.status-2 { background: #dbeafe; color: #1e40af; }\r\n      &.status-3 { background: #d1fae5; color: #065f46; }\r\n      &.status-4 { background: #bbf7d0; color: #166534; }\r\n      &.status-5 { background: #fee2e2; color: #991b1b; }\r\n    }\r\n\r\n    .error-message {\r\n      color: #ef4444;\r\n      font-size: 0.875rem;\r\n      margin-top: 0.5rem;\r\n    }\r\n\r\n    .modal-footer {\r\n      padding: 1.25rem;\r\n      border-top: 1px solid #e2e8f0;\r\n      background: #f8fafc;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;}\r\n  `]\r\n})\r\nexport class AdminOrdersComponent implements OnInit {\r\n  // Propriétés existantes\r\n  orders: Order[] = [];\r\n  filteredOrders: Order[] = [];\r\n  selectedOrder: Order | null = null;\r\n  newStatus: number | null = null;\r\n  statusError: string | null = null;\r\n  loading = false;\r\n  error: string | null = null;\r\n  processing = false;\r\n  searchTerm: string = '';\r\n  statusFilter: string = 'all';\r\n  OrderStatus = OrderStatus; // Pour l'utiliser dans le template\r\n\r\n  // Nouvelles propriétés pour les promotions\r\n  availablePromotions: Promotion[] = [];\r\n  selectedPromotion: Promotion | null = null;\r\n  tempSelectedPromotion: Promotion | null = null; // Ajout de cette propriété\r\n  originalTotal = 0; // Ajout de cette propriété\r\n\r\n  @Output() orderUpdated = new EventEmitter<void>();\r\n\r\n  // Statuts possibles\r\n  orderStatuses = [\r\n    {id_statut: OrderStatus.Pending, label: 'En attente'},\r\n    {id_statut: OrderStatus.Processing, label: 'En cours de traitement'},\r\n    {id_statut: OrderStatus.Shipped, label: 'Expédié'},\r\n    {id_statut: OrderStatus.Delivered, label: 'Livré'},\r\n    {id_statut: OrderStatus.Cancelled, label: 'Annulé'}\r\n  ];\r\n\r\n  private readonly validTransitions = {\r\n    [OrderStatus.Pending]: [OrderStatus.Processing, OrderStatus.Cancelled],\r\n    [OrderStatus.Processing]: [OrderStatus.Shipped, OrderStatus.Cancelled],\r\n    [OrderStatus.Shipped]: [OrderStatus.Delivered, OrderStatus.Cancelled],\r\n    [OrderStatus.Delivered]: [] as OrderStatus[],\r\n    [OrderStatus.Cancelled]: [] as OrderStatus[]\r\n  };\r\n\r\n  constructor(\r\n    private orderService: OrderService,\r\n    private notificationService: NotificationService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadOrders();\r\n\r\n  }\r\n\r\n\r\n  calculateDiscount(): number {\r\n    if (!this.selectedPromotion || !this.selectedOrder) return 0;\r\n    return (this.selectedOrder.montant_total * this.selectedPromotion.discountPercentage) / 100;\r\n  }\r\n\r\n\r\n  openModal(order: Order): void {\r\n    this.selectedOrder = {...order};\r\n    this.selectedPromotion = null;\r\n  }\r\n\r\n\r\n\r\n  cancelOrder(): void {\r\n    if (!this.selectedOrder || !confirm('Êtes-vous sûr de vouloir annuler cette commande ?')) {\r\n      return;\r\n    }\r\n\r\n    this.processing = true;\r\n    this.orderService.updateOrderStatus(this.selectedOrder.id_order, 5).subscribe({\r\n      next: () => {\r\n        this.notificationService.success('Commande annulée avec succès');\r\n        this.closeModal();\r\n        this.loadOrders();\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur annulation commande:', error);\r\n        this.notificationService.error('Erreur lors de l\\'annulation de la commande');\r\n      },\r\n      complete: () => {\r\n        this.processing = false;\r\n      }\r\n    });\r\n  }\r\n\r\n// Ajoutez ces nouvelles méthodes\r\n\r\n\r\n  removePromotion(): void {\r\n    if (!this.selectedOrder) return;\r\n\r\n    this.selectedOrder.montant_total = this.originalTotal;\r\n    this.selectedPromotion = null;\r\n    this.tempSelectedPromotion = null;\r\n  }\r\n\r\n\r\n  updateTotal(): void {\r\n    if (!this.selectedOrder) return;\r\n\r\n    this.originalTotal = this.selectedOrder.orderDetails.reduce(\r\n      (total, detail) => total + (detail.quantity > 0 ? detail.quantity * detail.unit_price : 0),\r\n      0\r\n    );\r\n\r\n    if (this.selectedPromotion) {\r\n      const discountAmount = this.calculateDiscount();\r\n      this.selectedOrder.montant_total = this.originalTotal - discountAmount;\r\n    } else {\r\n      this.selectedOrder.montant_total = this.originalTotal;\r\n    }\r\n  }\r\n\r\n\r\n  saveChanges(): void {\r\n    if (!this.selectedOrder) return;\r\n\r\n    console.log('Selected Order:', this.selectedOrder);\r\n    // Vérifiez que `id_client` est bien défini ici.\r\n\r\n    this.processing = true;\r\n    const updates = {\r\n      orderDetails: this.selectedOrder.orderDetails,\r\n      id_statut: this.selectedOrder.id_statut,\r\n      promotionId: this.selectedPromotion?.id_promotion\r\n    };\r\n\r\n    this.orderService.updateOrder(this.selectedOrder.id_order, updates).subscribe({\r\n      next: () => {\r\n        this.notificationService.success('Commande mise à jour avec succès');\r\n        this.closeModal();\r\n        this.loadOrders();\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur mise à jour commande:', error);\r\n        this.notificationService.error('Erreur lors de la mise à jour de la commande');\r\n      },\r\n      complete: () => {\r\n        this.processing = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getStatusClass(statusId: number): string {\r\n    return `status status-${statusId}`;\r\n  }\r\n\r\n  getStatusLabel(statusId: number): string {\r\n    const status = this.orderStatuses.find(s => s.id_statut === statusId);\r\n    return status ? status.label : 'Inconnu';\r\n  }\r\n\r\n  loadOrders(): void {\r\n    this.loading = true;\r\n    this.error = null;\r\n    this.orders = [];\r\n    this.filteredOrders = []; // Ajout de cette ligne\r\n\r\n    this.orderService.getAllOrders().subscribe({\r\n      next: (orders) => {\r\n        if (!orders) {\r\n          this.error = 'Aucune commande trouvée';\r\n          return;\r\n        }\r\n        this.orders = orders;\r\n        this.filteredOrders = [...orders]; // Ajout de cette ligne\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur chargement commandes:', error);\r\n        this.error = 'Impossible de charger les commandes.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  closeStatusModal(): void {\r\n    this.selectedOrder = null;\r\n    this.selectedPromotion = null; // Réinitialiser la promotion sélectionnée\r\n    this.newStatus = null;\r\n    this.statusError = null;\r\n    this.processing = false;\r\n  }\r\n\r\n  getAvailableStatuses(order: Order | null): { id_statut: number; label: string }[] {\r\n    if (!order) return [];\r\n\r\n    const currentStatus = order.id_statut as OrderStatus;\r\n    const availableTransitions = this.validTransitions[currentStatus] || [];\r\n\r\n    return this.orderStatuses.filter(status =>\r\n      availableTransitions.includes(status.id_statut as OrderStatus)\r\n    );\r\n  }\r\n\r\n  updateOrderStatus(): void {\r\n    if (!this.selectedOrder || !this.newStatus) {\r\n      this.statusError = 'Veuillez sélectionner un nouveau statut.';\r\n      return;\r\n    }\r\n\r\n    if (this.newStatus === this.selectedOrder.id_statut) {\r\n      this.statusError = 'Le nouveau statut doit être différent de l\\'ancien.';\r\n      return;\r\n    }\r\n\r\n    if (!this.isValidTransition(this.selectedOrder.id_statut, this.newStatus)) {\r\n      this.statusError = 'Cette transition de statut n\\'est pas autorisée.';\r\n      return;\r\n    }\r\n\r\n    this.processing = true;\r\n    this.statusError = null;\r\n\r\n    this.orderService.updateOrderStatus(this.selectedOrder.id_order, this.newStatus)\r\n      .subscribe({\r\n        next: () => {\r\n          this.notificationService.success('Statut mis à jour avec succès');\r\n          this.loadOrders();\r\n          this.closeStatusModal();\r\n          this.orderUpdated.emit();\r\n        },\r\n        error: (error) => {\r\n          console.error('Erreur lors de la mise à jour du statut:', error);\r\n          this.statusError = 'Erreur lors de la mise à jour du statut.';\r\n          this.processing = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  private isValidTransition(currentStatus: number, newStatus: number): boolean {\r\n    if (currentStatus === newStatus) return false;\r\n\r\n    const currentStatusEnum = currentStatus as OrderStatus;\r\n    const validTransitions = this.validTransitions[currentStatusEnum];\r\n\r\n    if (!validTransitions) return false;\r\n\r\n    return validTransitions.includes(newStatus as OrderStatus);\r\n  }\r\n\r\n  applySelectedPromotion(): void {\r\n    if (!this.tempSelectedPromotion || !this.selectedOrder) return;\r\n\r\n    if (this.selectedPromotion) {\r\n      this.removePromotion();\r\n    }\r\n\r\n    this.selectedPromotion = this.tempSelectedPromotion;\r\n    const discountAmount = this.calculateDiscount();\r\n    this.selectedOrder.montant_total = this.originalTotal - discountAmount;\r\n    this.tempSelectedPromotion = null;\r\n  }\r\n\r\n  // Méthodes trackBy pour améliorer les performances\r\n  trackByOrderId(index: number, order: Order): number {\r\n    return order.id_order;\r\n  }\r\n\r\n  trackByOrderDetailId(index: number, detail: any): number {\r\n    return detail.id_order_detail;\r\n  }\r\n\r\n  trackByPromotionId(index: number, promotion: Promotion): number {\r\n    return promotion.id_promotion;  // Changé de 'id' à 'id_promotion'\r\n  }\r\n\r\n  trackByStatusId(index: number, status: { id_statut: number }): number {\r\n    return status.id_statut;\r\n  }\r\n\r\n  removeProduct(detail: OrderDetail): void {\r\n    if (!this.selectedOrder || !detail) {\r\n      this.notificationService.error('Impossible de supprimer le produit : informations manquantes');\r\n      return;\r\n    }\r\n\r\n    const detailId = detail.id_order_detail;\r\n    if (!detailId) {\r\n      this.notificationService.error('Impossible de supprimer le produit : identifiant manquant');\r\n      return;\r\n    }\r\n\r\n    console.log('Suppression du produit avec id_order_detail:', detailId);\r\n\r\n    this.processing = true;\r\n    this.orderService.deleteOrderDetail(detailId).subscribe({\r\n      next: () => {\r\n        if (this.selectedOrder) {\r\n          this.selectedOrder.orderDetails = this.selectedOrder.orderDetails.filter(\r\n            d => d.id_order_detail !== detailId\r\n          );\r\n          this.updateTotal();\r\n        }\r\n        this.notificationService.success('Produit supprimé avec succès');\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur lors de la suppression du produit:', error);\r\n        this.notificationService.error('Erreur lors de la suppression du produit');\r\n      },\r\n      complete: () => {\r\n        this.processing = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  filterOrders(): void {\r\n    this.filteredOrders = this.orders.filter(order => {\r\n      // Filtre par texte\r\n      const matchesSearch = !this.searchTerm ||\r\n        order.id_order.toString().includes(this.searchTerm) ||\r\n        order.client?.firstName?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        order.client?.lastName?.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n\r\n      // Filtre par statut\r\n      const matchesStatus = this.statusFilter === 'all' ||\r\n        order.id_statut.toString() === this.statusFilter;\r\n\r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  }\r\n\r\n\r\n  // Gestion des statuts\r\n  getOrdersByStatus(status: OrderStatus): number {\r\n    return this.orders.filter(order => order.id_statut === status).length;\r\n  }\r\n\r\n  validateAndUpdateQuantity(detail: OrderDetail): void {\r\n    if (detail.quantity < 1) {\r\n      detail.quantity = 1;\r\n    }\r\n    this.updateTotal();\r\n  }\r\n\r\n  updateQuantity(detail: OrderDetail, change: number): void {\r\n    const newQty = detail.quantity + change;\r\n    if (newQty >= 1) {\r\n      detail.quantity = newQty;\r\n      this.updateTotal();\r\n    }\r\n  }\r\n  hasChanges(): boolean {\r\n    if (!this.selectedOrder || !this.originalOrder) {\r\n      return false;\r\n    }\r\n\r\n    const quantityChanged: boolean = this.selectedOrder.orderDetails.some(detail => {\r\n      const original = this.originalOrder!.orderDetails.find(\r\n        d => d.id_order_detail === detail.id_order_detail\r\n      );\r\n      return original ? original.quantity !== detail.quantity : false;\r\n    });\r\n\r\n    const statusChanged: boolean = Boolean(\r\n      this.newStatus && this.newStatus !== this.originalOrder.id_statut\r\n    );\r\n\r\n    return quantityChanged || statusChanged;\r\n  }\r\n\r\n  closeModal(): void {\r\n    if (this.hasChanges() && !confirm('Des modifications non sauvegardées seront perdues. Voulez-vous continuer ?')) {\r\n      return;\r\n    }\r\n    this.closeStatusModal();\r\n  }\r\n  originalOrder: Order | null = null;\r\n\r\n  openOrderDetails(order: Order): void {\r\n    this.selectedOrder = {...order};\r\n    this.originalOrder = {...order};\r\n    this.newStatus = null;\r\n    this.statusError = null;\r\n  }\r\n  }\r\n", "// feature/Dashboard/DashboardComponent/admin/clients/admin-clients.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ninterface Client {\r\n  clientId: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  address: string;\r\n  email: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin-clients',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './admin-clients.component.html',\r\n  styleUrls: ['./admin-clients.component.scss']\r\n})\r\nexport class AdminClientsComponent implements OnInit {\r\n  clients: Client[] = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.loadClients();\r\n  }\r\n\r\n  loadClients() {\r\n    this.http.get<Client[]>('http://localhost:2024/api/clients').subscribe({\r\n      next: (data) => this.clients = data,\r\n      error: (error) => console.error('Erreur de chargement des clients:', error)\r\n    });\r\n  }\r\n}\r\n", "// services/Service/service.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:2024/api/services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllServices(): Observable<any[]> {\r\n    return this.http.get<any[]>(API_URL);\r\n  }\r\n\r\n  getService(id: number): Observable<any> {\r\n    return this.http.get(`${API_URL}/${id}`);\r\n  }\r\n\r\n  createService(data: any): Observable<any> {\r\n    return this.http.post(API_URL, data);\r\n  }\r\n\r\n  updateService(id: number, data: any): Observable<any> {\r\n    return this.http.put(`${API_URL}/${id}`, {\r\n      name: data.name,\r\n      description: data.description,\r\n      price: Number(data.price),\r\n      duration: String(data.duration) // conversion en string pour le backend\r\n    });\r\n  }\r\n\r\n  deleteService(id: number): Observable<any> {\r\n    return this.http.delete(`${API_URL}/${id}`);\r\n  }\r\n}\r\n", "// feature/Dashboard/DashboardComponent/admin/services/admin-services.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {CreateServiceDto} from '../../../../../models/Service/create-service.dto';\r\nimport {ServiceService} from '../../../../../services/Service/service.service';\r\nimport {NotificationService} from '../../../../../services/notification/notification.service';\r\n\r\n\r\ninterface Service {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  duration: number;  // durée en minutes (nombre)\r\n}\r\n\r\ninterface ServiceFormData {\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  duration: number;  // durée en minutes (nombre)\r\n}\r\n@Component({\r\n  selector: 'app-admin-services',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"services-container\">\r\n      <header class=\"page-header\">\r\n        <h2>Gestion des Services</h2>\r\n        <button class=\"add-btn\" (click)=\"showAddForm = true\">\r\n          Nouveau Service\r\n        </button>\r\n      </header>\r\n\r\n      @if (showAddForm) {\r\n        <div class=\"form-container\">\r\n          <h3>{{ editingService ? 'Modifier le service' : 'Nouveau service' }}</h3>\r\n          <form (ngSubmit)=\"saveService()\" #serviceForm=\"ngForm\">\r\n            <div class=\"form-group\">\r\n              <label for=\"name\">Nom du service*</label>\r\n              <input\r\n                id=\"name\"\r\n                [(ngModel)]=\"newService.name\"\r\n                name=\"name\"\r\n                required\r\n                type=\"text\"\r\n                placeholder=\"Ex: Soin du visage\"\r\n                #nameInput=\"ngModel\"\r\n              >\r\n              <div *ngIf=\"nameInput.invalid && (nameInput.dirty || nameInput.touched)\" class=\"error-message\">\r\n                Le nom est requis\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"description\">Description*</label>\r\n              <textarea\r\n                id=\"description\"\r\n                [(ngModel)]=\"newService.description\"\r\n                name=\"description\"\r\n                required\r\n                rows=\"3\"\r\n                placeholder=\"Décrivez le service...\"\r\n                #descInput=\"ngModel\"\r\n              ></textarea>\r\n              <div *ngIf=\"descInput.invalid && (descInput.dirty || descInput.touched)\" class=\"error-message\">\r\n                La description est requise\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"price\">Prix (€)*</label>\r\n                <input\r\n                  id=\"price\"\r\n                  [(ngModel)]=\"newService.price\"\r\n                  name=\"price\"\r\n                  required\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  step=\"0.01\"\r\n                  #priceInput=\"ngModel\"\r\n                >\r\n                <div *ngIf=\"priceInput.invalid && (priceInput.dirty || priceInput.touched)\" class=\"error-message\">\r\n                  Le prix doit être supérieur à 0\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"duration\">Durée (minutes)*</label>\r\n                <input\r\n                  id=\"duration\"\r\n                  [(ngModel)]=\"newService.duration\"\r\n                  name=\"duration\"\r\n                  required\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  #durationInput=\"ngModel\"\r\n                >\r\n                <div *ngIf=\"durationInput.invalid && (durationInput.dirty || durationInput.touched)\" class=\"error-message\">\r\n                  La durée doit être supérieure à 0 minutes\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-actions\">\r\n              <button type=\"submit\"\r\n                      class=\"save-btn\"\r\n                      [disabled]=\"!serviceForm.valid\">\r\n                {{ editingService ? 'Mettre à jour' : 'Créer' }}\r\n              </button>\r\n              <button type=\"button\" class=\"cancel-btn\" (click)=\"cancelForm()\">\r\n                Annuler\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      }\r\n\r\n      <div class=\"services-grid\">\r\n        @for (service of services; track service.id) {\r\n          <div class=\"service-card\">\r\n            <div class=\"service-content\">\r\n              <h3>{{service.name}}</h3>\r\n              <p class=\"description\">{{service.description}}</p>\r\n              <div class=\"service-details\">\r\n                <span class=\"price\">{{service.price | currency:'EUR'}}</span>\r\n                <span class=\"duration\">{{formatDuration(service.duration)}}</span>\r\n              </div>\r\n            </div>\r\n            <div class=\"service-actions\">\r\n              <button class=\"edit-btn\" (click)=\"editService(service)\">\r\n                Modifier\r\n              </button>\r\n              <button class=\"delete-btn\" (click)=\"deleteService(service)\">\r\n                Supprimer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .services-container {\r\n      padding: 20px;\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .page-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n\r\n      h2 {\r\n        color: #333;\r\n        margin: 0;\r\n      }\r\n\r\n      .add-btn {\r\n        background: #4f46e5;\r\n        color: white;\r\n        padding: 8px 16px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n\r\n        &:hover {\r\n          background: #4338ca;\r\n        }\r\n      }\r\n    }\r\n\r\n    .form-container {\r\n      background: white;\r\n      padding: 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      margin-bottom: 20px;\r\n\r\n      h3 {\r\n        margin-top: 0;\r\n        color: #333;\r\n      }\r\n    }\r\n\r\n    .form-group {\r\n      margin-bottom: 15px;\r\n\r\n      label {\r\n        display: block;\r\n        margin-bottom: 5px;\r\n        color: #4b5563;\r\n      }\r\n\r\n      input, textarea {\r\n        width: 100%;\r\n        padding: 8px;\r\n        border: 1px solid #d1d5db;\r\n        border-radius: 4px;\r\n        resize: vertical;\r\n\r\n        &:focus {\r\n          outline: none;\r\n          border-color: #4f46e5;\r\n        }\r\n      }\r\n    }\r\n\r\n    .form-row {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 15px;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      gap: 10px;\r\n      margin-top: 20px;\r\n\r\n      button {\r\n        padding: 8px 16px;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n\r\n        &.save-btn {\r\n          background: #16a34a;\r\n          color: white;\r\n\r\n          &:disabled {\r\n            background: #d1d5db;\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n\r\n        &.cancel-btn {\r\n          background: #dc2626;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n\r\n    .services-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 20px;\r\n    }\r\n\r\n    .service-card {\r\n      background: white;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n\r\n      .service-content {\r\n        h3 {\r\n          margin: 0 0 10px 0;\r\n          color: #333;\r\n          font-size: 1.2em;\r\n        }\r\n\r\n        .description {\r\n          color: #6b7280;\r\n          margin: 10px 0;\r\n          line-height: 1.5;\r\n        }\r\n\r\n        .service-details {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-top: 10px;\r\n\r\n          .price {\r\n            color: #4f46e5;\r\n            font-weight: 600;\r\n            font-size: 1.1em;\r\n          }\r\n\r\n          .duration {\r\n            color: #6b7280;\r\n            font-size: 0.9em;\r\n          }\r\n        }\r\n      }\r\n\r\n      .service-actions {\r\n        display: flex;\r\n        gap: 8px;\r\n        margin-top: 15px;\r\n        padding-top: 15px;\r\n        border-top: 1px solid #e5e7eb;\r\n\r\n        button {\r\n          flex: 1;\r\n          padding: 6px 12px;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-size: 0.9em;\r\n\r\n          &.edit-btn {\r\n            background: #4f46e5;\r\n            color: white;\r\n          }\r\n\r\n          &.delete-btn {\r\n            background: #dc2626;\r\n            color: white;\r\n          }\r\n\r\n          &:hover {\r\n            opacity: 0.9;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .no-data {\r\n      grid-column: 1 / -1;\r\n      padding: 40px;\r\n      text-align: center;\r\n      color: #666;\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .form-row {\r\n        grid-template-columns: 1fr;\r\n      }\r\n\r\n      .services-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n    }\r\n  `]\r\n})\r\n// Composant de gestion des services pour l'interface administrateur\r\nexport class AdminServicesComponent implements OnInit {\r\n  // Tableau stockant tous les services\r\n  services: Service[] = [];\r\n  // Contrôle l'affichage du formulaire d'ajout/édition\r\n  showAddForm = false;\r\n  // Service en cours d'édition\r\n  editingService: Service | null = null;\r\n  // Modèle pour un nouveau service ou service en édition\r\n  newService: CreateServiceDto = {\r\n    name: '',\r\n    description: '',\r\n    price: 0,\r\n    duration: 0\r\n  };\r\n\r\n  constructor(\r\n    private serviceService: ServiceService, // Service de gestion des services\r\n    private notificationService: NotificationService // Service de notifications\r\n  ) {}\r\n\r\n  // Initialisation du composant\r\n  ngOnInit(): void {\r\n    this.loadServices();\r\n  }\r\n\r\n  // Valide la durée entrée dans le formulaire\r\n  validateDuration(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    const value = input.value;\r\n    // Convertir en nombre et s'assurer qu'il est valide\r\n    const numValue = parseInt(value, 10);\r\n    if (isNaN(numValue) || numValue < 0) {\r\n      input.value = '0';\r\n      this.newService.duration = 0;\r\n    } else {\r\n      this.newService.duration = numValue;\r\n    }\r\n  }\r\n\r\n  // Formate la durée pour l'affichage (conversion minutes en heures/minutes)\r\n  formatDuration(minutes: number): string {\r\n    if (!minutes) return '0 min';\r\n    if (minutes >= 60) {\r\n      const hours = Math.floor(minutes / 60);\r\n      const remainingMinutes = minutes % 60;\r\n      return remainingMinutes > 0 ?\r\n        `${hours}h${remainingMinutes}min` :\r\n        `${hours}h`;\r\n    }\r\n    return `${minutes}min`;\r\n  }\r\n\r\n  // Charge tous les services depuis le service\r\n  loadServices(): void {\r\n    this.serviceService.getAllServices().subscribe({\r\n      next: (services) => {\r\n        this.services = services;\r\n      },\r\n      error: () => {\r\n        this.notificationService.error('Erreur lors du chargement des services');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Sauvegarde un service (création ou mise à jour)\r\n  saveService(): void {\r\n    // Vérifie que la durée est valide\r\n    if (this.newService.duration <= 0) {\r\n      this.notificationService.error('La durée doit être supérieure à 0 minutes');\r\n      return;\r\n    }\r\n\r\n    // Prépare les données du service\r\n    const serviceData = {\r\n      name: this.newService.name,\r\n      description: this.newService.description,\r\n      price: Number(this.newService.price),\r\n      duration: String(this.newService.duration) // Conversion en string pour l'API\r\n    };\r\n\r\n    // Mise à jour d'un service existant\r\n    if (this.editingService) {\r\n      this.serviceService.updateService(this.editingService.id, serviceData).subscribe({\r\n        next: () => {\r\n          this.loadServices();\r\n          this.cancelForm();\r\n          this.notificationService.success('Service mis à jour avec succès');\r\n        },\r\n        error: (error) => {\r\n          console.error('Erreur:', error);\r\n          this.notificationService.error('Erreur lors de la mise à jour du service');\r\n        }\r\n      });\r\n    } \r\n    // Création d'un nouveau service\r\n    else {\r\n      this.serviceService.createService(serviceData).subscribe({\r\n        next: () => {\r\n          this.loadServices();\r\n          this.cancelForm();\r\n          this.notificationService.success('Service créé avec succès');\r\n        },\r\n        error: (error) => {\r\n          console.error('Erreur:', error);\r\n          this.notificationService.error('Erreur lors de la création du service');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Prépare l'édition d'un service existant\r\n  editService(service: Service): void {\r\n    this.editingService = {...service};\r\n    this.newService = {\r\n      name: service.name,\r\n      description: service.description,\r\n      price: service.price,\r\n      duration: service.duration\r\n    };\r\n    this.showAddForm = true;\r\n  }\r\n\r\n  // Supprime un service après confirmation\r\n  deleteService(service: Service): void {\r\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce service ?')) {\r\n      this.serviceService.deleteService(service.id).subscribe({\r\n        next: () => {\r\n          this.loadServices();\r\n          this.notificationService.success('Service supprimé avec succès');\r\n        },\r\n        error: (error) => {\r\n          console.error('Erreur:', error);\r\n          this.notificationService.error('Erreur lors de la suppression du service');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Réinitialise le formulaire et annule l'édition en cours\r\n  cancelForm(): void {\r\n    this.showAddForm = false;\r\n    this.editingService = null;\r\n    this.newService = {\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      duration: 0\r\n    };\r\n  }\r\n}\r\n", "// models/appointment/appointment-types.ts\r\nexport enum AppointmentStatus {\r\n  PENDING = 'pending',\r\n  CONFIRMED = 'confirmed',\r\n  CANCELLED = 'cancelled',\r\n  COMPLETED = 'completed',\r\n  NOSHOW = 'noshow'\r\n}\r\n\r\n// Vous pouvez aussi ajouter d'autres types liés aux rendez-vous ici\r\nexport interface AppointmentTime {\r\n  hour: string;\r\n  available: boolean;\r\n}\r\n\r\nexport type AppointmentFilters = {\r\n  status?: AppointmentStatus;\r\n  date?: string;\r\n  clientName?: string;\r\n}\r\n", "import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  AbstractControl,\r\n  ValidationErrors\r\n} from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Appointment } from '../../../../../models/Appointment/appointment.model';\r\nimport { Client } from '../../../../../models/client/client.model';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\n\r\nimport { AppointmentStatus } from '../../../../../models/Appointment/appointment-types';\r\nimport { AdminService } from '../../../../../services';\r\n\r\n// Ajout de l'interface Service si elle n'est pas déjà importée\r\ninterface Service {\r\n  id: number;\r\n  name: string;\r\n  description?: string;\r\n  duration: number;\r\n  price: number;\r\n}\r\n\r\ninterface AppointmentForm {\r\n  clientId: number;\r\n  serviceId: number;\r\n  appointmentDate: string;\r\n  time: string;\r\n  notes: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin-appointments',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n  template: `\r\n    <div class=\"appointments-container\">\r\n      <header class=\"page-header\">\r\n        <h2>Gestion des Rendez-vous</h2>\r\n        <button class=\"add-btn\" (click)=\"toggleAddForm()\">\r\n          {{ showAddForm ? 'Fermer' : 'Nouveau Rendez-vous' }}\r\n        </button>\r\n      </header>\r\n\r\n      <!-- Formulaire de rendez-vous -->\r\n      <div *ngIf=\"showAddForm\" class=\"appointment-form\">\r\n        <form [formGroup]=\"appointmentForm\" (ngSubmit)=\"submitAppointment()\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group\">\r\n              <label for=\"client\">Client</label>\r\n              <select id=\"client\" formControlName=\"clientId\" required>\r\n                <option value=\"\">Sélectionnez un client</option>\r\n                <option *ngFor=\"let client of clients\" [value]=\"client.clientId\">\r\n                  {{ client.firstName }} {{ client.lastName }}\r\n                </option>\r\n              </select>\r\n              <span *ngIf=\"appointmentForm.get('clientId')?.touched && appointmentForm.get('clientId')?.errors\" class=\"error-message\">\r\n                Veuillez sélectionner un client\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"service\">Service</label>\r\n              <select id=\"service\" formControlName=\"serviceId\" required (change)=\"onServiceChange()\">\r\n                <option value=\"\">Sélectionnez un service</option>\r\n                <option *ngFor=\"let service of services\" [value]=\"service.id\">\r\n                  {{ service.name }} ({{ getServiceDuration(service.id) }})\r\n                </option>\r\n              </select>\r\n              <span *ngIf=\"appointmentForm.get('serviceId')?.touched && appointmentForm.get('serviceId')?.errors\" class=\"error-message\">\r\n                Veuillez sélectionner un service\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group\">\r\n              <label for=\"date\">Date</label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"date\"\r\n                formControlName=\"appointmentDate\"\r\n                required\r\n                [min]=\"minDate\"\r\n                (change)=\"onDateChange()\"\r\n              />\r\n              <span *ngIf=\"appointmentForm.get('appointmentDate')?.touched && appointmentForm.get('appointmentDate')?.errors\" class=\"error-message\">\r\n                <span *ngIf=\"appointmentForm.get('appointmentDate')?.errors?.['required']\">Veuillez sélectionner une date</span>\r\n                <span *ngIf=\"appointmentForm.get('appointmentDate')?.errors?.['pastDate']\">La date ne peut pas être dans le passé</span>\r\n              </span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"time\">Heure</label>\r\n              <select id=\"time\" formControlName=\"time\" required>\r\n                <option value=\"\">Sélectionnez une heure</option>\r\n                <option *ngFor=\"let slot of availableTimeSlots\" [value]=\"slot\">{{ slot }}</option>\r\n              </select>\r\n              <span *ngIf=\"appointmentForm.get('time')?.touched && appointmentForm.get('time')?.errors\" class=\"error-message\">\r\n                Veuillez sélectionner une heure\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"notes\">Notes</label>\r\n            <textarea id=\"notes\" formControlName=\"notes\" rows=\"3\" placeholder=\"Ajoutez des notes ou instructions particulières...\"></textarea>\r\n          </div>\r\n\r\n          <div class=\"form-actions\">\r\n            <button type=\"submit\" [disabled]=\"!appointmentForm.valid\" class=\"submit-btn\">\r\n              {{ editingAppointment ? 'Mettre à jour' : 'Créer le rendez-vous' }}\r\n            </button>\r\n            <button type=\"button\" class=\"cancel-btn\" (click)=\"toggleAddForm()\">Annuler</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Liste des rendez-vous -->\r\n      <div class=\"appointments-list\">\r\n        <div *ngIf=\"filteredAppointments.length === 0\" class=\"no-data\">\r\n          Aucun rendez-vous trouvé\r\n        </div>\r\n        <div *ngIf=\"filteredAppointments.length > 0\" class=\"appointments-grid\">\r\n          <div *ngFor=\"let appointment of filteredAppointments\" class=\"appointment-card\">\r\n            <div class=\"appointment-content\">\r\n              <h3>Rendez-vous #{{ appointment.appointmentId }}</h3>\r\n              <p>Date : {{ appointment.appointmentDate | date:'dd/MM/yyyy' }}</p>\r\n              <p>Heure : {{ formatTime(appointment.time) }}</p>\r\n              <p>Client : {{ appointment.client?.firstName }} {{ appointment.client?.lastName }}</p>\r\n              <p>Service : {{ appointment.service?.name }}</p>\r\n              <p class=\"status\" [ngClass]=\"getStatusClass(appointment.status)\">\r\n                Statut : {{ getStatusLabel(appointment.status) }}\r\n              </p>\r\n              <p>Notes : {{ appointment.notes || '-' }}</p>\r\n            </div>\r\n            <div class=\"appointment-actions\">\r\n              <button *ngIf=\"canEditAppointment(appointment)\" class=\"edit-btn\" (click)=\"editAppointment(appointment)\">Modifier</button>\r\n              <button *ngIf=\"canEditAppointment(appointment)\" class=\"cancel-btn\" (click)=\"cancelAppointment(appointment)\">Annuler</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      .appointments-container {\r\n        padding: 20px;\r\n        max-width: 1200px;\r\n        margin: 0 auto;\r\n      }\r\n\r\n      .page-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        margin-bottom: 20px;\r\n\r\n        h2 {\r\n          color: #333;\r\n          margin: 0;\r\n        }\r\n\r\n        .add-btn {\r\n          background: #4f46e5;\r\n          color: white;\r\n          padding: 8px 16px;\r\n          border: none;\r\n          border-radius: 8px;\r\n          cursor: pointer;\r\n\r\n          &:hover {\r\n            background: #4338ca;\r\n          }\r\n        }\r\n      }\r\n\r\n      .appointment-form {\r\n        background: white;\r\n        padding: 20px;\r\n        border-radius: 16px;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .form-row {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: 20px;\r\n        margin-bottom: 15px;\r\n      }\r\n\r\n      .form-group {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        label {\r\n          margin-bottom: 5px;\r\n          color: #4b5563;\r\n        }\r\n\r\n        input,\r\n        select,\r\n        textarea {\r\n          padding: 8px;\r\n          border: 1px solid #d1d5db;\r\n          border-radius: 8px;\r\n\r\n          &:focus {\r\n            outline: none;\r\n            border-color: #4f46e5;\r\n          }\r\n        }\r\n\r\n        .error-message {\r\n          color: #b91c1c;\r\n          margin-top: 5px;\r\n        }\r\n      }\r\n\r\n      .form-actions {\r\n        display: flex;\r\n        gap: 10px;\r\n        margin-top: 20px;\r\n\r\n        .submit-btn {\r\n          background: #16a34a;\r\n          color: white;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 8px;\r\n          cursor: pointer;\r\n\r\n          &:disabled {\r\n            background: #d1d5db;\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n\r\n        .cancel-btn {\r\n          background: #dc2626;\r\n          color: white;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 8px;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .appointments-list {\r\n        margin-top: 20px;\r\n      }\r\n\r\n      .appointments-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n        gap: 20px;\r\n      }\r\n\r\n      .appointment-card {\r\n        background: white;\r\n        border-radius: 16px;\r\n        padding: 20px;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      .appointment-content {\r\n        h3 {\r\n          margin: 0 0 10px 0;\r\n          color: #333;\r\n          font-size: 1.5rem;\r\n        }\r\n\r\n        p {\r\n          color: #6b7280;\r\n          margin: 5px 0;\r\n          font-size: 1rem;\r\n        }\r\n\r\n        .status {\r\n          font-weight: 600;\r\n        }\r\n      }\r\n\r\n      .appointment-actions {\r\n        display: flex;\r\n        gap: 10px;\r\n        margin-top: 20px;\r\n\r\n        button {\r\n          flex: 1;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 8px;\r\n          cursor: pointer;\r\n          font-size: 1rem;\r\n\r\n          &.edit-btn {\r\n            background: #4f46e5;\r\n            color: white;\r\n          }\r\n\r\n          &.cancel-btn {\r\n            background: #dc2626;\r\n            color: white;\r\n          }\r\n\r\n          &:hover {\r\n            opacity: 0.9;\r\n          }\r\n        }\r\n      }\r\n\r\n      .no-data {\r\n        grid-column: 1 / -1;\r\n        padding: 40px;\r\n        text-align: center;\r\n        color: #666;\r\n        background: white;\r\n        border-radius: 16px;\r\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n      }\r\n\r\n      @media (max-width: 768px) {\r\n        .appointments-grid {\r\n          grid-template-columns: 1fr;\r\n        }\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class AdminAppointmentsComponent implements OnInit, OnDestroy {\r\n  // Propriétés\r\n  appointments: Appointment[] = [];\r\n  filteredAppointments: Appointment[] = [];\r\n  statusFilter = '';\r\n  dateFilter = '';\r\n  searchQuery = '';\r\n  showAddForm = false;\r\n  editingAppointment: Appointment | null = null;\r\n  appointmentForm!: FormGroup;\r\n  clients: Client[] = [];\r\n  services: Service[] = [];\r\n  availableTimeSlots: string[] = [];\r\n  minDate: string;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private fb: FormBuilder,\r\n    private notificationService: NotificationService\r\n  ) {\r\n    this.minDate = new Date().toISOString().split('T')[0];\r\n    this.initForm();\r\n    this.generateTimeSlots();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadInitialData();\r\n    this.setupFormListeners();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(sub => sub.unsubscribe());\r\n  }\r\n\r\n  private loadInitialData(): void {\r\n    this.loadAppointments();\r\n    this.loadClients();\r\n    this.loadServices();\r\n  }\r\n\r\n  private setupFormListeners(): void {\r\n    const dateControl = this.appointmentForm.get('appointmentDate');\r\n    const serviceControl = this.appointmentForm.get('serviceId');\r\n\r\n    if (dateControl) {\r\n      this.subscriptions.push(\r\n        dateControl.valueChanges.subscribe(() => {\r\n          this.onDateChange();\r\n        })\r\n      );\r\n    }\r\n\r\n    if (serviceControl) {\r\n      this.subscriptions.push(\r\n        serviceControl.valueChanges.subscribe(() => {\r\n          this.onServiceChange();\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.appointmentForm = this.fb.group({\r\n      clientId: ['', Validators.required],\r\n      serviceId: ['', Validators.required],\r\n      appointmentDate: ['', [Validators.required, this.dateValidator()]],\r\n      time: ['', Validators.required],\r\n      notes: ['']\r\n    });\r\n  }\r\n\r\n  private dateValidator() {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      const selectedDate = new Date(control.value);\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n\r\n      if (selectedDate < today) {\r\n        return { pastDate: true };\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n\r\n  private generateTimeSlots(): string[] {\r\n    const slots: string[] = [];\r\n    const startHour = 9;\r\n    const endHour = 18;\r\n\r\n    for (let hour = startHour; hour <= endHour; hour++) {\r\n      const formattedHour = hour.toString().padStart(2, '0');\r\n      slots.push(`${formattedHour}:00`);\r\n      if (hour < endHour) {\r\n        slots.push(`${formattedHour}:30`);\r\n      }\r\n    }\r\n    return slots;\r\n  }\r\n\r\n  private getSlotDuration(serviceId: number): number {\r\n    const service = this.services.find(s => s.id === serviceId);\r\n    return service ? service.duration : 60; // Durée par défaut de 60 minutes\r\n  }\r\n\r\n  isTimeSlotAvailable(date: string, time: string): boolean {\r\n    const dateTime = new Date(`${date}T${time}`);\r\n    const now = new Date();\r\n    const selectedServiceId = this.appointmentForm.get('serviceId')?.value;\r\n    const duration = this.getSlotDuration(selectedServiceId);\r\n\r\n    if (dateTime < now) {\r\n      return false;\r\n    }\r\n\r\n    const endTime = new Date(dateTime);\r\n    endTime.setMinutes(endTime.getMinutes() + duration);\r\n    if (endTime.getHours() > 18) {\r\n      return false;\r\n    }\r\n\r\n    return !this.appointments.some(appointment => {\r\n      if (appointment.appointmentId === this.editingAppointment?.appointmentId) {\r\n        return false;\r\n      }\r\n\r\n      const appointmentStart = new Date(`${appointment.appointmentDate}T${appointment.time}`);\r\n      const appointmentEnd = new Date(appointmentStart);\r\n      const appointmentDuration = this.getSlotDuration(appointment.serviceId);\r\n      appointmentEnd.setMinutes(appointmentEnd.getMinutes() + appointmentDuration);\r\n\r\n      const slotEnd = new Date(dateTime);\r\n      slotEnd.setMinutes(slotEnd.getMinutes() + duration);\r\n\r\n      return (dateTime < appointmentEnd && slotEnd > appointmentStart);\r\n    });\r\n  }\r\n\r\n  onDateChange(): void {\r\n    const selectedDate = this.appointmentForm.get('appointmentDate')?.value;\r\n    if (selectedDate) {\r\n      const allSlots = this.generateTimeSlots();\r\n      this.availableTimeSlots = allSlots.filter(slot =>\r\n        this.isTimeSlotAvailable(selectedDate, slot)\r\n      );\r\n\r\n      if (this.availableTimeSlots.length === 0) {\r\n        this.notificationService.warning('Aucun créneau disponible pour cette date');\r\n      }\r\n    }\r\n  }\r\n\r\n  onServiceChange(): void {\r\n    const serviceId = this.appointmentForm.get('serviceId')?.value;\r\n    const service = this.services.find(s => s.id === serviceId);\r\n\r\n    if (service) {\r\n      this.onDateChange();\r\n      if (service.duration > 60) {\r\n        this.notificationService.info(`Ce service nécessite ${service.duration} minutes`);\r\n      }\r\n    }\r\n  }\r\n\r\n  editAppointment(appointment: Appointment): void {\r\n    this.editingAppointment = appointment;\r\n    const appointmentDate = new Date(appointment.appointmentDate)\r\n      .toISOString()\r\n      .split('T')[0];\r\n\r\n    this.appointmentForm.patchValue({\r\n      clientId: appointment.clientId,\r\n      serviceId: appointment.serviceId,\r\n      appointmentDate: appointmentDate,\r\n      time: appointment.time,\r\n      notes: appointment.notes || ''\r\n    });\r\n\r\n    this.onDateChange();\r\n    this.showAddForm = true;\r\n  }\r\n\r\n  toggleAddForm(): void {\r\n    this.showAddForm = !this.showAddForm;\r\n    if (!this.showAddForm) {\r\n      this.editingAppointment = null;\r\n      this.appointmentForm.reset();\r\n    } else {\r\n      this.availableTimeSlots = this.generateTimeSlots();\r\n    }\r\n  }\r\n\r\n  filterAppointments(): void {\r\n    this.filteredAppointments = this.appointments.filter(appointment => {\r\n      const matchesStatus = !this.statusFilter ||\r\n        appointment.status.toLowerCase() === this.statusFilter.toLowerCase();\r\n\r\n      const matchesDate = !this.dateFilter ||\r\n        new Date(appointment.appointmentDate).toISOString().split('T')[0] === this.dateFilter;\r\n\r\n      const matchesSearch = !this.searchQuery ||\r\n        (appointment.client &&\r\n          (`${appointment.client.firstName} ${appointment.client.lastName}`)\r\n            .toLowerCase()\r\n            .includes(this.searchQuery.toLowerCase())\r\n        );\r\n\r\n      return matchesStatus && matchesDate && matchesSearch;\r\n    });\r\n  }\r\n\r\n  private validateAppointmentData(data: Partial<Appointment>): boolean {\r\n    const now = new Date();\r\n    const appointmentDate = new Date(data.appointmentDate!);\r\n\r\n    if (appointmentDate < now) {\r\n      this.notificationService.error('La date du rendez-vous ne peut pas être dans le passé');\r\n      return false;\r\n    }\r\n\r\n    if (!this.isTimeSlotAvailable(data.appointmentDate!.toString(), data.time!)) {\r\n      this.notificationService.error('Ce créneau horaire n\\'est plus disponible');\r\n      return false;\r\n    }\r\n\r\n    const existingAppointment = this.appointments.find(a =>\r\n      a.clientId === data.clientId &&\r\n      new Date(a.appointmentDate).toDateString() === appointmentDate.toDateString() &&\r\n      a.appointmentId !== this.editingAppointment?.appointmentId\r\n    );\r\n\r\n    if (existingAppointment) {\r\n      this.notificationService.warning('Ce client a déjà un rendez-vous prévu ce jour');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  submitAppointment(): void {\r\n    if (!this.appointmentForm.valid) {\r\n      this.notificationService.error('Veuillez remplir tous les champs obligatoires');\r\n      this.markFormGroupTouched(this.appointmentForm);\r\n      return;\r\n    }\r\n\r\n    const formValue = this.appointmentForm.value;\r\n    const appointmentData: Partial<Appointment> = {\r\n      clientId: formValue.clientId,\r\n      serviceId: formValue.serviceId,\r\n      appointmentDate: new Date(`${formValue.appointmentDate}T${formValue.time}`),\r\n      time: formValue.time,\r\n      notes: formValue.notes || undefined,\r\n      status: this.editingAppointment ? this.editingAppointment.status : AppointmentStatus.PENDING\r\n    };\r\n\r\n    if (this.validateAppointmentData(appointmentData)) {\r\n      if (this.editingAppointment) {\r\n        this.updateAppointment(this.editingAppointment.appointmentId, appointmentData);\r\n      } else {\r\n        this.createAppointment(appointmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  loadAppointments(): void {\r\n    this.adminService.getAllAppointments().subscribe({\r\n      next: (appointments: Appointment[]) => {\r\n        this.appointments = appointments;\r\n        this.filterAppointments();\r\n        this.notificationService.success('Rendez-vous chargés avec succès');\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Erreur chargement rendez-vous:', error);\r\n        this.notificationService.error('Erreur lors du chargement des rendez-vous');\r\n      }\r\n    });\r\n  }\r\n\r\n  loadClients(): void {\r\n    this.adminService.getClients().subscribe({\r\n      next: (clients: Client[]) => {\r\n        this.clients = clients;\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur chargement clients:', error);\r\n        this.notificationService.error('Erreur lors du chargement des clients');\r\n      }\r\n    });\r\n  }\r\n\r\n  loadServices(): void {\r\n    this.adminService.getServices().subscribe({\r\n      next: (services: Service[]) => {\r\n        this.services = services;\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Erreur chargement services:', error);\r\n        this.notificationService.error('Erreur lors du chargement des services');\r\n      }\r\n    });\r\n  }\r\n\r\n  createAppointment(appointmentData: Partial<Appointment>): void {\r\n    this.adminService.createAppointment(appointmentData).subscribe({\r\n      next: (_: any) => {\r\n        this.loadAppointments();\r\n        this.toggleAddForm();\r\n        this.notificationService.success('Rendez-vous créé avec succès');\r\n        this.sendConfirmationEmail(appointmentData);\r\n      },\r\n      error: (error: Error) => {\r\n        console.error('Erreur création rendez-vous:', error);\r\n        this.notificationService.error('Erreur lors de la création du rendez-vous');\r\n      }\r\n    });\r\n  }\r\n\r\n  updateAppointment(id: number, appointmentData: Partial<Appointment>): void {\r\n    this.adminService.updateAppointment(id, appointmentData).subscribe({\r\n      next: (_: any) => {\r\n        this.loadAppointments();\r\n        this.toggleAddForm();\r\n        this.notificationService.success('Rendez-vous mis à jour avec succès');\r\n        this.sendUpdateNotification(appointmentData);\r\n      },\r\n      error: (error: Error) => {\r\n        console.error('Erreur mise à jour rendez-vous:', error);\r\n        this.notificationService.error('Erreur lors de la mise à jour du rendez-vous');\r\n      }\r\n    });\r\n  }\r\n\r\n  updateStatus(appointmentId: number, newStatus: AppointmentStatus): void {\r\n    const appointment = this.appointments.find(a => a.appointmentId === appointmentId);\r\n    if (!appointment) {\r\n      this.notificationService.error('Rendez-vous non trouvé');\r\n      return;\r\n    }\r\n\r\n    this.adminService.updateAppointmentStatus(appointmentId, newStatus).subscribe({\r\n      next: (_: any) => {\r\n        this.loadAppointments();\r\n        this.notificationService.success(`Statut du rendez-vous mis à jour : ${newStatus}`);\r\n        if (newStatus === AppointmentStatus.CONFIRMED) {\r\n          this.sendConfirmationEmail(appointment);\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Erreur mise à jour statut:', error);\r\n        this.notificationService.error('Erreur lors de la mise à jour du statut');\r\n      }\r\n    });\r\n  }\r\n\r\n  private markFormGroupTouched(formGroup: FormGroup): void {\r\n    Object.values(formGroup.controls).forEach(control => {\r\n      control.markAsTouched();\r\n      if (control instanceof FormGroup) {\r\n        this.markFormGroupTouched(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  private sendConfirmationEmail(appointment: Partial<Appointment>): void {\r\n    const client = this.clients.find(c => c.clientId === appointment.clientId);\r\n    if (client?.user?.email) {\r\n      this.notificationService.success(`Un email de confirmation a été envoyé à ${client.user.email}`);\r\n    }\r\n  }\r\n\r\n  private sendUpdateNotification(appointment: Partial<Appointment>): void {\r\n    const client = this.clients.find(c => c.clientId === appointment.clientId);\r\n    if (client?.user?.email) {\r\n      this.notificationService.info(`Un email de mise à jour a été envoyé à ${client.user.email}`);\r\n    }\r\n  }\r\n\r\n  formatDate(date: string | Date): string {\r\n    return new Date(date).toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric'\r\n    });\r\n  }\r\n\r\n  formatTime(time: string): string {\r\n    return time.padStart(5, '0');\r\n  }\r\n\r\n  getAllStatuses(): AppointmentStatus[] {\r\n    return Object.values(AppointmentStatus);\r\n  }\r\n\r\n  getStatusLabel(status: AppointmentStatus): string {\r\n    const statusLabels: Record<AppointmentStatus, string> = {\r\n      [AppointmentStatus.PENDING]: 'En attente',\r\n      [AppointmentStatus.CONFIRMED]: 'Confirmé',\r\n      [AppointmentStatus.CANCELLED]: 'Annulé',\r\n      [AppointmentStatus.COMPLETED]: 'Terminé',\r\n      [AppointmentStatus.NOSHOW]: 'Non présenté'\r\n    };\r\n    return statusLabels[status] || status;\r\n  }\r\n\r\n  getServiceDuration(serviceId: number): string {\r\n    const service = this.services.find(s => s.id === serviceId);\r\n    if (!service) return '';\r\n    const hours = Math.floor(service.duration / 60);\r\n    const minutes = service.duration % 60;\r\n    return hours > 0\r\n      ? `${hours}h${minutes > 0 ? minutes : ''}`\r\n      : `${minutes}min`;\r\n  }\r\n\r\n  getStatusClass(status: AppointmentStatus): string {\r\n    const classes: Record<AppointmentStatus, string> = {\r\n      [AppointmentStatus.PENDING]: 'bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full',\r\n      [AppointmentStatus.CONFIRMED]: 'bg-blue-100 text-blue-800 px-2 py-1 rounded-full',\r\n      [AppointmentStatus.CANCELLED]: 'bg-red-100 text-red-800 px-2 py-1 rounded-full',\r\n      [AppointmentStatus.COMPLETED]: 'bg-green-100 text-green-800 px-2 py-1 rounded-full',\r\n      [AppointmentStatus.NOSHOW]: 'bg-gray-100 text-gray-800 px-2 py-1 rounded-full'\r\n    };\r\n    return classes[status] || 'bg-gray-100 text-gray-800 px-2 py-1 rounded-full';\r\n  }\r\n\r\n  canEditAppointment(appointment: Appointment): boolean {\r\n    return appointment.status !== AppointmentStatus.CANCELLED &&\r\n      appointment.status !== AppointmentStatus.COMPLETED &&\r\n      new Date(appointment.appointmentDate) > new Date();\r\n  }\r\n\r\n  cancelAppointment(appointment: Appointment): void {\r\n    if (confirm(`Êtes-vous sûr de vouloir annuler ce rendez-vous avec ${appointment.client?.firstName} ${appointment.client?.lastName} ?`)) {\r\n      this.updateStatus(appointment.appointmentId, AppointmentStatus.CANCELLED);\r\n    }\r\n  }\r\n\r\n  protected readonly AppointmentStatus = AppointmentStatus;\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Type } from '../../models/type/type.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeService {\r\n  private readonly API_URL = 'http://localhost:2024/api/types';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getTypes(): Observable<Type[]> {\r\n    return this.http.get<Type[]>(this.API_URL).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getTypeById(id: number): Observable<Type> {\r\n    return this.http.get<Type>(`${this.API_URL}/${id}`).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  createType(type: Partial<Type>): Observable<Type> {\r\n    // Vérification des données avant envoi\r\n    if (!type.name?.trim()) {\r\n      return throwError(() => new Error('Le nom du type est requis'));\r\n    }\r\n\r\n    if (type.name.length > 200) {\r\n      return throwError(() => new Error('Le nom ne doit pas dépasser 200 caractères'));\r\n    }\r\n\r\n    return this.http.post<Type>(this.API_URL, type).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateType(id: number, type: Partial<Type>): Observable<Type> {\r\n    return this.http.put<Type>(`${this.API_URL}/${id}`, type).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  deleteType(id: string | number): Observable<void> {\r\n    // Assurez-vous que l'id est un nombre valide\r\n    const numericId = Number(id);\r\n    if (isNaN(numericId)) {\r\n      return throwError(() => new Error('ID invalide'));\r\n    }\r\n    return this.http.delete<void>(`${this.API_URL}/${numericId}`);\r\n  }\r\n\r\n  checkTypeExists(name: string): Observable<boolean> {\r\n    return this.getTypes().pipe(\r\n      map(types => types.some(type =>\r\n        type.name.toLowerCase() === name.toLowerCase())\r\n      )\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Une erreur est survenue';\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Erreur côté client\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Erreur côté serveur\r\n      switch (error.status) {\r\n        case 400:\r\n          errorMessage = 'Données invalides';\r\n          break;\r\n        case 404:\r\n          errorMessage = 'Type non trouvé';\r\n          break;\r\n        case 409:\r\n          errorMessage = 'Ce type existe déjà';\r\n          break;\r\n        default:\r\n          errorMessage = 'Erreur serveur';\r\n      }\r\n    }\r\n\r\n    return throwError(() => errorMessage);\r\n  }\r\n}\r\n", "// feature/Dashboard/DashboardComponent/admin/products/product-form/admin-admin-product-form.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../../../../../../services/product/product.service';\r\nimport { TypeService } from '../../../../../../services/type/type.service';\r\nimport { Type } from '../../../../../../models/type/type.model';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport {Product} from '../../../../../../models/product/product.model';\r\n\r\n@Component({\r\n  selector: 'app-admin-product-form',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  template: `\r\n    <div class=\"admin-product-form\">\r\n      <div class=\"form-header\">\r\n        <h2>{{ isEditMode ? 'Modifier le produit' : 'Ajouter un produit' }}</h2>\r\n        <button type=\"button\" class=\"back-btn\" (click)=\"goBack()\">\r\n          Retour\r\n        </button>\r\n      </div>\r\n\r\n      @if (errorMessage) {\r\n        <div class=\"error-alert\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      }\r\n\r\n      <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\" class=\"form-container\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Nom du produit*</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            class=\"form-control\"\r\n            [class.is-invalid]=\"isFieldInvalid('name')\"\r\n          >\r\n          @if (isFieldInvalid('name')) {\r\n            <div class=\"error-message\">\r\n              @if (productForm.get('name')?.errors?.['required']) {\r\n                Le nom est requis\r\n              } @else if (productForm.get('name')?.errors?.['minlength']) {\r\n                Le nom doit contenir au moins 3 caractères\r\n              }\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            formControlName=\"description\"\r\n            rows=\"4\"\r\n            class=\"form-control\"\r\n            [class.is-invalid]=\"isFieldInvalid('description')\"\r\n          ></textarea>\r\n          @if (isFieldInvalid('description')) {\r\n            <div class=\"error-message\">\r\n              La description est requise\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group\">\r\n            <label for=\"price\">Prix*</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"number\"\r\n              formControlName=\"price\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"isFieldInvalid('price')\"\r\n            >\r\n            @if (isFieldInvalid('price')) {\r\n              <div class=\"error-message\">\r\n                Prix invalide\r\n              </div>\r\n            }\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"stock\">Stock*</label>\r\n            <input\r\n              id=\"stock\"\r\n              type=\"number\"\r\n              formControlName=\"stock\"\r\n              min=\"0\"\r\n              class=\"form-control\"\r\n              [class.is-invalid]=\"isFieldInvalid('stock')\"\r\n            >\r\n            @if (isFieldInvalid('stock')) {\r\n              <div class=\"error-message\">\r\n                Stock invalide\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"typeId\">Type de produit*</label>\r\n          <select\r\n            id=\"typeId\"\r\n            formControlName=\"typeId\"\r\n            class=\"form-control\"\r\n            [class.is-invalid]=\"isFieldInvalid('typeId')\"\r\n          >\r\n            <option value=\"\">Sélectionner un type</option>\r\n            @for (type of types; track type.id_type) {\r\n              <option [value]=\"type.id_type\">{{ type.name }}</option>\r\n            }\r\n          </select>\r\n          @if (isFieldInvalid('typeId')) {\r\n            <div class=\"error-message\">\r\n              Le type est requis\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Image du produit</label>\r\n          <div class=\"image-upload\">\r\n            <input\r\n              type=\"file\"\r\n              (change)=\"onFileSelected($event)\"\r\n              accept=\"image/*\"\r\n              class=\"file-input\"\r\n            >\r\n            @if (selectedFile) {\r\n              <div class=\"selected-file\">\r\n                Fichier sélectionné: {{ selectedFile.name }}\r\n              </div>\r\n            }\r\n            @if (currentImage) {\r\n              <div class=\"current-image\">\r\n                <img [src]=\"currentImage\" alt=\"Image actuelle\">\r\n                <button type=\"button\" class=\"remove-image\" (click)=\"removeImage()\">\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"checkbox-label\">\r\n            <input\r\n              type=\"checkbox\"\r\n              formControlName=\"active\"\r\n            > Produit actif\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"cancel-btn\"\r\n            (click)=\"goBack()\"\r\n          >\r\n            Annuler\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"submit-btn\"\r\n            [disabled]=\"productForm.invalid || isLoading\"\r\n          >\r\n            @if (isLoading) {\r\n              <span>Traitement en cours...</span>\r\n            } @else {\r\n              <span>{{ isEditMode ? 'Mettre à jour' : 'Ajouter' }}</span>\r\n            }\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .admin-product-form {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      padding: 2rem;\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .form-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 2rem;\r\n\r\n      h2 {\r\n        margin: 0;\r\n        color: #1a1a1a;\r\n      }\r\n    }\r\n\r\n    .form-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    .form-group {\r\n      label {\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n        color: #4b5563;\r\n        font-weight: 500;\r\n      }\r\n    }\r\n\r\n    .form-row {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 1rem;\r\n    }\r\n\r\n    .form-control {\r\n      width: 100%;\r\n      padding: 0.75rem;\r\n      border: 1px solid #d1d5db;\r\n      border-radius: 6px;\r\n      transition: all 0.2s;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #4f46e5;\r\n        box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);\r\n      }\r\n\r\n      &.is-invalid {\r\n        border-color: #dc2626;\r\n      }\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc2626;\r\n      font-size: 0.875rem;\r\n      margin-top: 0.25rem;\r\n    }\r\n\r\n    .error-alert {\r\n      background: #fee2e2;\r\n      border: 1px solid #fecaca;\r\n      color: #dc2626;\r\n      padding: 1rem;\r\n      border-radius: 6px;\r\n      margin-bottom: 1.5rem;\r\n    }\r\n\r\n    .image-upload {\r\n      padding: 1rem;\r\n      border: 2px dashed #d1d5db;\r\n      border-radius: 6px;\r\n\r\n      .current-image {\r\n        margin-top: 1rem;\r\n\r\n        img {\r\n          max-width: 200px;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .remove-image {\r\n          display: block;\r\n          margin-top: 0.5rem;\r\n          color: #dc2626;\r\n          background: none;\r\n          border: none;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n      .selected-file {\r\n        margin-top: 0.5rem;\r\n        font-size: 0.875rem;\r\n        color: #4b5563;\r\n      }\r\n    }\r\n\r\n    .checkbox-label {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 0.5rem;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      gap: 1rem;\r\n      margin-top: 2rem;\r\n\r\n      button {\r\n        padding: 0.75rem 1.5rem;\r\n        border-radius: 6px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n\r\n        &.submit-btn {\r\n          background: #16a34a;\r\n          color: white;\r\n          border: none;\r\n\r\n          &:hover:not(:disabled) {\r\n            background: #15803d;\r\n          }\r\n\r\n          &:disabled {\r\n            opacity: 0.7;\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n\r\n        &.cancel-btn {\r\n          background: white;\r\n          border: 1px solid #d1d5db;\r\n          color: #4b5563;\r\n\r\n          &:hover {\r\n            background: #f9fafb;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    @media (max-width: 640px) {\r\n      .form-row {\r\n        grid-template-columns: 1fr;\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class AdminProductFormComponent implements OnInit {\r\n  productForm: FormGroup = this.initForm();\r\n  isLoading = false;\r\n  isEditMode = false;\r\n  errorMessage = '';\r\n  selectedFile: File | null = null;\r\n  currentImage: string | null = null;\r\n  types: Type[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private productService: ProductService,\r\n    private typeService: TypeService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  private initForm(): FormGroup {\r\n    return this.fb.group({\r\n      name: ['', [Validators.required, Validators.minLength(3)]],\r\n      description: ['', Validators.required],\r\n      price: [0, [Validators.required, Validators.min(0)]],\r\n      stock: [0, [Validators.required, Validators.min(0)]],\r\n      active: [true],\r\n      typeId: [null, Validators.required],\r\n      requiresPrescription: [false]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadTypes();\r\n    this.checkEditMode();\r\n  }\r\n\r\n  private loadTypes(): void {\r\n    this.typeService.getTypes().subscribe({\r\n      next: (types) => this.types = types,\r\n      error: () => this.errorMessage = 'Erreur lors du chargement des types'\r\n    });\r\n  }\r\n\r\n  private async checkEditMode(): Promise<void> {\r\n    const id = this.route.snapshot.params['id'];\r\n    if (id) {\r\n      this.isEditMode = true;\r\n      await this.loadProduct(Number(id));\r\n    }\r\n  }\r\n\r\n  private async loadProduct(id: number): Promise<void> {\r\n    try {\r\n      const product = await firstValueFrom(this.productService.getProductById(id));\r\n      this.productForm.patchValue({\r\n        name: product.name,\r\n        description: product.description,\r\n        price: product.price,\r\n        stock: product.stock,\r\n        active: product.active,\r\n        typeId: product.typeId,\r\n        requiresPrescription: false // valeur par défaut\r\n      });\r\n      this.currentImage = product.imageUrls?.[0] ?? null;\r\n    } catch (error) {\r\n      this.errorMessage = \"Erreur lors du chargement du produit\";\r\n    }\r\n  }\r\n\r\n  async onSubmit(): Promise<void> {\r\n    if (this.productForm.invalid || this.isLoading) return;\r\n\r\n    this.isLoading = true;\r\n    try {\r\n      const formValue = this.productForm.value;\r\n      const productData: Product = {\r\n        id_product: this.isEditMode ? Number(this.route.snapshot.params['id']) : 0,\r\n        name: formValue.name,\r\n        description: formValue.description,\r\n        price: formValue.price,\r\n        stock: formValue.stock,\r\n        active: formValue.active,\r\n        typeId: formValue.typeId,\r\n        imageUrls: this.currentImage ? [this.currentImage] : []\r\n      };\r\n\r\n      if (this.isEditMode) {\r\n        await firstValueFrom(\r\n          this.productService.updateProduct(productData.id_product, productData)\r\n        );\r\n      } else {\r\n        await firstValueFrom(this.productService.createProduct(productData));\r\n      }\r\n\r\n      this.router.navigate(['/admin/products']);\r\n    } catch (error) {\r\n      this.errorMessage = \"Erreur lors de l'enregistrement du produit\";\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  onFileSelected(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    if (input.files?.length) {\r\n      this.selectedFile = input.files[0];\r\n    }\r\n  }\r\n\r\n  removeImage(): void {\r\n    this.currentImage = null;\r\n    this.selectedFile = null;\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.productForm.get(fieldName);\r\n    return !!field && field.invalid && (field.dirty || field.touched);\r\n  }\r\n\r\n\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/admin/products']);\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ProductService } from '../../../../../services/product/product.service';\r\nimport { TypeService } from '../../../../../services/type/type.service';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\nimport { PromotionService } from '../../../../../services/promotion/promotion.service';\r\nimport { Product } from '../../../../../models/product/product.model';\r\nimport { Type } from '../../../../../models/type/type.model';\r\nimport { Promotion } from '../../../../../models/promotion/promotion.model';\r\n\r\n// Dans admin-products.component.ts\r\ninterface ProductWithPromotion extends Product {\r\n  activePromotion?: {\r\n    id_promotion: number;\r\n    description: string;\r\n    discountPercentage: number;\r\n    // Ajout des dates manquantes\r\n    startDate: string | Date;\r\n    endDate: string | Date;\r\n  };\r\n  selectedPromotionId?: number;\r\n  promotionPrice?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-admin-products',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"products-container\">\r\n      <header class=\"page-header\">\r\n        <h2>Gestion des Produits</h2>\r\n        <button class=\"add-btn\" (click)=\"toggleAddForm()\">\r\n          Ajouter un produit\r\n        </button>\r\n      </header>\r\n\r\n      <!-- Formulaire d'ajout -->\r\n      <div *ngIf=\"showAddForm\" class=\"form-container\">\r\n        <h3>{{ editingProduct ? 'Modifier le produit' : 'Ajouter un produit' }}</h3>\r\n        <form (ngSubmit)=\"onSubmit()\" #productForm=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Nom du produit*</label>\r\n            <input\r\n              id=\"name\"\r\n              [(ngModel)]=\"newProduct.name\"\r\n              name=\"name\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Ex: Crème hydratante\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"description\">Description*</label>\r\n            <textarea\r\n              id=\"description\"\r\n              [(ngModel)]=\"newProduct.description\"\r\n              name=\"description\"\r\n              required\r\n              rows=\"3\"\r\n              placeholder=\"Décrivez le produit...\"\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group\">\r\n              <label for=\"price\">Prix (€)*</label>\r\n              <input\r\n                id=\"price\"\r\n                [(ngModel)]=\"newProduct.price\"\r\n                name=\"price\"\r\n                required\r\n                type=\"number\"\r\n                min=\"0\"\r\n                step=\"0.01\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"stock\">Stock*</label>\r\n              <input\r\n                id=\"stock\"\r\n                [(ngModel)]=\"newProduct.stock\"\r\n                name=\"stock\"\r\n                required\r\n                type=\"number\"\r\n                min=\"0\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"typeId\">Catégorie*</label>\r\n            <select\r\n              id=\"typeId\"\r\n              name=\"typeId\"\r\n              [(ngModel)]=\"newProduct.typeId\"\r\n              required\r\n            >\r\n              <option value=\"\">Sélectionner une catégorie</option>\r\n              <option *ngFor=\"let type of types\" [value]=\"type.id_type\">\r\n                {{ type.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-actions\">\r\n            <button type=\"submit\" class=\"save-btn\" [disabled]=\"!productForm.valid\">\r\n              {{ editingProduct ? 'Mettre à jour' : 'Ajouter' }}\r\n            </button>\r\n            <button type=\"button\" class=\"cancel-btn\" (click)=\"toggleAddForm()\">\r\n              Annuler\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Liste des produits -->\r\n      <div class=\"products-grid\">\r\n        <div *ngFor=\"let product of products\" class=\"product-card\">\r\n          <div class=\"product-content\">\r\n            <h3>{{ product.name }}</h3>\r\n            <p class=\"description\">{{ product.description }}</p>\r\n            <div class=\"product-info\">\r\n              <div class=\"price-stock\">\r\n                <span class=\"price\" [class.original-price]=\"product.activePromotion\">\r\n                  {{ product.price | currency:'EUR' }}\r\n                </span>\r\n                <span *ngIf=\"product.activePromotion\" class=\"promotion-price\">\r\n                  {{ (product.price * (1 - product.activePromotion.discountPercentage / 100)) | currency:'EUR' }}\r\n                </span>\r\n                <span class=\"stock\" [class.low-stock]=\"product.stock < 5\">\r\n                  Stock: {{ product.stock }}\r\n                </span>\r\n              </div>\r\n\r\n              <!-- Gestion des promotions -->\r\n              <div class=\"promotion-controls\">\r\n                <select class=\"promotion-select\" [(ngModel)]=\"product.selectedPromotionId\">\r\n                  <option [ngValue]=\"null\">Sélectionner une promotion</option>\r\n                  <option *ngFor=\"let promo of availablePromotions\" [value]=\"promo.id_promotion\">\r\n                    {{ promo.description }} (-{{ promo.discountPercentage }}%)\r\n                  </option>\r\n                </select>\r\n                <button\r\n                  class=\"promotion-btn apply\"\r\n                  (click)=\"applyPromotion(product, product.selectedPromotionId)\"\r\n                  [disabled]=\"product.selectedPromotionId === undefined || product.selectedPromotionId === null\"\r\n                >\r\n                  Appliquer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"product-actions\">\r\n            <button class=\"edit-btn\" (click)=\"editProduct(product)\">\r\n              Modifier\r\n            </button>\r\n            <button class=\"delete-btn\" (click)=\"deleteProduct(product.id_product)\">\r\n              Supprimer\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"products.length === 0\" class=\"no-data\">Aucun produit disponible</div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .products-container {\r\n      padding: 20px;\r\n      max-width: 1200px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .page-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .add-btn {\r\n      background: #4f46e5;\r\n      color: white;\r\n      padding: 8px 16px;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      transition: background 0.3s;\r\n    }\r\n\r\n    .add-btn:hover {\r\n      background: #4338ca;\r\n    }\r\n\r\n    .form-container {\r\n      background: white;\r\n      padding: 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .form-group {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .form-group label {\r\n      display: block;\r\n      margin-bottom: 5px;\r\n      color: #4b5563;\r\n    }\r\n\r\n    .form-group input,\r\n    .form-group textarea,\r\n    .form-group select {\r\n      width: 100%;\r\n      padding: 8px;\r\n      border: 1px solid #d1d5db;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .form-row {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      gap: 15px;\r\n    }\r\n\r\n    .products-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 20px;\r\n    }\r\n\r\n    .product-card {\r\n      background: white;\r\n      border-radius: 8px;\r\n      padding: 20px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .product-content {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .product-info {\r\n      margin: 15px 0;\r\n    }\r\n\r\n    .price-stock {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    .original-price {\r\n      text-decoration: line-through;\r\n      color: #6b7280;\r\n    }\r\n\r\n    .promotion-price {\r\n      color: #dc2626;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .low-stock {\r\n      color: #dc2626;\r\n    }\r\n\r\n    .promotion-controls {\r\n      display: flex;\r\n      gap: 8px;\r\n    }\r\n\r\n    .promotion-select {\r\n      flex: 1;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      gap: 10px;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .save-btn,\r\n    .cancel-btn {\r\n      padding: 8px 16px;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      transition: background 0.3s;\r\n    }\r\n\r\n    .save-btn {\r\n      background: #4f46e5;\r\n      color: white;\r\n    }\r\n\r\n    .save-btn:disabled {\r\n      background: #d1d5db;\r\n      cursor: not-allowed;\r\n    }\r\n\r\n    .cancel-btn {\r\n      background: #dc2626;\r\n      color: white;\r\n    }\r\n\r\n    .edit-btn,\r\n    .delete-btn {\r\n      padding: 8px 16px;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      transition: background 0.3s;\r\n    }\r\n\r\n    .edit-btn {\r\n      background: #4f46e5;\r\n      color: white;\r\n    }\r\n\r\n    .delete-btn {\r\n      background: #dc2626;\r\n      color: white;\r\n    }\r\n\r\n    .no-data {\r\n      grid-column: 1 / -1;\r\n      text-align: center;\r\n      padding: 40px;\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      .form-row {\r\n        grid-template-columns: 1fr;\r\n      }\r\n\r\n      .products-grid {\r\n        grid-template-columns: 1fr;\r\n      }\r\n    }\r\n  `]\r\n})\r\n// Composant de gestion des produits pour l'interface administrateur\r\nexport class AdminProductsComponent implements OnInit {\r\n  // Tableau des produits avec leurs promotions associées\r\n  products: ProductWithPromotion[] = [];\r\n  // Liste des promotions disponibles\r\n  availablePromotions: Promotion[] = [];\r\n  // Contrôle l'affichage du formulaire d'ajout\r\n  showAddForm = false;\r\n  // Produit en cours d'édition\r\n  editingProduct: Product | null = null;\r\n  // Liste des catégories de produits\r\n  types: Type[] = [];\r\n\r\n  constructor(\r\n    private productService: ProductService, // Service de gestion des produits\r\n    private promotionService: PromotionService, // Service de gestion des promotions\r\n    private notificationService: NotificationService, // Service de notifications\r\n    private typeService: TypeService // Service de gestion des catégories\r\n  ) {}\r\n\r\n  // Modèle pour un nouveau produit\r\n  newProduct = {\r\n    name: '',\r\n    description: '',\r\n    price: 0,\r\n    stock: 0,\r\n    active: true,\r\n    typeId: 0\r\n  };\r\n\r\n  // Initialisation du composant\r\n  ngOnInit() {\r\n    this.loadProducts();\r\n    this.loadPromotions();\r\n    this.loadTypes();\r\n  }\r\n\r\n  // Charge les catégories de produits\r\n  loadTypes(): void {\r\n    this.typeService.getTypes().subscribe({\r\n      next: (typesData: Type[]) => {\r\n        this.types = typesData;\r\n      },\r\n      error: () => this.notificationService.error('Erreur lors du chargement des catégories')\r\n    });\r\n  }\r\n\r\n  // Bascule l'affichage du formulaire d'ajout/édition\r\n  toggleAddForm(): void {\r\n    this.showAddForm = !this.showAddForm;\r\n    if (!this.showAddForm) {\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  // Gère la soumission du formulaire\r\n  onSubmit(): void {\r\n    if (this.editingProduct) {\r\n      this.updateProduct();\r\n    } else {\r\n      this.addProduct();\r\n    }\r\n  }\r\n\r\n  // Ajoute un nouveau produit\r\n  addProduct(): void {\r\n    // Vérifie si le nom du produit existe déjà\r\n    const productExists = this.products.some(product => product.name.toLowerCase() === this.newProduct.name.toLowerCase());\r\n\r\n    if (productExists) {\r\n      this.notificationService.error('Un produit avec ce nom existe déjà');\r\n      return;\r\n    }\r\n\r\n    const newProduct: Product = {\r\n      ...this.newProduct,\r\n      id_product: 0,\r\n      imageUrls: []\r\n    };\r\n\r\n    this.productService.createProduct(newProduct).subscribe({\r\n      next: () => {\r\n        this.notificationService.success('Produit ajouté avec succès');\r\n        this.loadProducts();\r\n        this.toggleAddForm();\r\n      },\r\n      error: () => this.notificationService.error('Erreur lors de l\\'ajout du produit')\r\n    });\r\n  }\r\n\r\n  // Met à jour un produit existant\r\n  updateProduct(): void {\r\n    if (!this.editingProduct) return;\r\n\r\n    const updatedProduct: Product = {\r\n      ...this.newProduct,\r\n      id_product: this.editingProduct.id_product,\r\n      price: Number(this.newProduct.price),\r\n      stock: Number(this.newProduct.stock),\r\n      typeId: Number(this.newProduct.typeId),\r\n      imageUrls: this.editingProduct.imageUrls || []\r\n    };\r\n\r\n    this.productService.updateProduct(this.editingProduct.id_product, updatedProduct).subscribe({\r\n      next: (response) => {\r\n        this.notificationService.success('Produit mis à jour avec succès');\r\n        this.loadProducts();\r\n        this.toggleAddForm();\r\n      },\r\n      error: (error) => {\r\n        this.notificationService.error('Erreur lors de la mise à jour: ' +\r\n          (error.error?.message || 'Une erreur est survenue'));\r\n      }\r\n    });\r\n  }\r\n\r\n  // Charge les promotions actives\r\n  loadPromotions() {\r\n    this.promotionService.getActivePromotions().subscribe({\r\n      next: (promotions) => {\r\n        this.availablePromotions = promotions;\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur chargement promotions:', error);\r\n        this.notificationService.error('Erreur lors du chargement des promotions');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Prépare l'édition d'un produit\r\n  editProduct(product: Product): void {\r\n    this.editingProduct = {...product};\r\n    this.newProduct = {\r\n      name: product.name,\r\n      description: product.description,\r\n      price: product.price,\r\n      stock: product.stock,\r\n      active: product.active,\r\n      typeId: product.typeId || 0\r\n    };\r\n    this.showAddForm = true;\r\n  }\r\n\r\n  // Supprime un produit\r\n  deleteProduct(id: number) {\r\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce produit ?')) {\r\n      this.productService.deleteProduct(id).subscribe({\r\n        next: () => {\r\n          this.notificationService.success('Produit supprimé');\r\n          this.loadProducts();\r\n        },\r\n        error: () => this.notificationService.error('Erreur lors de la suppression')\r\n      });\r\n    }\r\n  }\r\n\r\n  // Charge tous les produits avec leurs promotions\r\n  loadProducts() {\r\n    this.productService.getAllProducts().subscribe({\r\n      next: (products) => {\r\n        this.products = products.map(product => {\r\n          const hasActivePromotion = product.promotion && this.isPromotionActive(product.promotion);\r\n\r\n          return {\r\n            ...product,\r\n            activePromotion: hasActivePromotion && product.promotion ? {\r\n              id_promotion: product.promotion.id_promotion,\r\n              description: product.promotion.description,\r\n              discountPercentage: product.promotion.discountPercentage,\r\n              startDate: product.promotion.startDate,\r\n              endDate: product.promotion.endDate\r\n            } : undefined,\r\n            selectedPromotionId: hasActivePromotion && product.promotion ?\r\n              product.promotion.id_promotion :\r\n              undefined\r\n          };\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading products:', error);\r\n        this.notificationService.error('Erreur lors du chargement des produits');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Vérifie si une promotion est active\r\n  isPromotionActive(promotion: ProductWithPromotion['promotion']): boolean {\r\n    if (!promotion) return false;\r\n    const now = new Date();\r\n    const startDate = new Date(promotion.startDate);\r\n    const endDate = new Date(promotion.endDate);\r\n    return now >= startDate && now <= endDate;\r\n  }\r\n\r\n  // Applique une promotion à un produit\r\n  applyPromotion(product: ProductWithPromotion, promotionId: number | undefined | null) {\r\n    if (!promotionId) return;\r\n\r\n    this.productService.applyPromotion(product.id_product, promotionId).subscribe({\r\n      next: () => {\r\n        const selectedPromotion = this.availablePromotions.find(\r\n          p => p.id_promotion === promotionId\r\n        );\r\n\r\n        if (selectedPromotion) {\r\n          product.activePromotion = {\r\n            id_promotion: selectedPromotion.id_promotion,\r\n            description: selectedPromotion.description,\r\n            discountPercentage: selectedPromotion.discountPercentage,\r\n            startDate: selectedPromotion.startDate,\r\n            endDate: selectedPromotion.endDate\r\n          };\r\n          product.promotionPrice = product.price * (1 - selectedPromotion.discountPercentage / 100);\r\n        }\r\n\r\n        this.notificationService.success('Promotion appliquée avec succès');\r\n        this.loadProducts();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error applying promotion:', error);\r\n        this.notificationService.error(\r\n          'Erreur lors de l\\'application de la promotion: ' +\r\n          (error.error?.message || 'Une erreur est survenue')\r\n        );\r\n        product.selectedPromotionId = undefined;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Réinitialise le formulaire\r\n  resetForm(): void {\r\n    this.editingProduct = null;\r\n    this.newProduct = {\r\n      name: '',\r\n      description: '',\r\n      price: 0,\r\n      stock: 0,\r\n      active: true,\r\n      typeId: 0\r\n    };\r\n  }\r\n}", "// feature/Dashboard/DashboardComponent/admin/types/type-form/admin-type-form.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TypeService } from '../../../../../../services/type/type.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-type-form',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule],\r\n  template: `\r\n    <div class=\"type-form-container\">\r\n      <h2>Ajouter un type</h2>\r\n\r\n      @if (errorMessage) {\r\n        <div class=\"error-alert\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      }\r\n\r\n      @if (successMessage) {\r\n        <div class=\"success-alert\">\r\n          {{ successMessage }}\r\n        </div>\r\n      }\r\n\r\n      <form [formGroup]=\"typeForm\" (ngSubmit)=\"onSubmit()\" class=\"type-form\">\r\n        <!-- Nom du type -->\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Nom du type*</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            maxlength=\"200\"\r\n            [class.error]=\"shouldShowError('name')\"\r\n          >\r\n          @if (shouldShowError('name')) {\r\n            <div class=\"error-message\">\r\n              @if (typeForm.get('name')?.errors?.['required']) {\r\n                Le nom du type est obligatoire\r\n              }\r\n              @if (typeForm.get('name')?.errors?.['maxlength']) {\r\n                Le nom ne doit pas dépasser 200 caractères\r\n              }\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <!-- Description -->\r\n        <div class=\"form-group\">\r\n          <label for=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            formControlName=\"description\"\r\n            rows=\"3\"\r\n            [class.error]=\"shouldShowError('description')\"\r\n          ></textarea>\r\n          @if (shouldShowError('description')) {\r\n            <div class=\"error-message\">\r\n              La description est obligatoire\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <!-- Icône -->\r\n        <div class=\"form-group\">\r\n          <label for=\"icon\">Icône*</label>\r\n          <select\r\n            id=\"icon\"\r\n            formControlName=\"icon\"\r\n            [class.error]=\"shouldShowError('icon')\"\r\n          >\r\n            <option value=\"\">Sélectionner une icône</option>\r\n            <option value=\"🧴\">🧴 Crèmes</option>\r\n            <option value=\"💆‍♀️\">💆‍♀️ Soins</option>\r\n            <option value=\"💄\">💄 Maquillage</option>\r\n            <option value=\"👄\">👄 Lèvres</option>\r\n            <option value=\"✨\">✨ Soins visage</option>\r\n            <option value=\"💅\">💅 Ongles</option>\r\n            <option value=\"🌿\">🌿 Bio & Naturel</option>\r\n          </select>\r\n          @if (shouldShowError('icon')) {\r\n            <div class=\"error-message\">\r\n              L'icône est obligatoire\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"cancel-btn\" (click)=\"onCancel()\">\r\n            Annuler\r\n          </button>\r\n          <button type=\"submit\" class=\"submit-btn\">\r\n            Ajouter\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .type-form-container {\r\n      background: white;\r\n      padding: 2rem;\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    h2 {\r\n      color: #1a1a1a;\r\n      margin-bottom: 2rem;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .form-group {\r\n      margin-bottom: 1.5rem;\r\n\r\n      label {\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n        color: #374151;\r\n        font-size: 0.875rem;\r\n      }\r\n\r\n      input, textarea, select {\r\n        width: 100%;\r\n        padding: 0.75rem;\r\n        border: 1px solid #d1d5db;\r\n        border-radius: 4px;\r\n        font-size: 0.875rem;\r\n\r\n        &.error {\r\n          border-color: #dc2626;\r\n        }\r\n      }\r\n\r\n      textarea {\r\n        resize: vertical;\r\n      }\r\n\r\n      select {\r\n        background-color: white;\r\n      }\r\n    }\r\n\r\n    .error-alert {\r\n      background: #fee2e2;\r\n      border: 1px solid #fecaca;\r\n      color: #dc2626;\r\n      padding: 0.75rem;\r\n      border-radius: 4px;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .success-alert {\r\n      background: #dcfce7;\r\n      border: 1px solid #bbf7d0;\r\n      color: #15803d;\r\n      padding: 0.75rem;\r\n      border-radius: 4px;\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc2626;\r\n      font-size: 0.75rem;\r\n      margin-top: 0.25rem;\r\n    }\r\n\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;\r\n      margin-top: 2rem;\r\n\r\n      button {\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 4px;\r\n        font-weight: 500;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n\r\n        &.cancel-btn {\r\n          background: white;\r\n          border: 1px solid #d1d5db;\r\n          color: #4b5563;\r\n\r\n          &:hover {\r\n            background: #f3f4f6;\r\n          }\r\n        }\r\n\r\n        &.submit-btn {\r\n          background: #10b981;\r\n          color: white;\r\n          border: none;\r\n\r\n          &:hover {\r\n            background: #059669;\r\n          }\r\n\r\n          &:disabled {\r\n            background: #9ca3af;\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `]\r\n})\r\nexport class AdminTypeFormComponent implements OnInit {\r\n  typeForm: FormGroup = this.fb.group({\r\n    name: ['', [Validators.required, Validators.maxLength(200)]],\r\n    description: ['', [Validators.required]],\r\n    icon: ['', [Validators.required]]\r\n  });\r\n  errorMessage = '';\r\n  successMessage = '';\r\n  isSubmitting = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private typeService: TypeService,\r\n    private router: Router\r\n  ) {\r\n    this.initForm();\r\n  }\r\n\r\n  private initForm(): void {\r\n    this.typeForm = this.fb.group({\r\n      name: ['', [Validators.required, Validators.maxLength(200)]],\r\n      description: ['', [Validators.required]],\r\n      icon: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  shouldShowError(fieldName: string): boolean {\r\n    const field = this.typeForm.get(fieldName);\r\n    return !!field && !field.valid && (field.dirty || field.touched);\r\n  }\r\n\r\n  async onSubmit(): Promise<void> {\r\n    if (this.typeForm.invalid) {\r\n      Object.keys(this.typeForm.controls).forEach(key => {\r\n        const control = this.typeForm.get(key);\r\n        if (control) {\r\n          control.markAsTouched();\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (this.isSubmitting) return;\r\n    this.isSubmitting = true;\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n\r\n    try {\r\n      // Vérifier si le type existe déjà\r\n      const existingType = await this.typeService.checkTypeExists(this.typeForm.value.name).toPromise();\r\n\r\n      if (existingType) {\r\n        this.errorMessage = 'Ce type existe déjà';\r\n        this.isSubmitting = false;\r\n        return;\r\n      }\r\n\r\n      await this.typeService.createType(this.typeForm.value).toPromise();\r\n      this.successMessage = 'Type ajouté avec succès';\r\n      setTimeout(() => {\r\n        this.router.navigate(['/admin/types']);\r\n      }, 1500);\r\n\r\n    } catch (error) {\r\n      this.errorMessage = 'Erreur lors de la création du type';\r\n    } finally {\r\n      this.isSubmitting = false;\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.router.navigate(['/admin/types']);\r\n  }\r\n}\r\n", "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Type } from '../../../../../models/type/type.model';\r\nimport { TypeService } from '../../../../../services/type/type.service';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-types',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"types-management\">\r\n      <!-- En-tête -->\r\n      <div class=\"page-header\">\r\n        <h1>Catégories de Médicaments et Produits</h1>\r\n      </div>\r\n\r\n      <!-- État de chargement -->\r\n      @if (loading) {\r\n        <div class=\"loading-state\">\r\n          <span class=\"loader\"></span>\r\n          <p>Chargement des catégories...</p>\r\n        </div>\r\n      }\r\n\r\n      <!-- Affichage des erreurs -->\r\n      @if (error) {\r\n        <div class=\"error-state\">\r\n          <p>{{ error }}</p>\r\n          <button (click)=\"loadTypes()\">Réessayer</button>\r\n        </div>\r\n      }\r\n\r\n      <!-- Grille des types -->\r\n      <div class=\"types-grid\">\r\n        @for (type of types; track type.id_type) {\r\n          <div class=\"type-card\" [class.requires-prescription]=\"type.prescription_required\">\r\n            <div class=\"card-content\">\r\n              <div class=\"type-icon\">{{ type.icon }}</div>\r\n              <div class=\"type-details\">\r\n                @if (type.prescription_required) {\r\n                  <span class=\"prescription-badge\">Ordonnance requise</span>\r\n                }\r\n                <h3>{{ type.name }}</h3>\r\n                <p>{{ type.description }}</p>\r\n              </div>\r\n              <div class=\"card-actions\">\r\n                <button class=\"action-btn edit\" (click)=\"editType(type)\">\r\n                  Modifier\r\n                </button>\r\n                <button class=\"action-btn delete\" (click)=\"confirmDelete(type)\">\r\n                  Supprimer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <!-- Bouton ajouter -->\r\n        <div class=\"add-card\" (click)=\"startAdd()\">\r\n          <div class=\"add-content\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            <span>Ajouter une catégorie</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal de formulaire -->\r\n    @if (showForm) {\r\n      <div class=\"modal-overlay\">\r\n        <div class=\"modal-content\">\r\n          <h3>{{ editingType ? 'Modifier' : 'Ajouter' }} une catégorie</h3>\r\n          <form #typeForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" novalidate>\r\n            <!-- Champ Nom -->\r\n            <div class=\"form-group\">\r\n              <label>Nom</label>\r\n              <input\r\n                [(ngModel)]=\"currentType.name\"\r\n                name=\"name\"\r\n                required\r\n                #name=\"ngModel\"\r\n                [class.invalid]=\"name.invalid && name.touched\"\r\n              >\r\n              @if (name.invalid && name.touched) {\r\n                <div class=\"error-message\">Le nom est requis</div>\r\n              }\r\n            </div>\r\n\r\n            <!-- Champ Description -->\r\n            <div class=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                [(ngModel)]=\"currentType.description\"\r\n                name=\"description\"\r\n                required\r\n                #description=\"ngModel\"\r\n                [class.invalid]=\"description.invalid && description.touched\"\r\n              ></textarea>\r\n              @if (description.invalid && description.touched) {\r\n                <div class=\"error-message\">La description est requise</div>\r\n              }\r\n            </div>\r\n\r\n            <!-- Sélection Icône -->\r\n            <div class=\"form-group\">\r\n              <label>Icône</label>\r\n              <select\r\n                [(ngModel)]=\"currentType.icon\"\r\n                name=\"icon\"\r\n                required\r\n                #icon=\"ngModel\"\r\n                [class.invalid]=\"icon.invalid && icon.touched\"\r\n              >\r\n                <option value=\"\">Sélectionner une icône</option>\r\n                <option value=\"💊\">💊 Médicaments</option>\r\n                <option value=\"🏥\">🏥 Ordonnance</option>\r\n                <option value=\"🧪\">🧪 Préparations</option>\r\n                <option value=\"🌿\">🌿 Naturel</option>\r\n                <option value=\"🩺\">🩺 Matériel médical</option>\r\n                <option value=\"👶\">👶 Pédiatrie</option>\r\n                <option value=\"🦷\">🦷 Dentaire</option>\r\n                <option value=\"👁️\">👁️ Optique</option>\r\n                <option value=\"🧴\">🧴 Dermocosmétique</option>\r\n                <option value=\"🩹\">🩹 Premiers secours</option>\r\n                <option value=\"♿\">♿ Maintien à domicile</option>\r\n              </select>\r\n              @if (icon.invalid && icon.touched) {\r\n                <div class=\"error-message\">L'icône est requise</div>\r\n              }\r\n            </div>\r\n\r\n            <!-- Checkbox Ordonnance -->\r\n            <div class=\"form-group\">\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  [(ngModel)]=\"currentType.prescription_required\"\r\n                  name=\"prescription_required\"\r\n                >\r\n                Ordonnance requise\r\n              </label>\r\n            </div>\r\n\r\n            <!-- Boutons d'action -->\r\n            <div class=\"form-actions\">\r\n              <button type=\"button\" class=\"cancel-btn\" (click)=\"cancelEdit()\">\r\n                Annuler\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                class=\"confirm-btn\"\r\n                [disabled]=\"typeForm.invalid || !currentType.name || !currentType.description || !currentType.icon\"\r\n              >\r\n                {{ editingType ? 'Modifier' : 'Ajouter' }}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    <!-- Modal de confirmation de suppression -->\r\n    @if (showDeleteModal) {\r\n      <div class=\"modal-overlay\">\r\n        <div class=\"modal-content\">\r\n          <h3>Confirmation de suppression</h3>\r\n          <p>Êtes-vous sûr de vouloir supprimer cette catégorie ?</p>\r\n          <div class=\"form-actions\">\r\n            <button class=\"cancel-btn\" (click)=\"cancelDelete()\">Annuler</button>\r\n            <button class=\"delete-btn\" (click)=\"deleteType()\">Confirmer</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n  `,\r\n  styles: [`\r\n    // Container et Layout\r\n    .types-management {\r\n      padding: 2rem;\r\n    }\r\n\r\n    .page-header h1 {\r\n      font-size: 1.5rem;\r\n      color: #333;\r\n      margin-bottom: 2rem;\r\n    }\r\n\r\n    .types-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 1.5rem;\r\n    }\r\n\r\n    // Carte Type\r\n    .type-card {\r\n      min-height: 150px;\r\n      background: white;\r\n      border: 1px solid #e5e7eb;\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n      transition: all 0.2s;\r\n      padding: 20px;\r\n      margin-bottom: 1rem;\r\n\r\n      &:hover {\r\n        transform: translateY(-2px);\r\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n\r\n        .card-actions {\r\n          opacity: 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Style pour ordonnance requise\r\n    .requires-prescription {\r\n      border-color: #fecaca;\r\n      background: linear-gradient(to bottom, white, #fff5f5);\r\n\r\n      .prescription-badge {\r\n        background: #fee2e2;\r\n        color: #dc2626;\r\n        padding: 0.25rem 0.75rem;\r\n        border-radius: 4px;\r\n        font-size: 0.75rem;\r\n        margin-bottom: 0.5rem;\r\n        display: inline-block;\r\n      }\r\n    }\r\n\r\n    // Contenu carte\r\n    .card-content {\r\n      padding: 1.5rem;\r\n      display: flex;\r\n      gap: 1rem;\r\n      background-color: #ffffff;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n    }\r\n\r\n    // Icône\r\n    .type-icon {\r\n      width: 48px;\r\n      height: 48px;\r\n      background: #f3f4f6;\r\n      border-radius: 8px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 1.5rem;\r\n    }\r\n\r\n    // Détails\r\n    .type-details {\r\n      flex: 1;\r\n\r\n      h3 {\r\n        margin: 0;\r\n        font-size: 1.125rem;\r\n        color: #1f2937;\r\n        font-weight: 600;\r\n      }\r\n\r\n      p {\r\n        margin: 0.5rem 0 0;\r\n        color: #6b7280;\r\n        font-size: 0.875rem;\r\n      }\r\n    }\r\n\r\n    // Boutons d'action\r\n    .card-actions {\r\n      display: flex;\r\n      background: #f9fafb;\r\n      opacity: 0;  // Rendre les boutons toujours visibles\r\n      transition: opacity 0.2s;\r\n      gap: 0.5rem;\r\n      padding: 0; // Supprimer le padding qui peut causer des problèmes d'affichage\r\n\r\n      .action-btn {\r\n        flex: 1;\r\n        padding: 0.5rem;\r\n        border: none;\r\n        border-radius: 4px;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-width: 80px; // Assurer une largeur minimale\r\n\r\n        &.edit {\r\n          background: #4f46e5;\r\n          color: white;\r\n\r\n          &:hover {\r\n            background: #4338ca;\r\n          }\r\n        }\r\n\r\n        &.delete {\r\n          background: #fee2e2;\r\n          color: #dc2626;\r\n\r\n          &:hover {\r\n            background: #fecaca;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .type-card {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      min-height: 180px;\r\n      padding: 1.5rem;\r\n\r\n      .card-content {\r\n        padding: 0;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n    // Carte d'ajout\r\n    .add-card {\r\n      border: 2px dashed #e5e7eb;\r\n      border-radius: 8px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n      transition: all 0.2s;\r\n      min-height: 180px;\r\n\r\n      &:hover {\r\n        border-color: #4f46e5;\r\n        background: #f3f4f6;\r\n\r\n        .add-content {\r\n          color: #4f46e5;\r\n        }\r\n      }\r\n\r\n      .add-content {\r\n        text-align: center;\r\n        color: #6b7280;\r\n        transition: color 0.2s;\r\n\r\n        i {\r\n          font-size: 1.5rem;\r\n          margin-bottom: 0.5rem;\r\n          display: block;\r\n        }\r\n\r\n        span {\r\n          font-size: 0.875rem;\r\n          font-weight: 500;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Modal\r\n    .modal-overlay {\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      z-index: 1000;\r\n    }\r\n\r\n    .modal-content {\r\n      background: white;\r\n      padding: 2rem;\r\n      border-radius: 8px;\r\n      width: 100%;\r\n      max-width: 500px;\r\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    // Formulaire\r\n    .form-group {\r\n      margin-bottom: 1rem;\r\n\r\n      label {\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n        color: #374151;\r\n      }\r\n\r\n      input, select, textarea {\r\n        width: 100%;\r\n        padding: 0.5rem;\r\n        border: 1px solid #d1d5db;\r\n        border-radius: 4px;\r\n      }\r\n    }\r\n\r\n    // États et messages\r\n    .loading-state, .error-state {\r\n      text-align: center;\r\n      padding: 2rem;\r\n    }\r\n\r\n    .error-message {\r\n      color: #dc2626;\r\n      font-size: 0.75rem;\r\n      margin-top: 0.25rem;\r\n    }\r\n\r\n    .error-state {\r\n      color: #dc2626;\r\n    }\r\n\r\n    // Boutons du formulaire\r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;\r\n      margin-top: 2rem;\r\n\r\n      button {\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 4px;\r\n        border: none;\r\n        cursor: pointer;\r\n        transition: all 0.2s;\r\n\r\n        &.cancel-btn {\r\n          background: #f3f4f6;\r\n          color: #4b5563;\r\n        }\r\n\r\n        &.confirm-btn {\r\n          background: #4f46e5;\r\n          color: white;\r\n\r\n          &:disabled {\r\n            background: #9ca3af;\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n\r\n        &.delete-btn {\r\n          background: #dc2626;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  `]})\r\n  export class AdminTypesComponent implements OnInit {\r\n    // Propriétés\r\n    types: Type[] = [];\r\n    loading = false;\r\n    error = '';\r\n    showForm = false;\r\n    showDeleteModal = false;\r\n    editingType: Type | null = null;\r\n    typeToDelete: Type | null = null;\r\n\r\n    currentType: Partial<Type> = {\r\n      name: '',\r\n      description: '',\r\n      icon: '',\r\n      prescription_required: false\r\n    };\r\n\r\n    constructor(\r\n      private typeService: TypeService,\r\n      private notificationService: NotificationService\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n      this.loadTypes();\r\n    }\r\n\r\n    // Chargement des types\r\n    loadTypes(): void {\r\n      this.loading = true;\r\n      this.error = '';\r\n\r\n      this.typeService.getTypes().subscribe({\r\n        next: (types) => {\r\n          this.types = types;\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          this.error = 'Erreur lors du chargement des types';\r\n          this.loading = false;\r\n          console.error('Erreur:', error);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Gestion du formulaire d'ajout\r\n    startAdd(): void {\r\n      this.editingType = null;\r\n      this.resetForm();\r\n      this.showForm = true;\r\n    }\r\n\r\n    // Gestion de la modification\r\n    editType(type: Type): void {\r\n      this.editingType = type;\r\n      this.currentType = {...type};\r\n      this.showForm = true;\r\n    }\r\n\r\n    // Gestion de la suppression\r\n    confirmDelete(type: Type): void {\r\n      this.typeToDelete = type;\r\n      this.showDeleteModal = true;\r\n    }\r\n\r\n    cancelDelete(): void {\r\n      this.typeToDelete = null;\r\n      this.showDeleteModal = false;\r\n    }\r\n\r\n    cancelEdit(): void {\r\n      this.showForm = false;\r\n      this.editingType = null;\r\n      this.resetForm();\r\n    }\r\n\r\n    // Soumission du formulaire\r\n    onSubmit(): void {\r\n      if (!this.currentType.name || !this.currentType.description || !this.currentType.icon) {\r\n        this.notificationService.error('Veuillez remplir tous les champs obligatoires');\r\n        return;\r\n      }\r\n\r\n      if (this.editingType) {\r\n        this.updateExistingType();\r\n      } else {\r\n        this.createNewType();\r\n      }\r\n    }\r\n\r\n    private updateExistingType(): void {\r\n      if (!this.editingType) return;\r\n\r\n      this.typeService.updateType(this.editingType.id_type, this.currentType).subscribe({\r\n        next: () => {\r\n          this.notificationService.success('Type modifié avec succès');\r\n          this.loadTypes();\r\n          this.cancelEdit();\r\n        },\r\n        error: (error) => {\r\n          if (error.status === 409) {\r\n            this.notificationService.error('Ce type existe déjà');\r\n          } else {\r\n            this.notificationService.error('Erreur lors de la modification');\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    private createNewType(): void {\r\n      this.typeService.getTypes().subscribe(types => {\r\n        const exists = types.some(t =>\r\n          t.name.toLowerCase() === this.currentType.name?.toLowerCase()\r\n        );\r\n\r\n        if (exists) {\r\n          this.notificationService.error('Ce type existe déjà');\r\n          return;\r\n        }\r\n\r\n        this.typeService.createType(this.currentType).subscribe({\r\n          next: () => {\r\n            this.notificationService.success('Type ajouté avec succès');\r\n            this.loadTypes();\r\n            this.cancelEdit();\r\n          },\r\n          error: () => {\r\n            this.notificationService.error('Erreur lors de la création');\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    // Suppression d'un type\r\n    deleteType(): void {\r\n      if (!this.typeToDelete) return;\r\n\r\n      this.loading = true;\r\n      this.typeService.deleteType(this.typeToDelete.id_type).subscribe({\r\n        next: () => {\r\n          this.notificationService.success('Type supprimé avec succès');\r\n          this.loadTypes();\r\n          this.cancelDelete();\r\n        },\r\n        error: (error) => {\r\n          if (error.status === 409) {\r\n            this.notificationService.error(\r\n              'Ce type ne peut pas être supprimé car il est associé à des produits'\r\n            );\r\n          } else {\r\n            this.notificationService.error('Erreur lors de la suppression');\r\n          }\r\n        },\r\n        complete: () => {\r\n          this.loading = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Réinitialisation du formulaire\r\n    private resetForm(): void {\r\n      this.currentType = {\r\n        name: '',\r\n        description: '',\r\n        icon: '',\r\n        prescription_required: false\r\n      };\r\n    }\r\n  }\r\n\r\n", "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AuthService } from '../../../../services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  template: `\r\n    <div class=\"admin-layout\">\r\n      <nav class=\"sidebar\">\r\n        <div class=\"logo\">\r\n          <h1>GOHAN-MED Admin</h1>\r\n          <p>Espace Admin</p>\r\n        </div>\r\n        <ul class=\"nav-links\">\r\n          <li><a routerLink=\"categories\" routerLinkActive=\"active\">Catégories</a></li>\r\n          <li><a routerLink=\"products\" routerLinkActive=\"active\">Médicaments</a></li>\r\n          <li><a routerLink=\"services\" routerLinkActive=\"active\">Services</a></li>\r\n          <li><a routerLink=\"prescriptions\" routerLinkActive=\"active\">Ordonnances</a></li>\r\n          <li><a routerLink=\"manufacturing\" routerLinkActive=\"active\">Préparations</a></li>\r\n          <li><a routerLink=\"orders\" routerLinkActive=\"active\">Commandes</a></li>\r\n          <li><a routerLink=\"clients\" routerLinkActive=\"active\">Clients</a></li>\r\n          <li><a routerLink=\"stock\" routerLinkActive=\"active\">Stock</a></li>\r\n          <li><a routerLink=\"appointments\" routerLinkActive=\"active\">Rendez-vous</a></li>\r\n        </ul>\r\n        <div class=\"logout\">\r\n          <button (click)=\"logout()\" class=\"logout-btn\">Se déconnecter</button>\r\n        </div>\r\n      </nav>\r\n      <main class=\"main-content\">\r\n        <router-outlet></router-outlet>\r\n      </main>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .admin-layout {\r\n      display: flex;\r\n      min-height: 100vh;\r\n    }\r\n    .sidebar {\r\n      width: 250px;\r\n      background: #0066CC;\r\n      padding: 1.5rem;\r\n      color: #f0f0f0;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .logo {\r\n      padding: 1rem;\r\n      text-align: center;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n      margin-bottom: 1rem;\r\n\r\n      h1 {\r\n        font-size: 1.5rem;\r\n        margin: 0;\r\n        color: white;\r\n      }\r\n    }\r\n    .nav-links {\r\n      list-style: none;\r\n      padding: 0;\r\n      margin: 0;\r\n      flex: 1;\r\n    }\r\n    .nav-links li a {\r\n      display: block;\r\n      padding: 0.75rem 1rem;\r\n      color: #f0f0f0;\r\n      text-decoration: none;\r\n      border-radius: 6px;\r\n      margin-bottom: 0.5rem;\r\n      transition: all 0.2s ease;\r\n    }\r\n    .nav-links li a:hover {\r\n      background: rgba(255, 255, 255, 0.15);\r\n      transform: translateY(-1px);\r\n    }\r\n    .nav-links li a.active {\r\n      background: rgba(255, 255, 255, 0.2);\r\n      color: #ffffff;\r\n      font-weight: bold;\r\n    }\r\n    .logout {\r\n      padding-top: 1rem;\r\n      border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n    .logout-btn {\r\n      width: 100%;\r\n      padding: 0.75rem;\r\n      background: none;\r\n      color: #FFD2D2;\r\n      border: 1px solid #FFD2D2;\r\n      border-radius: 6px;\r\n      cursor: pointer;\r\n      font-weight: bold;\r\n      transition: all 0.2s ease;\r\n\r\n      &:hover {\r\n        background: rgba(255, 210, 210, 0.1);\r\n        color: white;\r\n      }\r\n    }\r\n    .main-content {\r\n      flex: 1;\r\n      padding: 2rem;\r\n      background: #f8fafc;\r\n      overflow-y: auto;\r\n    }\r\n  `]\r\n})\r\nexport class AdminDashboardComponent {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  logout() {\r\n    if (confirm('Êtes-vous sûr de vouloir vous déconnecter ?')) {\r\n      this.authService.logout();\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n}\r\n", "// Composant pour la gestion admin des fabrications\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ManufacturingService } from '../../../../../services/manufacturing/manufacturing.service';\r\nimport { Manufacturing, ManufacturingStatus } from '../../../../../models/manufacturing/manufacturing.model';\r\nimport { NotificationService } from '../../../../../services/notification/notification.service';\r\nimport { ManufacturingNotificationService } from '../../../../../services/manufacturing/manufacturing-notification.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-manufacturing-list',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"manufacturing-list\">\r\n      <h2>Gestion des Fabrications</h2>\r\n      \r\n      @if (loading) {\r\n        <div class=\"loading\">Chargement...</div>\r\n      }\r\n\r\n      @if (!loading && manufacturingItems.length > 0) {\r\n        <div class=\"items-grid\">\r\n          @for (item of manufacturingItems; track item.id) {\r\n            <div class=\"fabrication-item\">\r\n              <div class=\"header\">\r\n                <div class=\"title\">Fabrication #{{item.id}}</div>\r\n                <div class=\"meta\">\r\n                  <div class=\"date\">{{item.createdAt | date:'dd/MM/yyyy'}}</div>\r\n                  <div class=\"status\" [attr.data-status]=\"item.status\">\r\n                    {{getStatusLabel(item.status)}}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"content\">\r\n                <div class=\"type\">Type: {{item.type}}</div>\r\n                <select [value]=\"item.status\" (change)=\"updateStatus(item.id, $event)\">\r\n                  <option value=\"EN_ATTENTE_ACOMPTE\">En attente d'acompte</option>\r\n                  <option value=\"ACOMPTE_PAYE\">Acompte payé</option>\r\n                  <option value=\"EN_FABRICATION\">En fabrication</option>\r\n                  <option value=\"PRET\">Prêt</option>\r\n                  <option value=\"TERMINE\">Terminé</option>\r\n                </select>\r\n                <button class=\"btn-details\" (click)=\"viewDetails(item.id)\">\r\n                  Voir détails\r\n                </button>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .manufacturing-list {\r\n      padding: 24px;\r\n      max-width: 1400px;\r\n      margin: 0 auto;\r\n      background: #f8f9fa;\r\n    }\r\n\r\n    h2 {\r\n      color: #2c3e50;\r\n      font-size: 24px;\r\n      margin-bottom: 24px;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .items-grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));\r\n      gap: 24px;\r\n    }\r\n\r\n    .fabrication-item {\r\n      background: white;\r\n      border-radius: 12px;\r\n      box-shadow: 0 2px 8px rgba(0,0,0,0.06);\r\n      overflow: hidden;\r\n      transition: transform 0.2s, box-shadow 0.2s;\r\n    }\r\n\r\n    .fabrication-item:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .header {\r\n      padding: 20px;\r\n      background: #fff;\r\n      border-bottom: 1px solid #eef2f7;\r\n    }\r\n\r\n    .title {\r\n      color: #2c3e50;\r\n      font-size: 1.1em;\r\n      font-weight: 600;\r\n      margin-bottom: 12px;\r\n    }\r\n\r\n    .meta {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n\r\n    .date {\r\n      color: #64748b;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .status {\r\n      padding: 6px 12px;\r\n      border-radius: 6px;\r\n      font-size: 0.85em;\r\n      font-weight: 500;\r\n    }\r\n\r\n    /* Styles pour tous les statuts */\r\n    .status[data-status=\"EN_ATTENTE_ACOMPTE\"] {\r\n      background-color: #f97316;  /* Orange */\r\n      color: white;\r\n    }\r\n\r\n    .status[data-status=\"ACOMPTE_PAYE\"] {\r\n      background-color: #f3f4f6;  /* Gris clair */\r\n      color: #4b5563;\r\n      border: 1px solid #e5e7eb;\r\n    }\r\n\r\n    .status[data-status=\"EN_FABRICATION\"] {\r\n      background-color: #2196F3;  /* Bleu */\r\n      color: white;\r\n    }\r\n\r\n    .status[data-status=\"PRET\"] {\r\n      background-color: #10b981;  /* Vert */\r\n      color: white;\r\n    }\r\n\r\n    .status[data-status=\"TERMINE\"] {\r\n      background-color: #6b7280;  /* Gris foncé */\r\n      color: white;\r\n    }\r\n\r\n    .content {\r\n      padding: 20px;\r\n    }\r\n\r\n    .type {\r\n      color: #475569;\r\n      margin-bottom: 16px;\r\n      font-weight: 500;\r\n    }\r\n\r\n    select {\r\n      width: 100%;\r\n      padding: 10px 12px;\r\n      border: 1px solid #e2e8f0;\r\n      border-radius: 8px;\r\n      font-size: 0.95em;\r\n      color: #475569;\r\n      background-color: white;\r\n      margin-bottom: 16px;\r\n      transition: all 0.2s;\r\n    }\r\n\r\n    select:focus {\r\n      outline: none;\r\n      border-color: #93c5fd;\r\n      box-shadow: 0 0 0 3px rgba(147,197,253,0.25);\r\n    }\r\n\r\n    /* Bouton orange */\r\n    .btn-details {\r\n      display: inline-block;\r\n      padding: 8px 16px;\r\n      background: #f97316;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 6px;\r\n      font-size: 0.9em;\r\n      font-weight: 500;\r\n      cursor: pointer;\r\n      transition: all 0.2s;\r\n    }\r\n\r\n    .btn-details:hover {\r\n      background: #ea580c;\r\n      transform: translateY(-1px);\r\n    }\r\n\r\n    .loading {\r\n      text-align: center;\r\n      padding: 40px;\r\n      color: #64748b;\r\n    }\r\n\r\n    .empty-state {\r\n      text-align: center;\r\n      padding: 40px;\r\n      color: #64748b;\r\n      background: white;\r\n      border-radius: 12px;\r\n      margin-top: 24px;\r\n    }\r\n  `]\r\n})\r\nexport class AdminManufacturingListComponent implements OnInit {\r\n  manufacturingItems: Manufacturing[] = [];\r\n  loading = true;\r\n\r\n  constructor(\r\n    private manufacturingService: ManufacturingService,\r\n    private notificationService: NotificationService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loadManufacturingItems();\r\n  }\r\n\r\n  loadManufacturingItems() {\r\n    this.loading = true;\r\n    this.manufacturingService.getAllManufacturingItems().subscribe({\r\n      next: (items) => {\r\n        this.manufacturingItems = items;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur chargement fabrications:', error);\r\n        this.notificationService.error('Erreur lors du chargement des fabrications');\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getStatusLabel(status: ManufacturingStatus): string {\r\n    const statusMap = {\r\n      'EN_ATTENTE_ACOMPTE': 'En attente d\\'acompte',\r\n      'ACOMPTE_PAYE': 'Acompte payé',\r\n      'EN_FABRICATION': 'En fabrication',\r\n      'PRET': 'Prêt',\r\n      'TERMINE': 'Terminé'\r\n    };\r\n    return statusMap[status] || 'Inconnu';\r\n  }\r\n\r\n  updateStatus(id: number, event: Event) {\r\n    const newStatus = (event.target as HTMLSelectElement).value as ManufacturingStatus;\r\n    \r\n    this.manufacturingService.updateManufacturingStatus(id, newStatus).subscribe({\r\n      next: (updatedManufacturing) => {\r\n        this.manufacturingItems = this.manufacturingItems.map(item => \r\n          item.id === id ? {...item, status: newStatus} : item\r\n        );\r\n        this.notificationService.success('Statut mis à jour avec succès');\r\n      },\r\n      error: (error) => {\r\n        console.error('Erreur mise à jour statut:', error);\r\n        this.notificationService.error('Erreur lors de la mise à jour du statut');\r\n      }\r\n    });\r\n  }\r\n\r\n  viewDetails(id: number) {\r\n    console.log('Voir détails de la fabrication:', id);\r\n  }\r\n} ", "// Importation du type Routes d'Angular pour la configuration des routes\r\nimport { Routes } from '@angular/router';\r\n\r\n// Importation des composants administratifs\r\nimport { AdminOrdersComponent } from './orders/admin-orders.component';\r\nimport { AdminClientsComponent } from './clients/admin-clients.component';\r\nimport { AdminServicesComponent } from './services/admin-service.component';\r\nimport { AdminAppointmentsComponent } from './appointments/admin-appointments.component';\r\nimport { AdminProductFormComponent } from './products/product-form/admin-product-form.component';\r\nimport { AdminProductsComponent } from './products/admin-products.component';\r\nimport { AdminTypeFormComponent } from './type/type-form/admin-type-form.component';\r\nimport { AdminTypesComponent } from './type/admin-types.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard.component';\r\nimport { AdminManufacturingListComponent } from './manufacturing/admin-manufacturing-list.component';\r\n\r\n// Configuration des routes administratives\r\nexport const adminRoutes: Routes = [\r\n  {\r\n    path: '', // Route racine admin\r\n    component: AdminDashboardComponent, // Composant principal du dashboard\r\n    children: [ // Routes enfants (sous-routes)\r\n      {\r\n        path: '', // Route par défaut\r\n        redirectTo: 'types', // Redirection vers la page des types\r\n        pathMatch: 'full' // Correspondance exacte du chemin\r\n      },\r\n      {\r\n        path: 'categories', // Route pour la gestion des catégories\r\n        component: AdminTypesComponent\r\n      },\r\n      {\r\n        path: 'types/add', // Route pour l'ajout d'une catégorie\r\n        component: AdminTypeFormComponent\r\n      },\r\n      {\r\n        path: 'types/edit/:id', // Route pour l'édition d'une catégorie avec paramètre id\r\n        component: AdminTypeFormComponent\r\n      },\r\n      {\r\n        path: 'products', // Route pour la gestion des produits\r\n        component: AdminProductsComponent\r\n      },\r\n      {\r\n        path: 'products/add', // Route pour l'ajout d'un produit\r\n        component: AdminProductFormComponent\r\n      },\r\n      {\r\n        path: 'products/edit/:id', // Route pour l'édition d'un produit avec paramètre id\r\n        component: AdminProductFormComponent\r\n      },\r\n      {\r\n        path: 'orders', // Route pour la gestion des commandes\r\n        component: AdminOrdersComponent\r\n      },\r\n      {\r\n        path: 'clients', // Route pour la gestion des clients\r\n        component: AdminClientsComponent\r\n      },\r\n      {\r\n        path: 'services', // Route pour la gestion des services\r\n        component: AdminServicesComponent\r\n      },\r\n      {\r\n        path: 'appointments', // Route pour la gestion des rendez-vous\r\n        component: AdminAppointmentsComponent\r\n      },\r\n      {\r\n        path: 'manufacturing', // Route pour la gestion des fabrications\r\n        component: AdminManufacturingListComponent\r\n      }\r\n    ]\r\n  }\r\n];"],
  "mappings": "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",
  "names": ["OrderStatus", "AppointmentStatus", "_forTrack0", "_forTrack0", "_forTrack0"]
}
